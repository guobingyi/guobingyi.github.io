<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blog on guobingyi</title>
    <link>https://guobingyi.github.io/blog/</link>
    <description>Recent content in Blog on guobingyi</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Wed, 09 Nov 2022 10:38:42 +0800</lastBuildDate><atom:link href="https://guobingyi.github.io/blog/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>See you again Delphi</title>
      <link>https://guobingyi.github.io/blog/see-you-again-delphi/</link>
      <pubDate>Wed, 09 Nov 2022 10:38:42 +0800</pubDate>
      
      <guid>https://guobingyi.github.io/blog/see-you-again-delphi/</guid>
      <description>再次遇到你 Delphi 第一份工作，最喜欢的IDE
最近在回忆些事情，同时也在学习python语言，但是就在这个时候，我在寻找一个省电的文本编辑器的时候，无意间发现了Delphi的替代工具lazarus。lazarus,源自《圣经》中耶稣让已死去的拉撒路复活的故事。lazarus官网有非常详细的资料，对于我来说，真的是太高兴了。
原本，一直都期望在换了苹果笔记本后，可以继续写一写原来的代码，可以不为了工作而去写一写代码。现在，这些愿望都快要实现了，感谢大牛们的持续努力。微软的dotnet跨平台后，C#语言在macOS下也可以编译执行，现在连Delphi也可以玩一玩了，真开心，像极了黑暗破坏神的重制版。当然了，pascal语言一直都在，只不过我没有关注了。现在，可以在macOS下写一写pascal语言，而且和当初使用Delphi的感觉是那么相似。
曾经在怀念的时候，去过Delphi的官网看过，但是由于需要授权，被成功劝退了。现在突然有这样的一个工具，我非常欣喜，可以在macOS下写和Delphi一样的语言，倍感亲切。第一时间下载下来，满怀期待。
在下载中发现sourceforge.net下载很慢，我第一时间想到迅雷，可是最近的迅雷都要会员才能加速。无奈之下问了问百度，有网友说在下载的时候重新选择一下镜像，结果速度飞快。非常不喜欢被迅雷玩弄的感觉，但是却不能自己写一个？我想或许可以考虑一下了。
下载有三个文件：
fpc-3.2.2.intelarm64-macosx.dmg fpc-src-3.2.2-20210709-macosx.dmg Lazarus-2.2.4-0-x86_64-macosx.pkg 安装顺序和上面的顺序一致，即可。也可以参阅官网文档。
因为使用gdb进行调试，而苹果电脑却不给普通用户使用，可以加sudo来操作，可是lazarus没有地方调试，所以呢去问百度，最后找到了gdb签名的办法，可是我这里行不通，在最后关头，想到了官网查询文档，结果还真有。官网的做法是使用lldb替代gdb。详细说明在这里。
最终如愿以偿，在macOS上运行了lazarus。当然了，现在还有其他的工作要做，先把python学习一下，我这个跳来跳去的也不是个办法，先一个一个解决吧！在看到lazarus之前，我居然把多年前用到的netbean下载下来，看到可以拖拉的Swing控件，我笑了，原来Java也可以这样操作～～。</description>
    </item>
    
    <item>
      <title>Quitsomking</title>
      <link>https://guobingyi.github.io/blog/quitsomking/</link>
      <pubDate>Sat, 08 Oct 2022 21:56:37 +0800</pubDate>
      
      <guid>https://guobingyi.github.io/blog/quitsomking/</guid>
      <description>戒烟 海象说：“是时候改变了！”
不知道自己戒烟了多少次，每次都有理由重新吸起来。难道烟就真的那么有吸引力吗？我想不是。而是自己为吸而找的理由，最多的理由是她陪伴自己的时间比较多，也是自己的时间。那么，现在是什么理由让我戒掉呢？我想，是身体告诉我的。最近的一次身体不适是肾结石中的石头自己掉下来，在疼痛的那个晚上，我想到了人在生病的时候是没有尊严的。毕竟，疼的时候只有自己知道，也只有自己知道舒服的时候是什么样的状态，那个时候不想抽烟，即使抽了，身体也诚实的告诉你，她并不能为你改变什么，甚至让你更加难受～～。
慢慢的，我开始去感受身体给我信号，我才发现身体已经不像以前那样，逐渐的开始走下坡路。抽烟对于我来说是一种习惯，当开心的时候来一只，当难过的时候来一只。每次抽烟的时候好像都有一种解脱的感觉，每次都被赋予了不一样的使命。逐渐的，抽烟并不是为了摄取尼古丁，而是变成了神圣的使命一样。
我开始讨厌这种感觉，但是又离不开这种感觉。因为，生活上的改变让自己一下子无法适应，也让自己无法安心。</description>
    </item>
    
    <item>
      <title>Become_an_iOS_developer_in_2022</title>
      <link>https://guobingyi.github.io/blog/become_an_ios_developer_in_2022/</link>
      <pubDate>Sat, 20 Aug 2022 11:18:06 +0800</pubDate>
      
      <guid>https://guobingyi.github.io/blog/become_an_ios_developer_in_2022/</guid>
      <description>在2022年成为一个苹果开发人员 一切都不是空穴来风，我已经蓄谋已久。
缘起 因为一切都是那么自然，我糊里糊涂的上了计算机的大学。为了曾经的梦想，我选择了做一名程序员。在这个行业里待了许久，曾经的梦想也被现实打败，我不得不为了生活，而做出选择。
调整了一段时间，做出了一个选择，生了二胎，上天的恩赐，双胞胎。在疫情期间，我不断的问自己，我的梦想是什么？
老婆经常问我，我到底想干什么？我不知道，直到最近，我想清楚了，我到底要干什么？
想做一个自由职业者，那么最近的目标是什么？我想，是做一名苹果开发者。
学习，生活，带来给我的是开发技能的不断提升，有了1万小时的学习，我知道，我对我目前所掌握的技能有信心。
可是，原来是为了生活不得不把时间放在工作上，而工作上的技能却又让我知道，我得花时间来学习苹果开发。终于在最后的一份工作中，可以使用了苹果电脑。那个时候，是幸福的，因为离自己的梦想越来越近。
后来，生活又让我不得不离开，我的生活中没有了电脑。那个时候，我也错误的觉得，我是幸福的。
最后，我从梦中醒来，我知道我需要什么。
开始 从拥有了苹果笔记本后，到现在7年的时间，断断续续的学习，都没有今天那么透彻的领悟。
刚刚开始，被苹果的文档搞的非常崩溃，因为没有对比就没有伤害。和微软的文档对比起来，真的是，让我这么看呢？
原来一直以为微软，Oracle，Google更新的非常快，现在看看苹果，我真是好天真。这货一年两次的速度，是恒定不变的呀。从我认识swift开始，到现在的swiftUI，我都经历了什么？
开始使用的拖拉方式编程，到现在的定义编程，真的，越来越方便多了。
一直在看白胡子老师的课程,到现在都没有听完🤦‍♂️。
至今都没有写出个可以拿的出手的东西，android起码还写了个动物的叫声给宝贝玩一下。
现在，有了自己的时间，并且swiftUI的到来，是时候学习起来了。
读完如何在2021成为一个苹果开发者这篇文章让我信心大增，读完之后对作者非常崇拜，目前就跟随他学习，希望在100天之后，技能有所精进。我也会开一个栏目，专门来记录这100天的成果。</description>
    </item>
    
    <item>
      <title>少儿编程</title>
      <link>https://guobingyi.github.io/blog/%E5%B0%91%E5%84%BF%E7%BC%96%E7%A8%8B/</link>
      <pubDate>Wed, 29 Jun 2022 21:33:34 +0800</pubDate>
      
      <guid>https://guobingyi.github.io/blog/%E5%B0%91%E5%84%BF%E7%BC%96%E7%A8%8B/</guid>
      <description>少儿编程 连乔布斯的话都引用进来了，每个人都应该学会编程。
不可否认，编程是好，但是不致于这样。好比，你觉得肉吃得香，不能让素食者也这样认为吧，不强人所难。
少儿编程，玩玩还行，别入戏太深！
以下是培训的内容，大概做了个笔记：
培训主要内容： 1.自我观念设限 自信孩子永远在找方法，解决问题，达成目标。 父母的语言是孩子一生的魔咒。 打开孩子限制性概念的方法： 扩大孩子的优势 放大孩子的优点 你鼓励什么，就会收获什么。 源头：逻辑思维能力和动手能力。（如何去培养？） 一、做家务 爱动手的孩子， 学会爱家人。 黎明即起，洒扫庭除。 小学阶段两大重点： 一、培养良好的习惯 二、提升逻辑思维能力 逻辑思维能力是智力的核心。 1.分解能力（表现） 例子：鸡兔同笼 方法：少儿编程。 为什么要学编程？ 一、时代发展需求 二、国际政策的支持 三、真的对孩子好 （1）动画式的游戏学习方法 （2）从玩游戏变成戒游戏？ 2.总结归纳 3.抽象能力 4.算法能力 -----------家长们的神回复----------- 少儿编程？核桃编程10节课 感恩有你 9.9 100个名额，10000个家长！ 家长很有执行力，成功抢到了课程！ 不看广告，看疗效！ 助教老师赶紧上链接，怎么9.9的课买不到？不要999，不要99，只要9.9，赶紧上链接。 成功在百忙之中，看了一场直播带货课，孩子学会了用手机如何抢9.9的课程。 卖课的老师非常拼呀！ 讲课5分钟，卖课半小时，厉害！！！ 家长收到通知，要求听课，学习直播课程内容。原本都是老婆大人弄的，但是今天却让我去听，我抱着学习的态度去学习的，居然讲编程的，我想笑。
直播老师刚刚开始讲的很好，抛出现在学生们都存的问题，就是作业做得时间晚，拖拉。“想不想解决孩子的这些问题呀！”，直播老师非常自信的说，想的扣个666，看来直播老师非常同步现在的直播，还好我也看过点直播，老婆经常看直播，我就听着。大道理说完，告诉大家解决这些问题，你们的孩子需要学习少儿编程，我一听口味就变了。我去，这个都能有联系。直播老师说，在编程的时候，一行一行代码进行调试，让孩子有条理性，代码问题，让孩子思考，解决孩子处理问题的能力。少儿编程让孩子看着动画，完成编程项目，戒掉游戏。被听的美滋滋的，原来编程还有这么多的好处呀！回想起自己编程的时候，要一行一行的调试代码，那种痛苦，只有真正写代码的人知道，不为了老板的钱，如愿意这样做吗？太命苦了，所以同行诅咒别人的话是，让你的后代也是程序员。条理性是有了，但是心态了。代码有问题，我们都会用google,baidu。基本上看着都能解决问题，但是现在不是什么都收费吗？你要看这么处理的好吧，来个免费会员，咱们再充个钱。tmd都要钱不要脸了。托瓦兹说的好，免费的好。看动画编程，会有游戏好玩？谁不是赶紧编写玩代码，玩游戏？
哎，只能说，低估了彼此的智商。
养育孩子不易！</description>
    </item>
    
    <item>
      <title>如何安装新系统</title>
      <link>https://guobingyi.github.io/blog/%E5%A6%82%E4%BD%95%E5%AE%89%E8%A3%85%E6%96%B0%E7%B3%BB%E7%BB%9F/</link>
      <pubDate>Tue, 21 Jun 2022 17:45:08 +0800</pubDate>
      
      <guid>https://guobingyi.github.io/blog/%E5%A6%82%E4%BD%95%E5%AE%89%E8%A3%85%E6%96%B0%E7%B3%BB%E7%BB%9F/</guid>
      <description>如何安装新系统 貌似，学习计算机的，都得会安装操作系统？
现在安装操作系统容易多了，网上一搜，一大片安装操作系统的方法，如大白菜，深度，老挑毛等，只要准备一个U盘，再找一个ghost的操作系统，直接安装就好了。当然，硬件不能出问题，如果出现了问题还真不行。不会处理硬件上的问题，是一个痛。
现在不是讲如何安装操作系统的，而是对自己安装操作系统的一个回顾。
2006年毕业，到现在自己安装了多少次操作系统，或许都已经忘的差不多了，但是总有一些记忆挥之不去。那就是，你是学习计算机的，你就会安装操作系统。不可否认，我们学习计算机的，会安装操作系统，但是我们不是电脑城里的电脑工作人员，他们的主要工作就是安装操作系统，提供电脑的各种疑难杂症，进行处理。我每次介绍自己的时候，我说我是程序员，我做软件开发。但是，对方都会认为我就是维修电脑，安装操作系统的人，可以想象，他们遇到的人，就是电脑城里的系统维护人员。所以，电脑出现了问题，想到有这样的一个朋友，或者认识的人，他们都会找到你，让你帮他们修理电脑，准确的说，更多的就是安装操作系统，因为硬件出现了问题，我真的就搞不定了。一次两次之后，他们的电脑出现了问题，让你帮忙修理，而且还会推荐给他们的朋友，这样一来，你就真的成为了系统维护人员了。但是，我的工作性质不在这里，所以遇到了比安装操作系统更难的问题时，比如硬件出现了问题，我搞不定，他们就说你的技术不行，恩，是的，在他们的评价机制里，这个”不行“。
后来，我不接这样的工作了，并不是我矫情，而是我觉得出力不讨好的事情，不做了。或许是年龄大了，也或许是圈子广了，不屑通过这样的方式来推广自己了。
现在，用macOS后，什么操作系统，就更不会安装了。</description>
    </item>
    
    <item>
      <title>Otheridea</title>
      <link>https://guobingyi.github.io/blog/otheridea/</link>
      <pubDate>Thu, 16 Sep 2021 20:31:23 +0800</pubDate>
      
      <guid>https://guobingyi.github.io/blog/otheridea/</guid>
      <description>杂感一篇 最终被别人的引导所折服，原来自己的学生生涯是这样度过的。别人在玩的时候，我在玩。别人在玩的时候，我依然再玩。我居然玩不够。而我也因此要吃吃的苦。我补习三年，最终到一个三线城市读完本科。找到一家公司，从最底层的小工开始奋斗。历经13年，最终到房子被占告终。我13年吃尽了别人未曾经历的苦，看惯了别人的冷嘲热讽，依旧奋斗。最终落下病根，成为了一名糖尿病患者。我后悔吗？没有。至少现在如此。生活总会教会你成长，也会让你有所得失。 我该恨当初的自己吗？或许该，也或许不该。漫长的人生可以是一辈子，也可以是短暂的生命终结。看到有些人在耗费自己的人生，也看到有些人在诠释自己的人生。可悲的是，耗费人生的有很长的时间，诠释人生的却只有少量的时间。这难到又有对与错之分吗？每每想到这些，都会想到自己的渺小与无奈。与其这样，不如那样，什么才是对的呢？无对错之分！唯独坚守自己的信念，告诉自己，顺势而为。 </description>
    </item>
    
    <item>
      <title>Howtoleanenglish</title>
      <link>https://guobingyi.github.io/blog/howtoleanenglish/</link>
      <pubDate>Tue, 03 Aug 2021 14:56:49 +0800</pubDate>
      
      <guid>https://guobingyi.github.io/blog/howtoleanenglish/</guid>
      <description>How to Learn English 以其在不断的纠结中学习，不如从现在开始。
本文摘自youtube上的学习计划，原视频在这里。
You won&amp;rsquo;t of course use your entire study time each day just focusing on one thing, but you will spend the majority of time each day focusing on one aspect of learning English.
✅Here is the plan:
THINGS YOU WILL NEED:
1 hour per day (30 minutes will work as well). a notebook and a pen to write down new vocabulary each day. an English song.</description>
    </item>
    
    <item>
      <title>Photoshop</title>
      <link>https://guobingyi.github.io/blog/photoshop/</link>
      <pubDate>Tue, 09 Mar 2021 08:45:40 +0800</pubDate>
      
      <guid>https://guobingyi.github.io/blog/photoshop/</guid>
      <description>photoshop 学习记录 1. mac如何禁止adobe creative cloud开机自启? 打开终端，禁止开机自启：
launchctl unload -w /Library/LaunchAgents/com.adobe.AdobeCreativeCloud.plist 恢复自启：
launchctl load -w /Library/LaunchAgents/com.adobe.AdobeCreativeCloud.plist 2. 常用快捷键 Command + D 取消选择模块 [ （右括号）用来改变大小，变小，如画笔的大小 ]（左括号）用来改变大小，变大，如画笔的大小 option 键用来改变相对的作用，如放大，缩小等。 F12 图像恢复，所有的更改都变为zero </description>
    </item>
    
    <item>
      <title>2021start</title>
      <link>https://guobingyi.github.io/blog/2021start/</link>
      <pubDate>Mon, 01 Mar 2021 10:09:53 +0800</pubDate>
      
      <guid>https://guobingyi.github.io/blog/2021start/</guid>
      <description>2021 开始 2020过去了，2021来了。我准备好了。
新的一年，新的开始。
我或许从未想过自己会接触一个不熟悉的行业，我也从未想过要自己的主业变成了副业。但是，真的就这样发生了。</description>
    </item>
    
    <item>
      <title>怀念 Delphi</title>
      <link>https://guobingyi.github.io/blog/%E6%80%80%E5%BF%B5-delphi/</link>
      <pubDate>Wed, 13 Jan 2021 16:45:23 +0800</pubDate>
      
      <guid>https://guobingyi.github.io/blog/%E6%80%80%E5%BF%B5-delphi/</guid>
      <description>Delphi 由美国Borland（宝兰）公司于1995年开发。
最早使用Delphi的时候是小多告诉我的，那个时候他们在进行毕业论文的编写。我对Delphi的第一感受是全英文的界面，感觉好复杂的样子。那个时候我还在使用VB6，感觉这个IDE太好用了，而且市面上的书，大多数都是介绍VB6和Delphi的。而我选择了VB6，因为姜老师让我和他一起做开发的时候，我们都用VB6。所以，相当长的时间里，我都是用VB6来进行开发，到毕业的时候，终于使用上了VB.net。
感觉生活总在开玩笑一样，为了毕业能找到一份工作，我大四的上学期开始为准备找工作而准备。我去了一家叫金峰的公司，他们使用Java开发，并且要求大学英语四级。而我呢？第一，大学没有考过四级；第二，我只是简单的学过Java。结果可想而知，所以，我在爱因森报了Java的程序员考试。当我拿到证书的时候，再去找工作的时候，我找到的工作是使用VB6和Delphi开发客运系统。
VB6相对还比较熟悉，但是Delphi就相对有点生疏。还好，面试工作顺利过关，并且接受了下周去出差的工作。慢慢的，熟悉起Delphi的开发工作，IDE使用的黄色字体，给人感觉写代码就像很有成就感。那个时候的网络资源并不如现在那么丰富，很多资料都必须问前辈，或者读书。那个时候，前辈们相对知道的也少，很多时候都需要自己去验证。但是，更多的时候却是一个人读书，看前人的代码来编写。
最初，因为工作的缘故，先熟悉VB6的代码，因为有过经验，所以相对上手快些，但是后面却发现VB6的代码开始苦涩，并且非常不易维护，很多漂亮的界面都是在Delphi下完成的，那个时候还不知道什么优化代码，只是知道界面漂亮，功能完整就可以了。逐渐的开始去修改Delphi的代码，才发现很多的模块化概念被补了上来，买了刘艺的一些Delphi书籍，每次出差都背着去，反而每次都没有读几页，那个时候，就是熟悉业务，修改功能，部署，培训。突然会一下子觉得自己不是程序员，而是维护人员，这个坎，在数年后才能够释怀。
或许是第一次踏入工作，所以会对工作中使用到的IDE特别怀念，也因为Delphi那个时候的风靡，才会让自己对程序工作那么入迷。也许自己走的路和别人都不一样，自己从开始就抱着要写一辈子的代码，在程序的路上走得更远。所以，不断的去尝试，也不断的去改变。
那个时候，写Delphi的时候要安装各种第三方的包，而我也在和向工的指导下完成了安装工作，也因为这个事被领导表扬过。但是，自己的学校问题，还是让自己没有能主导去开发一个项目，都在外围协助。每当打开Delphi的IDE后，金色的字体，每写一段代码都让人感觉像金子一样精贵。经验不足，每次都不去看原来的代码，总要去看新的，总要去尝试别的语言，总想学习很多的知识，所以基础总感觉不牢固。也因为这样，辞去第一份工作去找工作的时候，那个易佳的老大说我是个什么都会点，但是什么都不精的时候，我很郁闷。我也因为那个漂亮的前台姐姐想留下来好好干一番事业，可惜，在电梯间遇到了昨天来面试的人，说这个老板不讲信誉，今天让他来上班的，可是今天让他回家等通知。易佳的老大说要带我去广州，做房地产的项目，说他带的弟子不踏实，总以为什么都会了，让我低调的学习做事。结果这么一出，我又去面试了第二家公司，一凡。那个时候，终于学会了用VB.NET，当然对C#也有所了解。你知道的，Delphi的总设计师（Anders Hejlsberg），去为微软，开发了C#来对抗Java。我很记得是刘华面试的我，他找了一台电脑让我写一个GURD的Asp.net的页面，可惜IIS怎么也部署不起来，老刘自己也搞不定，然后就让我写伪代码，然后讲给他听。或许因为自己的摸索，终于顺利过关。在上班的第一天，收到了易佳老大的电话，让我去他公司，他很赏识我，可惜我已经在这边了，我想了想，拒接了。
Delphi是一个时代的产物，很多时候都会想起她，然后安装起来玩一下，后来，Borland公司把Delphi买了后，我就再也没有安装起来玩过，也因为从Windows平台转到Mac平台。
我是幸运的，一直以来都是在Windows平台开发，最后的这份工作让我能使用Mac电脑来做开发。只是，最近突然怀念起以前来，想到了Delphi，想到了那个初入程序的年轻人。</description>
    </item>
    
    <item>
      <title>Howtocode</title>
      <link>https://guobingyi.github.io/blog/howtocode/</link>
      <pubDate>Fri, 08 Jan 2021 19:49:38 +0800</pubDate>
      
      <guid>https://guobingyi.github.io/blog/howtocode/</guid>
      <description>初学者如何学编程 我感觉不论是有编程经验的人，还是没有的新人，都可以受益。
0x00 前言 我的建议是可以先随便找一门喜欢的语言学起，从第一天学习就开始做一些简单的小项目来边干边学。举个例子，可以学习python处理数据或者抓取网页，或者学swiftUI写iphone app等等，都可以。然后边学慢慢的，你可以考虑把本科的计算机课程的书借来或者买到，特别是算法，编译原理，数据库，TCP/IP详解之类的书，自己慢慢看起来。不用着急一开始看不明白，书是可以一遍一遍的看的。高二的知识水平其实也够了。想从事这个行业或者喜欢这个爱好，就要学习一辈子。早学晚学都可以，那就开始动起来吧！我不想列太细节的步骤，我的建议永远是做东西。在做东西的过程中你会慢慢理解你的不足，但是成体系的东西你也要看，就是大学课程之类的。最好让你的需求来推动你学习，而不是先学了一堆屠龙之术，不知道怎么运用。 上面的话是从一个大神那里摘抄过来的，大致看了一下，还是被其中的一些方法和思想所打动，毕竟自己很多时候都是这样过来的，也利用了一些方法。但是，还是存在一些漏洞，或者说，这个并不适合初学者，而是适合有一定经验的人，再重新审视自己的时候，比较适合。我觉得对于初学者来说，还是反而有难度了。
0x01 为什么？ 既然是初学者，那么如何选择自己喜欢的语言？什么语言又是适合自己的？
为什么会成为初学者，应该是抱有目的来的？有的是为了找一份工作，有的是爱好，有的是从一门语言转到另外的一门语言。这些都可以成为初学者。
工作的人 致力于将编程成为工作的人，其实刚刚开始还是有选择的，但是为什么到了最后却没有选择。原因很简单，在选择公司的时候，就限制了所选择的语言，当然了，有人抬杠说，如果一方面精通了，在其他方面也精通，不排除这样的可能，但是大部分人都得承认自己是个平凡的人，那就做平凡的事。更何况，做为面试官，并不会因为你的某一方面突出而破格录入你，项目上是需要能够直接上手工作的，一般不会储备人才。
做为将编程做为工作的人，目标必须是明确的。此时就应该知道各大厂商需要什么样的人，然后定位到自己想到达到的目标。对于高考的人，都知道报考志愿一样。唯一庆幸的是，编程入门后是可以改的，而且改变的速度也很快。前提是，你得入门了，并在此摸爬滚打好几年。我记得我们英语老师曾经说过，他也可以让所有人立马学会英语，那就是只交大家“How are you?&amp;quot;,如同编程中的&amp;quot;Hello,world!&amp;quot;。唯独编程比英语中的这个相对难多了，此话怎讲？编程需要的环境，这个环境的搭建让很多人止步？举个例子，如果说你编写的是.Net代码，但是你购买了苹果电脑，那么你要使用的很多功能就会受限。所以，很多时候，必须三思后行是有原因的。
爱好者 这个爱好者就不好说了，既然爱好，那么编程就不会太困难了，毕竟现在的网络资源已经足够使用了，什么不会就搜索，找到相关代码后直接拿来编译，成功优化，失败继续找。这时候就有选择的学习，比如什么简单又可以快速的见效，就学什么？
工作经验者 对于新的语言都是初学者，如果要转变一种语言，我觉得可以从自己的需求来学习，解决自己需求的时候，对语言本身也就理解的差不多了。
0x02 对于初学者选择语言的意见 对于工作为目的的就不需要继续了，毕竟公司需要什么就学习什么就好。而对于真正的初学者来说，找到符合当前自己喜欢的来说，那就是定位，要往哪个方面发展。
Java 对于编程的人都知道，这门语言的地位，跨平台的优越性打造了庞大的第三方支持。环境的搭建相对简单，IDE也非常丰富。最最最主要的是网络上的资源比较丰富，搜索基本可以找到答案。想起我刚刚编程的时候，使用Delphi要搜索点资源基本上没有。大部分的知识都是从前辈或者书本上找到，现在的网络资源真的太好了。
.Net 微软平台的语言，IDE是最出色的，让你拖拉控件就能开发出非常强大的应用。缺点就是平台问题。当然，.net core出来后，对跨平台已经成为了现实，可惜有很多的东西没有能很好的实现。
Python 这个语言已经被吹的无所不能，或许也真的无所不能，可是，有些应用，还需要其他语言的支撑，更多的是大厂的支持才行。
Go Go语言相对上面的语言要年轻些，也有一个好爸爸Google，对于服务器端是强项，但是也是因为年轻，很多的第三方还不成熟。
C++ 很多人说C++是C的超集，但是我想说，已经可以说算另外的一门语言了。在游戏，服务器端，都是非常棒的体验。
C C语言非常出色，一直都保持着非常大的用户量，毕竟操作系统都是用它编写的。
0x03 如何需求推动学习 物有本末,事有终始,知所先后,则近道矣。
首先，对于定位来说，需求明确后，相反对语言有一定的选择，比如说我想在Windows下开发一个应用，这个应用属性窗口类，而非Web类，那么选择语言上，C#的简单程度，比其他语言都轻松。所以，对于需求的定位，应该是首先对语言能做什么，不能做什么有一个认识，再来推动学习语言。
其次，定位好需求后，开始对整个语言有一定的认识。不怎么说把所有的API大致过一遍，或者说理解有些用法，都可以先看一看，比较重复做轮子，有时候好，有时候也不好。像读一本书一样，看一下目录。
最后，一点一点的把自己的需求完成，遇到问题就上网搜一下，现在的资源都非常丰富。</description>
    </item>
    
    <item>
      <title>new start life</title>
      <link>https://guobingyi.github.io/blog/new-start-life/</link>
      <pubDate>Tue, 24 Nov 2020 17:05:59 +0800</pubDate>
      
      <guid>https://guobingyi.github.io/blog/new-start-life/</guid>
      <description>新的开始，新的征途 谁知能活多少天，舒服一天是一天。</description>
    </item>
    
    <item>
      <title>Backfile</title>
      <link>https://guobingyi.github.io/blog/backfile/</link>
      <pubDate>Fri, 03 Apr 2020 14:46:31 +0800</pubDate>
      
      <guid>https://guobingyi.github.io/blog/backfile/</guid>
      <description>文件恢复 狡兔三窟，不是没有道理的。
已损坏修复命令
Do Your Data Recovery_7.5.dmg
最近郁闷的事情不少，当想到要把照片统一放到一个移动硬盘后，就开始后悔了，真正的问题在于这个硬盘坏了，而这个硬盘是买的最贵，口碑最好的西部数据。
我原来都不曾买过，用过西部数据，但是当要把照片统一存放的时候，我选择了西部数据，因为口碑好，传说中的安全，可是在短短的不到一个月后，居然不能用了，我怀疑是不是电脑升级导致的，还傻傻等待新一轮的升级能解决这个问题。那么问题来了，相片需要备份，可是没有升级，对，没有升级。所以，我改变了策略，看一看是什么导致这个原因的，搜索的结果让我大跌眼镜，西部数据的硬盘怎么都出现了这样的问题，原本是奔着去找Mac Pro升级导致硬盘读取不了的，可是找到的都是西部数据硬盘丢数据的，郁闷了。
好吧，我承认这段时间里断断续续的用电脑，没有上心，可是等到要用到照片的时候，我就郁闷了，发现所有的照片都在这个识别不了的硬盘里。我不得不继续查询解决方案，把硬盘放到windows下识别，发现win7下的驱动安装出现问题，我的天。我继续在Mac下寻求解决办法，找到了西部数据驱动里的磁盘安全工具和扫描坏道工具。安全工具可以对硬盘上锁，我理解为硬盘没有问题；扫描坏道工具，全盘扫描没有问题，在此让我感觉到磁盘真的没有问题。但是就是读不出来，我找到一篇文章说，点开系统报告&amp;ndash;&amp;gt;硬件&amp;ndash;&amp;gt;USB，能看到自己的硬盘后，打开fander(访达)，等就一个字，看硬盘的存储数据，说系统要重新读取硬盘数据，巴拉巴拉，我等了4个多小时，感觉没有戏了，下定决心看能不能恢复数据吧，这样等下去就Over了。所以就有了文章开头的软件，Do Your Data Recovery这个软件，实在太给力了。她读出了我的硬盘，最，最，最重要的是，数据也能找到了，所以感慨非常深。
重要数据要有备份 为什么这样说？重要的数据，会伴随一生，丢失了会非常心疼，所以除了基础的硬盘保存后，最好的是在云上有备份，所以先看看github是否能满足需求，如果不行，还是得用七牛吧。
盗版软件 我非常想支持正版，但是支持正版的渠道很难，我不得不承认这是一个借口，但是在这个时代，或者这个环境，盗版比正版更容易得到，我不知道是该高兴还是难过！
不要依赖已网络 从这个事情上来看，虽然网络上有很多知识，很多乐于助人的人，但是问题的解决还是得自己的判断，做出选择。原来的经验就是不论什么代码先拷贝下来看行不行，不行再试，完全失去了自己思考的时间，虽然大部分能google到，但是真正到核心的地方，还是得自己做。所以，任何事情发生前，先自己考虑一番，在使用网络，网络太容易迷失了。</description>
    </item>
    
    <item>
      <title>和孩子一起学习-弟子规</title>
      <link>https://guobingyi.github.io/blog/%E5%92%8C%E5%AD%A9%E5%AD%90%E4%B8%80%E8%B5%B7%E5%AD%A6%E4%B9%A0-%E5%BC%9F%E5%AD%90%E8%A7%84/</link>
      <pubDate>Tue, 03 Mar 2020 13:09:16 +0800</pubDate>
      
      <guid>https://guobingyi.github.io/blog/%E5%92%8C%E5%AD%A9%E5%AD%90%E4%B8%80%E8%B5%B7%E5%AD%A6%E4%B9%A0-%E5%BC%9F%E5%AD%90%E8%A7%84/</guid>
      <description>和孩子一起学习系列-弟子规 转自弟子规公益网。
弟子规易解 【概述】《弟子规》原名《训蒙文》，为清朝康熙年间秀才李毓秀所作。其内容采用《论语·学而篇》第六条“弟子入则孝，出则弟，谨而信，泛爱众，而亲仁，行有余力，则以学文”及朱熹《小学》中的文义，以三字一句，两句一韵编纂而成。这个《小学》是《三字经》中“唯学者，必有初，小学终，至四书”的《小学》，专门教导做人做事，洒扫应对，进退之礼和做人首要以“孝”为本。但这本书距离我们有数百年，内容当中有些用词与现在社会状况差距较大，所以清朝李毓秀重新以《小学》中的重点为基础待人接物、求学等应有的礼仪与规范，特别讲求家庭教育与生活教育。后经清朝贾存仁修订改编，编成1080个字的《弟子规》，是启蒙养正、教育子弟“敦伦尽分、闲邪存诚”，养成忠厚家风的最佳读物。
总 叙 弟子规 圣人训 首孝弟 次谨信 泛爱众 而亲仁 有余力 则学文
【易解】《弟子规》这本书，是依据至圣先师孔子的教诲而编成的生活规范。首先在日常生活中，要做到孝顺父母，友爱兄弟姐妹。其次在一切日常生活言语行为中要小心谨慎，要讲信用。和大众相处时要平等博爱，并且亲近有仁德的人，向他学习，这些都是很重要非做不可的事，如果做了之后，还有多余的时间精力，就应该好好的学习六艺等其他有益的学问。
入则孝 父母呼 应勿缓 父母命 行勿懒 父母教 须敬听 父母责 须顺承 【易解】父母呼唤，应及时回答，不要慢吞吞的很久才应答，父母有事交代，要立刻动身去做，不可拖延或推辞偷懒。父母教导我们做人处事的道理，是为了我们好，应该恭敬的聆听。做错了事，父母责备教诫时，应当虚心接受，不可强词夺理，使父母亲生气、伤心。
（君子闻过则喜，小人闻过则怒。）
冬则温 夏则凊 晨则省 昏则定 出必告 反必面 居有常 业无变 【易解】侍奉父母要用心体贴，在二十四孝故事里，九岁的黄香，为了让父亲安心睡眠，夏天睡前会帮父亲把床铺扇凉，冬天寒冷时会为父亲温暖被窝，实在值得我们学习。早晨起床之后，应该先探望父母，并向父母请安问好。下午回家之后，要将今天在外的情况告诉父母，向父母报平安，使老人家放心。外出离家时，须告诉父母要到那里去，回家后还要当面禀报父母，让父母安心。平时生活起居，要保持正常有规律，做事有常规，不要任意改变，以免父母忧虑。
事虽小 勿擅为 苟擅为 子道亏 物虽小 勿私藏 苟私藏 亲心伤 【易解】 纵然是小事，也不要任性，擅自作主，而不向父母禀告。如果任性而为，容易出错，就有损为人子女的本分，因此让父母担心，是不孝的行为。公物虽小，也不可以私自收藏占为己有。如果私藏，品德就有缺失，父母亲知道了一定很伤心。
【故事】刘备教子 三国的时候，刘备临终时对儿子刘禅不放心，除了把他托付给丞相诸葛亮，还给刘禅留下了一封信来教育他。信中说：“勿以恶小而为之，勿以善小而不为。惟贤惟德，能服于人。”这就是说，不要认为小的坏事就可以胡作非为，不要认为小的好事就可以不做；只有品德良好才能让人信服。后来，刘禅在诸葛亮的辅佐下，蜀国没有出现大的失误。诸葛亮死后，刘禅开始宠信宦官，逐渐放纵自己，最终蜀国被曹魏灭掉，刘禅也成了俘虏。
【故事】一个玩笑 抱憾终身 有这样一个真实的故事：在学校课间休息的时候，一个同学在他的同桌要坐下的时候，把椅子挪开了，结果这个同学坐在地上，脊椎摔断，终身瘫痪。一个玩笑导致这样的后果，双方家庭都抱憾终身！受伤的同学将在床上躺一辈子，很苦。他的父母就更苦，孩子养了这么大，突然变成残废，父母比他还难受，还要伺候他，每天看到他都要偷偷地流泪。我们想一想关心你的人往往何止父母双亲，所以一个人的过失，有时会给多少人带来痛苦！造成大错无法弥补，而开玩笑同学的家庭也要承担沉重的经济负担和良心的谴责。所以，任何对人身安全有损害和危害到社会的不良行为，我们是绝对不能做的，见到时也要极力劝止。
亲所好 力为具 亲所恶 谨为去 身有伤 贻亲忧 德有伤 贻亲羞 亲爱我 孝何难 亲憎我 孝方贤 【易解】 父母亲所喜好的东西，应该尽力去准备；父母所厌恶的事物，要小心谨慎的去除（包含自己的坏习惯）。要爱护自己的身体，不要使身体轻易受到伤害，让父母亲忧虑。（曾子曰：“身体发肤受之父母，不敢毁伤”）。要注重自己的品德修养，不可以做出伤风败德的事，使父母亲蒙受耻辱。当父母亲喜爱我们的时候，孝顺是很容易的事；当父母亲不喜欢我们，或者管教过于严厉的时候，我们一样孝顺，而且还能够自己反省检点，体会父母的心意，努力改过并且做得更好，这种孝顺的行为最是难能可贵。
亲有过 谏使更 怡吾色 柔吾声 谏不入 悦复谏 号泣随 挞无怨 【易解】 父母亲有过错的时候，应小心劝导改过向善，劝导时态度要诚恳，声音必须柔和，并且和颜悦色，（子夏问孝。子曰：“色难。”）。如果父母不听规劝，要耐心等待，一有适当时机，例如父母情绪好转或是高兴的时候，再继续劝导；如果父母仍然不接受，甚至生气，此时我们虽难过得痛哭流涕，也要恳求父母改过，纵然遭遇到责打，也无怨无悔，以免陷父母于不义，使父母一错再错，铸成大错。</description>
    </item>
    
    <item>
      <title>效率还是折腾</title>
      <link>https://guobingyi.github.io/blog/%E6%95%88%E7%8E%87%E8%BF%98%E6%98%AF%E6%8A%98%E8%85%BE/</link>
      <pubDate>Sun, 01 Mar 2020 16:35:30 +0800</pubDate>
      
      <guid>https://guobingyi.github.io/blog/%E6%95%88%E7%8E%87%E8%BF%98%E6%98%AF%E6%8A%98%E8%85%BE/</guid>
      <description>效率还是折腾 不能安心的写代码，还能干什么？
不知道为什么，当要认真的去写点代码的时候，总会被杂七杂八的事情打扰，或许习惯了一种工作模式后，就很难去改变。
事情的原委是这样的，我开始用go写代码的时候，发现原来在VS Code下使用GO的插件非常好用，配合使用TabNine写代码真的会飞。结果，插件告诉我没能更新gopls，需要更新后才能进行代码提示，so，我去更新gopls，这个我知道是必须翻墙才能更新的，而google已经在github上有镜像，目前不能翻墙只能依赖github才能更新，郁闷的是在镜像下使用了mod模式，使用go build命令都会报以下错误：
go: github.com/sergi/go-diff@v1.0.0: Get &amp;#34;https://proxy.golang.org/github.com/sergi/go-diff/@v/v1.0.0.mod&amp;#34;: dial tcp [2404:6800:4008:802::2011]:443: i/o timeout 原来即使使用了镜像，模块的加入还是去找golang.org去了，那怎么办呢？居然有镜像就不怕，不就是用模块的思路去解决好了，修改go.mod文件。
module golang.org/x/tools go 1.11 replace ( golang.org/x/net =&amp;gt; github.com/golang/net latest golang.org/x/mod =&amp;gt; github.com/golang/mod latest golang.org/x/sync =&amp;gt; github.com/golang/sync latest golang.org/x/xerrors =&amp;gt; github.com/golang/xerrors latest ) require ( golang.org/x/mod v0.1.1-0.20191105210325-c90efee705ee golang.org/x/net v0.0.0-20190620200207-3b0461eec859 golang.org/x/sync v0.0.0-20190423024810-112230192c58 golang.org/x/xerrors v0.0.0-20191011141410-1b5146add898 ) 加入replace方式，将golang.org替换为github就可以了。
编译完成后，打开VS Code后，以为能开始快速编码了，结果提示了这个错误：
按照原来的经验，就是把错误读一读，错误的提示让我去看如何在项目中设置模块，Go Modules。我读了，我发现我的配置没有错误啊，是正确的呀，还将配置文件修改了一下：
GO111MODULE=&amp;#34;auto&amp;#34; 为了验证问题，我设置将模块设置为了不可用：
GO111MODULE=&amp;#34;off&amp;#34; 结果问题依旧，所以就怀疑GO插件的配置问题，在配置文件中加入了GOPATH后，依然报错，猛的发现，会不会是插件的一个bug呢？因为一直提示，不能关闭，而且对于我这种有洁癖的人来说，一定要把这个问题解决，写代码才会舒服。去github上查阅了一把issues3055，还真的有，我去，甚至也有关闭的issues3076。对此，也给go的官方提出了这个问题issues37279。对此，知道了这个问题的原由，好吧，我今天还真不能解决了。
突然，发现我今天要写的代码还没写呢？怎么时间就这样过去了。原来我去折腾了一把IDE的问题了，在此中途的时候，我就使用emacs来写代码了，感觉沉浸在代码中，虽然没有那么强的代码提示，但是TabNine的插件也能正常使用。我想，为什么会那么依赖IDE的功能呢？是什么原因？是习惯，还是懒惰？这个来回折腾了一下午，是对还是错？
写代码真的需要这些功能吗？我不断问自己。这些插件功能的确在效率上有一定的提升，但是过分依赖就是病了，是不是没有这个功能就不能写代码了，这个才是问自己的，所以折腾得建立在一个时间线上，如果不能完成规定的时间任务，那么折腾就是浪费时间。关注点应该在优先级高的任务上，突然也让我想起一个事情，本来想用c++写个hello world，发现去安装各种依赖关系，最后对c++非常郁闷，为什么会那么难？不就入门的代码就要折腾了一天，才发现基础的搭建会那么浪费时间。
所以，说什么简单不简单，先源码下载下来，编译通过了在说。然后在去耗这个时间，如果刚刚开始就困难重重，就换一种方式吧，体验感真的很重要！</description>
    </item>
    
    <item>
      <title>Notimeplay</title>
      <link>https://guobingyi.github.io/blog/notimeplay/</link>
      <pubDate>Sun, 02 Feb 2020 15:45:05 +0800</pubDate>
      
      <guid>https://guobingyi.github.io/blog/notimeplay/</guid>
      <description>没有时间玩 玩物丧志？
曾几何时，我也会为了玩而发愁？或许好多时候都在为此而发愁吧，上学的时候，为了玩三国志，必须要先把作业做完；上班的时候，必须要把工作做完；在家的时候，必须要把家务做完。或许，跟多的时候，都在为游戏而发愁，我什么时候可以有自己的时间呢？然后，开始思考，如何快速的做完作业，如何快速的做完工作，如何快速的做完家务。这样就可以玩了，但是发现不管怎么快速，时间总也不够玩。在游戏里，时间过的真快，感觉都没有怎么玩就要睡觉了，然后有时会为了玩而熬夜。而熬夜却是最危险的事情，它会让寿命减短。这样做又是否值得呢？日出而作，日落而息。自然规律不能破坏，不然，面临的问题会非常严重，如癌症。得出结论后，是不是觉得熬夜不值得呢？是的，非常不值得。我记得有一次，在身体不适的时候，玩游戏也不能解除这样的痛苦，当然抽烟更是难受。玩游戏与抽烟，虽然不能说一样，但是有的时候会让你快乐，但是如果熬夜玩游戏，却会要命。抽烟同样是这个道理。
明白了这些，熬夜去游戏是会付出代价的，苍天会饶过谁？抽烟也是。算了这笔帐后，发现，如果想玩，就得健康的玩，不然都是亏的。
从今天开始，是时候改变了。</description>
    </item>
    
    <item>
      <title>Changelife</title>
      <link>https://guobingyi.github.io/blog/changelife/</link>
      <pubDate>Sat, 25 Jan 2020 20:58:10 +0800</pubDate>
      
      <guid>https://guobingyi.github.io/blog/changelife/</guid>
      <description>改变生活 最害怕的事情就是习惯。
自从不需要为了生活奔波后，就不知道了该怎么生活，或者说不知道现在该如何生活。原来，只要上班就可以了，现在不上班了却不知道干什么了？好讽刺。
今天听到老婆说好好非常期待和我一起去爬石头的日子，现在回想起来已经好多年了，在她上幼儿园的时候，现在呢？已经二年级的下学期了。时间真不会为谁而停留，也不会你后悔就可以。其实，我不明白的就是为什么老婆总说我，说我不要在孩子面前玩游戏，现在我终于知道了。原来父亲的这个角色不是谁都可以替代的，每个人都有自己的角色。这些年来，我真的是缺少的这个角色的时间。最忙的时候，加班总早上出来，孩子还在睡觉，到晚上回家的时候孩子已经睡了，太多太多的时间都是这样过的，而当时却是没有选择。现在，有选择了，而我却又过着原来的生活，总想让孩子早点睡觉，这样我就可以打游戏了。我很多时候都是这样的态度，如果当天没有能玩游戏却感受到缺失了什么。所以，难道是游戏让我获得的东西是什么呢？任天堂的Switch我也买了，也玩了荒野之息，也感受到了大师么的杰作，可是为什么我还是不满足呢？还要去玩王者荣耀，还是每天都觉得什么都缺失呢？我想或多或少，是我自己没有认识到生活，自己应有的生活态度。
好了，现在终于被老婆点破了，我这个缺失的父亲角色。我终于也开窍，原来我需要的是什么？培养孩子是一件伟大的事情，可惜我小的时候，父母都没有能很好的陪我，因为时间一下子到了我可以自己玩的时候了，我喜欢单机的游戏是因为我可以沉迷到里面，什么都可以不用管？什么都可以不用想，可是，现在的这个时候，我才发现原来一直让自己困扰的东西是原来没有的。难道，我失去的东西，让自己的孩子也同样失去吗？我不想这样，所以，我需要改变。或许，原来也同样说过同样的问题，可惜没有开窍，没有能这么深入的思考。只是，我觉得今天晚上，原本我都觉得我太郁闷了，什么事情都要说？为什么什么事情都是我的错？我难道在大年初一的时候玩一下游戏都是错的吗？我为什么那么难？现在，想同了，想明白了。原来我的任务，我的责任在此之前是不清晰的。我的生活方式是不正确的，我为什么会这样，就是因为我还没有适应这样的生活。所以，接下来就是改变。改变自己原来的生活方式，改变对生活的态度。先自己的健康问题要解决，然后就是家的责任，我能够做到。</description>
    </item>
    
    <item>
      <title>Happywork</title>
      <link>https://guobingyi.github.io/blog/happywork/</link>
      <pubDate>Sun, 05 Jan 2020 17:29:30 +0800</pubDate>
      
      <guid>https://guobingyi.github.io/blog/happywork/</guid>
      <description>如何快乐的工作 如果，你做的事是噩梦，那么不如放手。
好久没有一家人活动了，我终于放下游戏，放下心中的小打算，走出去，听了一场“演唱会”。
“演唱会”是一个留德的钢琴师回昆明，举行的一场表演。用贝多芬250年来做契机的，来表达对贝多芬这位伟人的思念。不知道为什么？我真的从来不怎么喜欢音乐，但是却非常认真的听下来。我觉得感动我的不仅仅是音乐，而是这位演奏者的专注打动我了。我看到了一位对音乐热爱，并且对自己的技艺非常精湛的人感动。我不由想到了自己，自己对程序的热爱，是什么样的热爱？是激情过后的苍白，还是当初为了养家糊口而不得已的选择，我想或许都有吧，但是从骨子里我是真的热爱，并从这位演奏者身上看到了技艺的力量。一种让人全身心的投入，一种为之奋斗的感觉，对，就是一种自我实现，但又让人感动的状态。
寻寻觅觅中，走到了现在，而却对自己真正想要得到的东西而感到迷茫，什么是自己需要的？什么是自己喜欢的？自己想做什么？在老婆不断的建议中，我也在不断的尝试，可是昨天晚上，又让我知道了自己真正需要的是什么，对程序，我写代码的时候可以忘却自己，能从代码中获得不一样的感觉，不论是为了什么，在这个过程中我获得了自我。
我，一直以来，自己家的电器/电脑/手机，出现了什么问题，我都能自己解决，当然也包括了朋友的。在这个过程中我通过学习，通过自己的积累，能很好的处理这些问题。我一直都喜欢这种状态，也非常享受解决问题的过程。从种种方面来说，我喜欢的东西，或许我能从做的事情上来感受到快乐。但是，人不可能脱离这个社会，该学会的东西还是得学会。而我，却想做一个艺人，投入到自己喜欢的东西上面就是一生。突然想到了emasc这个软件，说一生都不够用，来学习她。我想，我就喜欢这样的事情。
原来一直都喜欢用VS Code，因为太方便了，什么东西都可以不用想，直接拿来就可以用，插件非常方便，直观。也是在一瞬间才发现，就是因为这样，我们对细节的了解都依托在了IDE上。缺少了对细节的关注，缺少了折腾的心，原本时间就是那么多，为什么还要去依托IDE。我想从今天起，我还是回归到Emasc上，虽然她是那么古老，需要自己动手的东西那么多，可是我却感到踏实。但是却又另外的一个声音在告诉我，人生苦短，为什么不用最好的东西来节省精力，把时间都花在需要关注的地方。我的思想在“打架”了。到底谁会赢呢？到底什么才是对的？
其实，真的没有对错，或许在不同的时期，没有选择就是最好的，是否有必要一定要得出一个结论呢？</description>
    </item>
    
    <item>
      <title>Mac Batteries</title>
      <link>https://guobingyi.github.io/blog/mac-batteries/</link>
      <pubDate>Tue, 24 Dec 2019 18:33:37 +0800</pubDate>
      
      <guid>https://guobingyi.github.io/blog/mac-batteries/</guid>
      <description>Mac电池寿命 我以为你可以继续，其实你已经努力了！
从用笔记本开始，一直都没有用到过需要修理电池，最近的一次是x230的笔记本显示电池需要维修，我没有理她，我觉得不行就当一个台式机用着了，大不了直接用适配器工作好了，可是没有多久我的苹果笔记本也报这样的提示的了。我郁闷了。毕竟mac是主力机，很多工作都需要在上面做，而且我觉得我使用电脑的频率明显减少了，但是为什么还会出现了这个问题？我理解了一下苹果提供的电池方案：
电池-充分延长电池使用时间和寿命
这样的解决方案并没有解决我的问题，而我理解的是最近成天24小时的插着电池，没有进行了深充深放的操作，我一直错误的任务锂电池或者苹果的电池是没有这样的忌讳的，可是从实际的情况来说，还是需要进行必要的深充深放，并且不要长时间的插电。
不论怎么说？如果这就是我使用的电池状态，那么意味着每隔3～4年的时间，我得给自己的笔记本换电池，这样成本就增多了。不希望这样&amp;hellip;&amp;hellip;
今天，开始重新对mac笔记本的电池有了新的认识，也希望重新按照健康的标准来使用，我希望这个就只是一个假象，或者说，我的电池开始维修报警后，我还能用多久！
也有其他说法是天气问题，但是比起天气问题来说，我更相信的说法是苹果的系统升级后，变着法来升级硬件呀！
以下是网友提供的保养电池的方法，我觉得还是毕竟靠谱的，如果从淘宝上买了新电池后，就这样保养了。
第一种方法：保持离子的活性，提升电池健康度。 1、首先我们使用电源适配器把电池充满电； 2、拔掉电源适配器，重置smc； Shift - Control - Option - Power； 3、然后使用电池运行macbook，直到电量用到10%后再插入电源适配器； 4、提示：连续多天充放电，用到10%或者自动关机再冲，连续几次后就不提示修理电池了，过了几个月又提示，用的第二种方法解决！第二种方法：最新系统解决电池校准。 最新雪豹系统目前已经免费升级了，官方在系统中对电源管理计划进行了优化，macbook air就是升级最新系统后解决了第二次提示修理电池的问题。 友情提示：macbook电池采用的是锂电池，如果长时间使用电源适配器的话会导致电池离子的活性度降低，从而电池健康度会越来越差。建议每个月进行一次完全冲放电。 第三种方法：更换电池。 一般来说macbook锂电池充电循环次数只能用400-600次，电池基本上就不耐用，要出现问题了。 ps. 2020-1-29 补充
不知道为什么？真的，如果说没有能耐得住的话，我想我已经换了电池，我忍住了，我想看看我的电池什么时候真的就报废了，或者说充不了电了。今天在电脑升级到10.15.3的时候，电池需要维护的报警没有了，看了一下电池状态居然是正常的，我不知道我还能说什么？或许这个套路让多少像我这样有强迫症的人换电池呢？ 居然好了，不知道该开心还是郁闷？
ps.2021-01-03 补充
我也不知道，居然又用了一年，电脑整体性能依然能够满足需要，唯一的不足就是电池。因为使用了HHKB的键盘，所以充满电池后居然一晚上就光，找了许多原因，甚至重置smc，都无法改善一晚上电池耗尽的情况。将HHKB键盘的电池取掉后，电池一晚上掉电11%，极大的提高了，至少对我来说已经很满足了。希望在用一至二年吧，我觉得目前的需求最大的还是其他吧。电脑，手机，再等等吧！</description>
    </item>
    
    <item>
      <title>我与游戏</title>
      <link>https://guobingyi.github.io/blog/%E6%88%91%E4%B8%8E%E6%B8%B8%E6%88%8F/</link>
      <pubDate>Sat, 21 Dec 2019 10:46:55 +0800</pubDate>
      
      <guid>https://guobingyi.github.io/blog/%E6%88%91%E4%B8%8E%E6%B8%B8%E6%88%8F/</guid>
      <description>我与游戏 玩物丧志，是很多人说的一句话！
是的，我喜欢玩游戏。但是不是厉害的那种，属于自己沉浸在游戏中的感觉，而更多的是在游戏上体会原来缺失的感觉。
最近入手了任天堂的Switch游戏机，从体验上来说和电脑上玩差不多，或许也是从换了mac笔记本后，没有在笔记本上玩游戏了，这个体验只能是一般。毕竟，原来早就想拥有一台掌机，现在愿望实现了。</description>
    </item>
    
    <item>
      <title>运维</title>
      <link>https://guobingyi.github.io/blog/%E8%BF%90%E7%BB%B4/</link>
      <pubDate>Wed, 13 Nov 2019 11:22:00 +0800</pubDate>
      
      <guid>https://guobingyi.github.io/blog/%E8%BF%90%E7%BB%B4/</guid>
      <description>关于运维的一点意见 2013年写的，后面翻出来感觉那个时候的自己真棒！
对于即将离开项目组,对我这段时间的运维工作做一个总结. 首先来到项目组，需要把项目中的一些基础情况了解一下。 谁负责那一块的开发，联系电话。能问人的时候，一定要问，这样比你自己看代码来的要快一些，为了快速反馈客户这种办法是最好的，当然你也可以下来自己在摸索一下，以后遇到这样的问题就OK了。
了解客户的基础信息，如这个人在这个部门中是什么样角色，负责系统的哪一部份功能，电话号码。这样有什么问题，可以及时和客户联系。
态度。绝对不能和客户说这不关你的事，不关你的事，那么关谁的事。记住，任何问题到你手上，首先不需要很急，慢慢将问题记录下来，找人或者自己将问题解决，这是最基本的。如果能和客户建立起良好的关系，那么客户也会理解你的工作，有些情况下还会为你的领导讲好话。这些都是和客户交换得来的。如果你得罪了客户，那么客户也不会给你面子，什么你解决不了，那么客户就会叫经理换人。在说说这一点，如果你有问题，去打电话询问，一接到电话对方的态度就打动了你，即使他没有能立刻帮你解决问题，我相信你也是可以理解的，如果一接到电话就说这不关你的事，即使问题解决，也会对你留下很不好的影响。
业务，还是业务。到了项目组，不要被新奇的架构或者组件所吸引，慢慢静下心来将业务搞懂。这样当客户在那个业务环节出现问题的时候，才不会什么都不知道。所以，熟悉业务很重要，需求说明书，系统帮助手册，和客户沟通，自己从头到尾的使用一遍系统，这些都是很好熟悉业务的方法。
在和上一个运维的同事移交的时候尽量多的问一下，目前系统那些地方容易出现问题，是怎么解决的，多问，是没有坏处的。
其次，是运维的过程中需要注意的地方。 遇到一个解决的问题，首先要把它记录下来。记录的内容大概有：问题是什么？是怎么解决的？解决这个问题使用了多少时间。人们常说，不要被相同的石头砸到脚。但是，我们很多时间在运维的时候就会出现这样的问题。为什么呢？还是那句老话，好记心不如烂笔头。还有一点好处就是，当移交工作的时候就可以将这些东西一并给下一位同事，送人玫瑰手留余香。
有事没事多去系统上看看。为什么呢？原因是当系统出现了问题，你才知道吗？做好每天的履行检查，及时发现问题解决问题。那么客户对你的运维工作将会很满意。
又来了业务。业务在系统中是会变的，这个地球人都知道。客户在使用系统的过程中，会存在一些业务的变更，这个时候，如果你连原来的业务都不熟悉将会很痛苦，如果你比客户还熟悉业务变更的趋势，那么兄弟你有业务专家的天赋啊。所以既然来到了这个项目的运维，为什么我们不好好学习一下业务呢？为了以后在这个领域成为业务专家而努力吧！
最后，就做一个总结吧。我从工作到现在一直想做一个优秀的程序员而努力，但是工作却常常和自己开玩笑。每次都是从运维开始的，慢慢才有了写代码的工作。我想说这个的目的是，并不是所有的东西都如你所愿，但是只要你在工作上都认真努力，那么不管是运维还是开发，你都能锻炼自己的一身本领。</description>
    </item>
    
    <item>
      <title>我的摄影之路</title>
      <link>https://guobingyi.github.io/blog/%E6%88%91%E7%9A%84%E6%91%84%E5%BD%B1%E4%B9%8B%E8%B7%AF/</link>
      <pubDate>Mon, 21 Oct 2019 16:41:44 +0800</pubDate>
      
      <guid>https://guobingyi.github.io/blog/%E6%88%91%E7%9A%84%E6%91%84%E5%BD%B1%E4%B9%8B%E8%B7%AF/</guid>
      <description>我的摄影之路 路漫漫其修远兮，吾将上下而求索。
没有想到我会走到这条道路上来，还是因为没有了写代码的热情。那天，和老婆说起来，说我原来喜欢的是摄影，因为摄影给我感觉是一种热爱生活的表现。我的编程是因为要养家糊口，才欺骗自己说是喜欢的。
摄影，对于我来说，也是一个不断摸索的过程，说白了就是一个学习的过程。原来我一直鄙视会photoshop，会美工的，会修改色彩的，我觉得那个就是会用一下软件的人，没有像编程一样改变世界的能力，他们就停留在使用的层面上，鄙视。现在，我才发现，任何一门技术都有其存在的价值，那就是让生活变的更加美好。
回想起那时的我，就是一心以编程为主，眼里看不到其他的东西。为什么会这样？现在的我时常问自己，我想最主要的原因是由于编程的能力可以让自己获取一份稳定的收入。而其他的，我却没有去关注，因为编程的能力提升，耗费了我的大量时间和精力，我没有时间和精力去关注其他事情了。
吐槽了一下自己的历程，现在要重新学习一下摄影，使用到的软件是adobe公司的两个软件。
Adobe Photoshop CC 2019 的确很好用，改变了许多我对图像处理的观点，也培养自己对色彩的敏感。 Adobe Lightroom Classic 借用金叔说的话就是：“单反无后期，不如用手机！” 为什么这样说，现在我也能体会到一些了，比如我发现我单反照出来的，没有华为手机拍摄出来的照片好看，设置背甩几条街。当是，当我用软件进行后期处理一下，我才发现，我又可以甩华为手机拍摄出来的几条街了。毕竟，构好图，拍摄清晰，后期就好处理了。 这里说一些苹果11的手机，真的，从你开始拍摄的时候起，你的单反还真干不过她，因为她的三个镜头很厉害。 两个软件都是用来学习的，没有用做商业用途，即还没有产生收入。说这个话的原因是，我用的盗版的软件，而且我原来还非常鄙视使用盗版软件的，打脸了。后来，我想了一下，为什么我会有这样的转变，是由于，我编程的时候可以使用免费的IDE，可以使用开源的项目，可以使用开源的编程语言，所以在付费层面上避免了一些开支，而且能很好的完成任务。所以，我说我用正版的软件。而现在，当我使用这些付费软件的时候，还没有找到免费的替代品，并且还没有能创造出收入，所以，你懂的。(原来我还是y意向要介绍一下怎么下载，怎么安装，怎么保护自己的数据，最后我觉得，使用盗版本身就是不好的，为什么还要宣传呢？)
不知道是什么时候，对于盗版的软件，我都非常害怕，害怕有有后面，害怕这些好的软件由于盗版的原因而消失，所以我就不提供相应的下载地址了，毕竟，做为一个想要找到下载软件的人，百度，google，搜索一下，就会得到你想要的东西。我这里说的是，我都把现在的软件禁用了网络，避免一些不必要的麻烦。
现在，开始学习如何使用他们，把一些想法付诸一些实践。当然，从以往学习的经验来说，我都是喜欢看官网的文档，虽然，很多时候没有中文的。
这里说一点题外话，也督促自己的好好学习，不要在去想器材了。刚刚学习的时候，我觉得应该买一个中端的单反学习一下就可以了，结果不知道为什么买了个Canon EOS 80D,一个APS画幅的，没有是全画幅的感觉到郁闷了好久，一直想换称无敌狮(5d4)，还有想佳能的大三元，红圈镜头。通过学习甚至还想买尼康的D850，说白了就是两个事情困扰我。
好器材，拍摄出好图片 为了让自己的技能快速提升，想到的是换器材，买最好的器材，或者买专业摄影师的器材。后来，在一次一次的尝试中发现，其实自己的器材已经非常不错了，并且完全满足了自己的要求，那么剩下的就是自己的技术问题了。
好镜头，拍摄出好图片 镜头为了感受一下，买了佳能最超值的小痰盂三代，699这个价格非常给力，让我体会了一下大光圈的效果，当然我觉得好用的还是套机上的那个EFS 18-200mm f3.5-5.6 IS镜头，毕竟这个镜头单买都是2000多。从玩电脑，到玩摄影，给我的感觉都是一份钱一份货，最重要的选择要对，比如电脑选苹果，单反选佳能或尼康。如果电脑选择了其他品牌，那么贵就不值得了，单反或许就这几家吧，我不知道我的选择是否是正确的。
最后，我不在纠结这些了，因为所有的这些都是建立在技术上面的，如果没有技术，那么再好的器材，再好的镜头，也不过是一个装B的物品而已，并不能让你产生出优质的照片，ok,bb到此结束。期待下一个感悟后的我！
最好的镜头是眼睛，最好的相机是大脑。——某人说。</description>
    </item>
    
    <item>
      <title>我的女孩</title>
      <link>https://guobingyi.github.io/blog/%E6%88%91%E7%9A%84%E5%A5%B3%E5%AD%A9/</link>
      <pubDate>Sat, 12 Oct 2019 21:10:21 +0800</pubDate>
      
      <guid>https://guobingyi.github.io/blog/%E6%88%91%E7%9A%84%E5%A5%B3%E5%AD%A9/</guid>
      <description>我的女孩 如果工作忙，那么就来带娃吧。
没有想到我会一个人带娃一段时间。
更加没有想到的是，她为了怕被我揍，既然把作业本斯了，还撒谎说和同桌闹撕毁了，在教室的垃圾篓里。我真没有想到的是做为一个爸爸，我是这样的。我应该反省的是我自己，我自己没有做好。
工作的时候，大多数时间都是老婆在带孩子。我整整的和她相处的时间并不长，她的一些小毛病我都不知道。所以在这段时间里，我和她相处下来，知道了她的一些情况。
我知道每个孩子都是有玩的天性，我们不应该去磨灭她，我也知道我在成长的过程中，也发生过和她一样的事情，所以我理解她。她今天哭的非常伤心，说不应该说谎的。看着她流泪，我真的很伤心，她甚至还害怕我打她。我才发现，我在孩子心里是一个什么样的爸爸，是一个做错了就要被揍的爸爸。
我梳理一下。
老婆要去青岛参加会议，外公外婆参加旅行社去旅游，爸爸妈妈在家照顾三爹，我照顾女儿。所以，按照女儿的话就是我们的二人时光。
虽然在此之前，老婆曾主动的让我去帮女儿看作业，照顾女儿的一切，让出行前的我不要那么困难，但是我的内心总觉得没有什么大不了的，我程序都能写，就不能带娃了？牛逼就这样吹出来了，结果我也为此付出了相应的代价。
作业检查 二年级的小学生的作业相对上学期少了许多，但是对于我来说，却发现有很大的问题。在孩子她妈没有告诉我之前，我甚至以为就是一般的签名就可以了，结果是，你要帮孩子检查作业，看孩子的书写是否认真，明天带的书和课本是否带齐，红领巾，桌布，水杯，早点，加餐，美术工具，等等，是否已经准备好了。
语文的预习大人要查百度，进行组词，看是否是多音字，是否是成语，当然就是解释，要解释给孩子词语的意思。听写，要读准音，检查听写的字是否写对，写整齐，拼音是否正确。背诵，检查孩子是否能背诵老师要求的内容。当然，最最最重要的是，孩子在做作业的工程中是否认真，是否配合你完成老师安排的作业。
数学的检查相对要轻松一些，但是你得认真检查，不然就会出现错误的地方，而孩子也会因为这样</description>
    </item>
    
    <item>
      <title>Mac Catalina</title>
      <link>https://guobingyi.github.io/blog/mac-catalina/</link>
      <pubDate>Fri, 11 Oct 2019 16:40:13 +0800</pubDate>
      
      <guid>https://guobingyi.github.io/blog/mac-catalina/</guid>
      <description>苹果操作系统 Catalina 折腾，喜欢折腾。
苹果推送了新的操作系统Catalina，乍一看，我想到的Tomcat的日志文件Catalina.log。当然，其实不是，就是苹果的macOS Catalina。我喜欢苹果电脑，自从使用上了就没有想要换其他笔记本的想法。为什么呢？因为原来没有选择，就只能使用Windows操作系统，而且自己的工作必须也得在Windows下面才能完成。后来，变更了工作，可以使用苹果笔记本了，才发现其实还是有选择的。
苹果笔记本使用下来的最大感受就是速度和反应速度比较快，而且没有让人烦恼的自动默默更新。当然，不得不说的是视网膜屏幕，真的写一天代码都不会累。但是，由于使用频率过高，也导致了苹果电脑出现了一些问题。我一直都非常信赖她，但是也是她教会了我要学会经常备份，没有什么是十全十美的，都会有问题。
新版本推送后，我非常兴奋的进行了升级，可是给我的答案却是失败。
macOS 未能安装在您的电脑上 储存系统验证或修复失败。(-69716) 退出安装器以重新确定电脑，然后再次尝试。 按照原来的情况，我会在网上看一下有没有和我遇到同样情况的兄台，然后看看人家的解决方案，这次得出的结论是没有。由于刚刚长假过后，所以不想太累，想等等在弄吧。最搞笑的是，还有个null的标示。
思前想后，我真不想弄了，想苹果过段时间应该会有相应的解决办法，可惜，我就是等不了呀。我这个有强迫症的人，怎么能有新的东西不能用呢？我想到的是空间问题，所以删除了一些不常用的软件。可是到官网一看，我去，空间只需要18.5GB。而我释放了40GB的空间，可惜还是同样的错误。
然后，我仔细看了一下错误，“验证失败”，储存系统需要验证的地方是我启动了文件保险箱吗？我决定停用磁盘的文件保险箱。结果，系统无法启动了&amp;hellip;&amp;hellip;我心里无数匹马呀！还好，昨天备份了系统，所以就恢复吧，一看评估时间4小时，心里又出现了马。在无奈的等待中，系统恢复了。决定抱着试试的态度，进行了升级，结果成功了。原本想等着新版本来解决问题的，也有想过人工客服问一下情况，可惜这些都不需要了，成功了。
说明了什么，我也不想得瑟，只能说明苹果的重心还是在iphone上，为什么？因为我苹果手机升级就没有遇到这些糟心的事情，笔记本上却真实的遇到了。
看了一下catalina的功能，才发现，原来把磁盘分成2个区了，一个系统，一个数据。我原来文件保险箱是需要解锁的，所以后台更新没有弹出密码框，就报错了。
升级需谨慎，折腾需备份，不然，不就是多了个新空白系统嘛!
对于软件，真的没有什么银弹，自己是知道的，可惜还是那么的相信你。</description>
    </item>
    
    <item>
      <title>改变我的思路</title>
      <link>https://guobingyi.github.io/blog/%E6%94%B9%E5%8F%98%E6%88%91%E7%9A%84%E6%80%9D%E8%B7%AF/</link>
      <pubDate>Fri, 13 Sep 2019 22:46:44 +0800</pubDate>
      
      <guid>https://guobingyi.github.io/blog/%E6%94%B9%E5%8F%98%E6%88%91%E7%9A%84%E6%80%9D%E8%B7%AF/</guid>
      <description>改变我的思路 莫愁前路无知己，天下谁人不识君。
最近又回到了刚刚开始的时候，原因是和老婆不在内耗了。我们终于和平相处了。对于内战的这段时间，我们都没有好好想想自己该做点什么，或者说将来要做点什么。
老婆推荐我学习摄影，和小朋友的摄影，儿童摄影。
其实，真正的问题在于我们之间其实也疏远了许多。
Source Code Pro, Monaco, &amp;lsquo;Courier New&amp;rsquo;, monospace Cascadia Code, Monaco, &amp;lsquo;Courier New&amp;rsquo;, monospace</description>
    </item>
    
    <item>
      <title>Hospital</title>
      <link>https://guobingyi.github.io/blog/hospital/</link>
      <pubDate>Fri, 06 Sep 2019 17:33:00 +0800</pubDate>
      
      <guid>https://guobingyi.github.io/blog/hospital/</guid>
      <description>医院 如果觉得自己的健康还不错，那可以去医院看一看。
好久没有去医院了，不知道为什么？去医院总给人一种压抑的感觉，当然更多的是一种无奈。我2017年被确诊为糖尿病2型，即我是一个糖尿病人。在所有的人中，我被贴了这样的一个标签。我非常想撕掉她，可惜她一直都跟着我。
天气阴着去医院是一种郁闷的事情，可惜我去了。而且，在去之前我忐忑不安，我不知道我是否会有其他并发症或者其他一些不好的东西。一切都是一个未知数。8点42分的挂号信息，我原本以为我不能量空腹血糖了，等拿了号再去吃早餐。但是去到医院的时候，我感觉我应该可以看到的，因为医生已经开始上班了（后来，我听老婆说8点医生就开始上班了）。拿着就医卡，到自助机上进行签到，发现没有这个用户，心里有点急，但是还好把所有卡都带上了。昨天，晚上我还说只带一张的时候，老婆让我全部带着，我没有抗拒，全部带着了，说明老婆的经验比我丰富，更主要的原因是，医院真的好久没有来了，不知道自己的就医卡是那一张了。签到后，去医生门诊的时候，刚好没有人，我就先看了，然后就是一大堆的化验。抽血，尿液，二次抽血，并发症检查。我或许都已经知道了做为糖尿病患者应该要做的检查了，但是，没有办法，顺着做吧。
抽血的人很多,有些甚至是昨天开好的单子今天来抽，但是，更多的是今天的。看着自己的血被抽出来，我知道我今天得补充点营养了。尿液是在厕所里弄的，感觉医院的卫生间总有一种说不出来的难闻味。我知道要去住院部检查并发症，所以，先到阿拉丁回族馆吃了早点，我时常会想到老婆说的，为什么都不重要，自己的健康非常重要，所以吃早点成了重要的事情。到住院部的时候，我非常庆幸自己的选择，因为医生在开早会，什么都还没有准备好。还是熟悉的走道，熟悉的医生，熟悉的病床。今天早上，医生还问我是否要住院检查，我回绝了，我知道，都一样的效果，不折腾。所以带着想是不是住院部的病床又空出来了，我特意留意了一下，果真如此，病床有空余的了，毕竟，一个星期7千多的治疗费还是比较昂贵的。对于并发症的检查我还是比较有自信的，毕竟自己还年轻，如果这个时候就出现问题了，那么，就非常麻烦了。虽然抱着忐忑的心做了检查，结果还是让人满意的。所以，这个钱你也不能说白花了，毕竟两年了，是该做一下检查了。
餐后两小时的采血就是等待，我知道今天早上又看不到医生了，应该下午吧！在我前面抽血的人，医生告诉他一个小时可以打印结果的时候，我以为我也是这样的。当我也问医生的时候，医生说：“下午4点”。我知道，不可以了。所以，我先到医生那里问了一下，她也建议我下午来，这样结果看的清晰些。
回到家，一大家子人吃饭。我还是不习惯这样的场景，但是，人生就是这样，你无法选择的时候，就闭上眼睛接受吧。我不知道为什么，老婆也没有说我去医院的事情，或许，我感觉老婆也不想让其他人知道。对于好好，我们都害怕有人在她面前说我生病的事情，对于她，不想给她太大的压力。
吃完饭后，我还是一样的走路，睡觉。我觉得我自己已经非常自我了，我没有被外界打扰。由于早上还是有点累的，所以我睡的比较熟。在闹钟想起的时候，我醒了，但是想到早上医生说要到4点才能拿结果的时候，我又眯着了。迷迷糊糊中，我感觉到我要醒了，毕竟要到医院的。可惜感觉怎么也睁不开眼睛，我知道我必须通过洗脸才能清醒过来。我从床边摸着到卫生间，还没有接水洗脸，就感受到脚上水的冰凉。我知道我已经到卫生间了，但是怎么感觉还是醒不过来呢？我非常着急，突然，我醒来了。但是，梦境中的感觉却是那么真实。我感觉到我很长时间没有这样了，或许每次这样的梦境都是我已经非常累才会出现的情况。
我还是提前来到了医院，我带着碰运气的心态，查了结果，让我出乎意料的是结果出来了，而不是4点，而是3点。我有点不理解那位医生为什么要说的差距那么大？或许真的是医院的人太多了，应该分流吧。带着忐忑的心，来到诊所。门关着，有很多人在外面等着，我知道得排一下对了。所以，我也没有去门口站着。我就这样等了30分钟，门开了一大群人冲进去，我想我早上来的，应该就看个结果很快的，我也跟着进去。有个小伙，说他中午的号，一个小时过去了都没有动静，非常激动，我一看很多人看报告，我就和医生沟通了一下，说这种情况我们看报告的怎么排队呢？医生说：“在门外排队，先来先看？”我非常无语，但是又没有什么好说的，毕竟还有许多实习生，所以我也退出去等着。在门外排队，门第二次开的时候，既然又开始叫号了，可惜没有人，我们其中一个看结果的说，我就看一个结果就好了，然后就进去了。我算下一个，可惜后面来了个人，她说她早上看的要看结果，要排到我前面去，我没有让。我进去的时候，发现有个做在门口的人，实在太痛苦了，还是什么情况，也忍不主去门口站着了。我非常不喜欢这种，我可以认真的等待，排队，可我不能忍受这种没有秩序的操作。
医生和我说，从检查结果上来看还可以，但是血糖控制的不好。需要我吃上药，二甲双胍，三个月后来复查。一个定论，花了我一天的时间。我知道有人甚至比我花的时间多，因为生病了。由于中午吃的不是很多，来医院的时候我买了燕麦面包。所以，我先到2楼抓药的地方吃了一片。以为，这样会出现我的名字，然后去拿药。吃完后发现，怎么还没有，看一下就诊的纸条说要去签到，然后去抓药的地方问一下，她说在对面，我一看对面是一个简易门诊，两个医生做在那里。一个男的一个女的，女的年纪大约50多岁，男的年纪大约45左右。我走过去问男的，男的甚至都没有说话，指了对面的机子。我走到机子前一看，是拿药的确认流程。我按照操作把就医卡放到机子上，可惜没有什么动静。我回头想进一步询问的说话，男医院看到我向他走来直接扭头不看我。我只有硬这头皮问了女医生，女医生说是的，把就医卡放上去就可以了。我无奈的走过去又放了一次，发现还是一样的情况，突然看到界面上显示，打印纸用完了。我走到后面的另外一台机子一刷就好了。我太无语了，怪自己不看提示。但是也又点对男医生有意见，做医生不应该帮助别人吗？最后，我有自己说服自己，或许医生一天都对着这样的人太多了，无语了，麻木了。这是谁的错呢？
晚上，老婆让我继续挂了营养科的号，让第二天再去一趟医院。虽然我的心里有一万个不想去，但是我告诉自己这个是对自己负责。第二天，我去了，1号楼的11层要上去还费了些精力。但是，还是找到了。医生是个小年轻女医生，在我看病前还接受了电视台的采访，说中秋节少吃点月饼，因为是高热量的，对身体不好。我等着她采访完，她对我的病情进行了了解，说了我吃东西该注意的事项，我才发现和老婆说的都一样，但是为什么我听不进老婆说的呢？我在反省这个问题？
医院里的病人很多，但是每个人的脸上都挂着不安，我甚至看到有对老夫妇在哭泣。我们开始注意自己的健康，开始去热爱生活，可是，如果身体夸了，一切都变的不重要了。
珍惜生命，热爱生活！
没有什么是比健康更重要的，如果有，那就是命。</description>
    </item>
    
    <item>
      <title>有效的工作</title>
      <link>https://guobingyi.github.io/blog/%E6%9C%89%E6%95%88%E7%9A%84%E5%B7%A5%E4%BD%9C/</link>
      <pubDate>Mon, 02 Sep 2019 16:30:19 +0800</pubDate>
      
      <guid>https://guobingyi.github.io/blog/%E6%9C%89%E6%95%88%E7%9A%84%E5%B7%A5%E4%BD%9C/</guid>
      <description>有效的工作 我们一直都觉得自己努力了，结果呢？
最近，有段时间是自己可以支配的。回想起原来上班的时候，如果想做点自己的事情，必须把工作的内容完成。而那个时候还因为工作比较忙，刚刚开始想要做的事情或者已经做了一半的工作都得丢下来忙工作。这样就导致原来思考了一半的事情，或者做了一半的事情都得丢掉。如果想起来做的时候，又得从头开始。效率非常底，同样的事情总是要从头开始？现在，有时间了，为什么不把要做的事情做了呢？还是，又有其他的事情要做吗？回想起这些，我发现，其实并不是外界打扰自己，而是自己的方法不对。我发现，这个是人的目标没有明确导致的。
为什么这样说？比如说我们有三件事情要做，其中有一件事情是无目标的。那么，你会发现这件事情会拖很久，而且没有结果。
由于最近看到的招聘信息对年龄的限制，导致向我这样37岁的人，无法找到一份自己满意的工作。所以，与其这样无聊的耗下去，不如去追一下自己的梦，做一个自由的开发者。想做自由开发者，要如何做？一直都是我思考的问题，是在外包网上承包吗？我觉得这样的几率很小，而且需要去和客户沟通需求，一想到这样的事情，和我找一份工作有什么区别呢？
自己控制需求
自己控制整个软件的生命周期
无需到处叫卖
需要满足这样，或许只有苹果平台上的部分App可以做到这样。我想，就目前来说这个选择也是最好的。为了保证这个目标持续下去，所以也回到文中所说的，效率。不要让一件事去打扰另外一件事情，就必须确定一个目标。
暂时给自己设定以下目标：
学习macOS和iOS平台下开发，熟悉开发流程。
先用一个实际项目，血糖检测App来熟悉苹果平台上面的开发。
发布自己的第一个App。
大的目标是好确定的，现在需要将大目标进行细分。
1.1 阅读苹果帮助文档；
1.2 阅读相关苹果开发书籍；
1.3 将学习成果记录下来；
1.4 督促自己深入学习。
预计完成时间：2019-12-30
2.1 编写血糖检测App需求设计文档和概要设计文档；
2.2 通过学习编写macOS平台下App；
2.3 通过学习编写iOS平台下App；
2.4 通过学习将使用服务端（go实现）与macOS平台App与iOS平台App进行数据交互；
2.5 总结开发苹果App过程，记录相关代码实现；
2.6 在自己的平台下进行第一个版本发布。
预计完成时间：2019-11-01
3.1 学习如何进行注册苹果开发者；
3.2 准备注册苹果开发者；
3.3 发布自己的第一个App应用。
预计完成时间：2020-01-07
Talk is cheap,show me the code!
计划中，可以有所细小改动，但是主要目标不变。为自己的改变而加油！</description>
    </item>
    
    <item>
      <title>宝贝周末一天</title>
      <link>https://guobingyi.github.io/blog/%E5%AE%9D%E8%B4%9D%E5%91%A8%E6%9C%AB%E4%B8%80%E5%A4%A9/</link>
      <pubDate>Sun, 01 Sep 2019 10:07:48 +0800</pubDate>
      
      <guid>https://guobingyi.github.io/blog/%E5%AE%9D%E8%B4%9D%E5%91%A8%E6%9C%AB%E4%B8%80%E5%A4%A9/</guid>
      <description>宝贝周末一天 总喜欢插播广告，这回被收拾了。
我家的宝贝，最近做事情总不认真。今天早上原本要去滑轮的，却由于做作业不认真被叫停了。我和她老妈原来是准备给她学习一年时间的，毕竟这样可以锻炼她的身体，让她有个强壮的体魄。可是小朋友，作业不认真，被老妈收拾了。其实，我非常郁闷的是对于这一次的事情，我都被小朋友欺骗过好几次了。对于她的作业我一般都不会去检查的，我都非常相信她。从这一次后，我也发现，其实每个人都小过，都做过小时候的事情，为了玩，真是拼了。比如说今天早上的计算题，正常情况下是错一到两题的，而一看错了十多题，当然来气了。加上昨天去学习钢琴，被老师说这个小朋友非常聪明，如果能蒙混过关就不会好好的去弹，总在挑战老师的底线。
宝贝上小学的时候，我由于身体原因辞职回家。原本很多事情，我都可以帮助老妈来分担的。但是，从这段时间以来我发现我离孩子好远，我都跟不上她的节奏了。我会经常被鄙视，因为我从来都没有去关注她的作业，她的学习情况，她现在的认识能力。导致我和她经常聊不起来，对于作业上的问题我都经常无法为她解决。弹琴就更不用说了，我一窍不通。什么高音符，底音符，我都不知道，所以离她有点远了。
对于今天不能去滑轮我想是累计已久的原因了，不认真。不管你怎么和她说要认真，总是在随意的应付。心里想的最多的还是玩，根本没有将你说的话听进去。早上起床后，就叫嚷着去滑轮，老婆让她先做两页作业，可是她就是不想做，最后在老婆的坚持下，去做作业了。但是，感觉她根本没有静下来做。在她说做完了，要去滑轮的时候，还和我说要带着钱去，我就知道她的心思都在滑轮上了。非常真实的是，我听了她说作业做完了，没有去检查，而是帮她拿滑轮装备去了。老婆认真的一检查，发现错误非常多，以至于直接取消了去滑轮。宝贝，大叫着说要去滑轮，做在地上哭，老婆怎么也叫不停的时候，用尺子打了她，但是她还是不屈不挠，一定要去。老婆要去上课，她一直追到门口，口里哭喊着：“妈妈，我错了！”，可惜老婆没有给她机会让她在家反省。并且叮嘱我让我好好利用这次机会，她太想的这个想法，让她把不认真的习惯改了。我和她说：“今天早上被收拾了是什么原因？是不是自己不认真，人是在桌子面前的，可是心已经飞到滑轮场上了。”她说是的，并且对于不能去滑轮感到非常难过。慢慢的安静下来，我告诉她：“是不是还想这去滑轮呢？我想是不可以了，你只能改变你不认真的习惯，或许以后还有机会。”她说：“但是，我太想去了！”。我知道是的，或许从另外的一个角度来说，孩子上了一周的课，都没有能好好的出去玩一会。这个我理解她，但是对于不认真做事是不可以的。我让她去改错，刚刚开始是认真的，但是过一会就又开始了。或许这个习惯已经很久了，而我们却没有能及时的改正。</description>
    </item>
    
    <item>
      <title>我和王者荣耀</title>
      <link>https://guobingyi.github.io/blog/%E6%88%91%E5%92%8C%E7%8E%8B%E8%80%85%E8%8D%A3%E8%80%80/</link>
      <pubDate>Sat, 31 Aug 2019 22:23:21 +0800</pubDate>
      
      <guid>https://guobingyi.github.io/blog/%E6%88%91%E5%92%8C%E7%8E%8B%E8%80%85%E8%8D%A3%E8%80%80/</guid>
      <description>我和王者荣耀 吻住，我们能赢！
曾经一度痴迷王者荣耀的我，现在一下子降温了。我给自己的目标是打上王者，现在这个目标实现了。我曾经一度以为我会非常兴奋，我会各种吹嘘，我会等等。但是，结果是无尽的空虚。为什么会这样？我原来一直保持的习惯或许因此而改变，我新的追求又是什么呢？
2017年，我学会了玩王者荣耀，一直到前几天打上王者后，我对王者荣耀的热情开始退减。虽然仅仅只是王者1星，我知道还有110星，难道我会重新设定目标吗？我想我是不会了，我知道这个就是我的最大能力吧！因为从玩这个游戏开始，我已经花了太多的时间在上面，我该把时间分到其他地方了。说说体会吧，我一直都听了官方的说法，5V5公平游戏，我想公平是对于玩家最大的安慰吧，但是，你只要玩到一个时间点，你会发现，这个都是假的，皮肤的隐藏特性和V8效果，让你感受到失望。当然，我也成为了V5玩家，为什么呢？不然就是靠场次堆。不可否认，游戏中说的意识，操作等等一些吹的东西，都不如匹配到神级队友给力。玩多了，你发现，什么能力都是假的，运气非常重要。你玩的在烂，队友都要带飞你；你如何厉害，队友都要把你带沟里。这个就是游戏的理解，说什么意识操作的，你看看有几个主播不是V8的。其实，有很多人早就看破了这个局，但是局里的人怎么都弄不明白为什么？所以，聪明的人早早离开，智慧的人都不会去玩，愚蠢的人却在局里不能自拔。突然，想起看到的一篇文章，说王者荣耀是国人的自娱游戏。把多余的时间用来自娱，而不是思考。细思恐极呀，我们这个层次的人就只能把时间花费在这上面，所以我们被人领导，被人奴役是正常的。思考的时间都去那里了？你想到了什么？为什么我还是这个状态？为什么我不能周游世界？为什么我看不起病？我的天呀，我思考的是如何练好一个英雄，如何多上几个星，结果被圈在里面。我会找借口，大家都娱乐，为什么我不能玩王者荣耀呢？我还和老婆吵过好多次，发现还是自己太年轻了。游戏中的确会给人放松的感觉，但是也何尝被对方锤得不能自理，挂机到麻木不仁，连败到怀疑人生，经常在4g的情况下来个460。这些都是游戏的感觉，特别是我觉得可以堆场次的时候，那种对决中，每次都看的清清楚楚。玩下来，发现这个游戏不需要什么技术，会平A就好了。输了不要难过，赢了不要高兴。心态就这样练起来了，对游戏也就无所谓了。原来玩游戏都会告诉自己遇到情况该怎么处理，该如何打好这一局，该如何上星？现在，想起来好搞笑呀，为什么？聪明的人思考如何让人生更上一个台阶，如何让自己的生活质量更高？我怎么很别人比？所以，有句话说：“可怜之人必有可恨之处！”。在希望别人怜悯的时候，自己是否努力去改变这一切了吗？
是时候说再见了!
It is time say goodbye!
哦，对了，我的皮肤怎么办？我的那些用钱买的皮肤呀？我这个是穷人思维吗？如果，用时间和金钱对比的话，我是否为了打翻了牛奶在继续哭泣呢？哦，明白了。原来，没有经历过痛苦，说什么甜蜜，我就真不知道了？我甚至在原来和自己说：“出家的皇帝才能开破红尘！”，现在我才知道，Great Master为什么是 Creat Master。就是大师不需要经历就能悟出的道理，你个凡人怎么能够理解！
真香，我是蜕变吗？还是凤凰涅槃，欲火重生？还是打发无聊的时间？曾经听过，最郁闷的事情是，比你优秀的人比你努力。</description>
    </item>
    
    <item>
      <title>牙治疗</title>
      <link>https://guobingyi.github.io/blog/%E7%89%99%E6%B2%BB%E7%96%97/</link>
      <pubDate>Sat, 10 Aug 2019 17:48:32 +0800</pubDate>
      
      <guid>https://guobingyi.github.io/blog/%E7%89%99%E6%B2%BB%E7%96%97/</guid>
      <description>牙治疗 牙疼不是病，疼起来真要命！
原本就知道可以洁牙的，是原来黄总说过她去洁牙，然后一个月又恢复了，导致我对洁牙非常有顾虑。当然最恐怖的还是牙齿出血，会感染艾滋病，这个才是最要命的。</description>
    </item>
    
    <item>
      <title>Gitbook</title>
      <link>https://guobingyi.github.io/blog/gitbook/</link>
      <pubDate>Wed, 06 Mar 2019 10:29:40 +0800</pubDate>
      
      <guid>https://guobingyi.github.io/blog/gitbook/</guid>
      <description>GitBook 初探 gitbook 是一个基于Node.js的工具。
在Mac pro下安装gitbook非常简单，前提是安装了brew。
0x00 安装node brew install node 0x01 安装gitbook npm install gitbook-cli -g 0x02 简单使用 1.创建项目名称 mkdir goodtime 2.初始化项目 cd goodtime gitbook init 3. 编译项目 gitbook build 4. 启动项目 gitbook serve 5. 导出pdf/epub/mobi (1).安装插件 gitbook install (2).安装电子书插件 brew cask install calibre (3).导出pdf gitbook pdf . goodtime.pdf (4).导出epub gitbook epub . goodtime.epub (5).导出mobi gitbook mobi . goodtime.mobi 0x03 总结 自从使用了hugo后，对写书的兴趣就下降了。原来也用过gitbook写过点书，哈哈～～，准确的说是想学着写书。感觉非常不错，但是由于工作的原因也是断断续续的。或许，有时间应该深入学习一下，毕竟，写点东西还是蛮有意思的。</description>
    </item>
    
    <item>
      <title>Android Studio</title>
      <link>https://guobingyi.github.io/blog/android-studio/</link>
      <pubDate>Wed, 13 Feb 2019 10:31:13 +0800</pubDate>
      
      <guid>https://guobingyi.github.io/blog/android-studio/</guid>
      <description>再见 Android Studio 我们还会再次相见！
0x00 缘起 第一次开始Android开发的时候，是在Eclipse上进行的。那个时候需求安装插件，安装Sdk等等，非常不容易才能搭建起一个开发环境。但是，由于工作的性质，一直没有能好好的学习一下。在不段的学习过程中，发现了Android Studio逐步替换了Eclipse开发Android的地位，并且开发门槛也逐步降低。
在看Android的Sdk文档的时候，发现了官方也推荐这个IDE进行开发，发现这个工具来头不了，是Google自己的IDE。
0x01 我的安卓开发之旅 1. 动物的叫声 做这个app的时候，是看到Google可以搜索动物，并且还能发出动物的叫声，而好好刚刚3岁多，可以让她看看有那些动物，并且这些动物的叫声是什么，就着手开始写了，一开始什么都不知道，就只有这样的一个点子，然后看了《第一行代码》这本书开始的，作者郭霖和我同姓，但是人家可厉害多了。从写书的方式来说，我就觉得非常不错。原来我是非常鄙视国内作者的，写的东西苦涩难懂，简单的东西非用复杂的方式来表达。
2. 老人丢失找回 这个app的思路，来源自于我姑爹，他患上了疾病，有时候会自己走丢，大哥让我给他买哥电话手表，但是电话手表的找回功能却做的没有现在那么好，精度范围居然在50m外，而且没有行动轨迹。对于程序员的我说干就干，地图api使用了百度地图，想找一个云服务器来进行GPS信号传输，但是无奈的在于姑爹由于生病走了，所以这个app就搁浅了。
从这个项目来说，所有的需要都来自于生活，然后让自己的技术服务于生活，那么这个技术就是好的。
0x02 我的断舍离 虽然自己也认为，多学点技术没有什么坏处，所谓技多不压身。但是这个知识爆炸的时代，关注的过多，也会让自己迷失。所以，在断舍离的时候，想到的是，在自己横行发展差不多的时候，来一次纵向的发展，把关注点聚焦一下。
当然，还有的原因就是自己的手机已经是iPhone了，没有模拟器。
我相信自己，如果能用xcode编写出app后，用android studio也同样能编写出来，前提是这个点子得好，为过多人服务。
0x03 删除 1.卸载Android Studio rm -Rf /Applications/Android\ Studio.app rm -Rf ~/Library/Preferences/AndroidStudio* rm ~/Library/Preferences/com.google.android.studio.plist rm -Rf ~/Library/Application\ Support/AndroidStudio* rm -Rf ~/Library/Logs/AndroidStudio* rm -Rf ~/Library/Caches/AndroidStudio* 2. 删除Projects rm -Rf ~/AndroidStudioProjects 3. 删除gradle rm -Rf ~/.gradle 4. 卸载Android Virtual Devices(AVDs) and *.keystore rm -Rf ~/.android 5. 删除Android SDK Tools rm -Rf ~/Library/Android* ps.</description>
    </item>
    
    <item>
      <title>再见Docker</title>
      <link>https://guobingyi.github.io/blog/%E5%86%8D%E8%A7%81docker/</link>
      <pubDate>Tue, 12 Feb 2019 10:56:46 +0800</pubDate>
      
      <guid>https://guobingyi.github.io/blog/%E5%86%8D%E8%A7%81docker/</guid>
      <description>再见Docker 刚刚开始，却又说再见！
0x00 缘起 第一次遇到docker是由于学习go语言的时候，发现有人居然用go写了一个应用容器引擎，而且docker的使用非常方便。就那句话，“谁用谁知道”。哈哈～～
今天突然发现，自己被很多东西困扰了。是时候给自己来一个断舍离了，所以就拿电脑中不经常使用的app开刀了。docker在电脑中待了很长时间了，以至于打开的时候，看看目前的版本是否修复了原来Docker.qcow2文件是否只能呆在固定位置的情况，发现已经可以随意调整了，给docker点赞的同时也决定了删除她，毕竟要给自己做断舍离的同时，也想让自己聚焦一下，太发散了，累。
0x01 docker 常用命令 1. 查看本地可用镜像 docker images 2. 查看运行的容器 docker ps 3. 查看所有的容器 docker ps -a 4. 停止容器 docker stop container 5. 启动容器 docker start container 6. 删除容器 docker rm container 7. 删除镜像 docker rmi image name 8. 从Docker容器内拷贝文件到主机上 docker cp &amp;lt;containerId&amp;gt;:/file/path/within/container /host/path/target 9. 终极命令 docker COMMAND --help 使用docker自带的命令来看命令的使用。
例如，我不知道docker pause 怎么使用，用来干什么，那么我就输入docker pause &amp;ndash;help来显示结果，如下所示：
bingyideMacBook-Pro:~ guoby$ docker stop --help Usage:	docker stop [OPTIONS] CONTAINER [CONTAINER.</description>
    </item>
    
    <item>
      <title>Mac 按键标识</title>
      <link>https://guobingyi.github.io/blog/mac-%E6%8C%89%E9%94%AE%E6%A0%87%E8%AF%86/</link>
      <pubDate>Wed, 09 Jan 2019 14:37:49 +0800</pubDate>
      
      <guid>https://guobingyi.github.io/blog/mac-%E6%8C%89%E9%94%AE%E6%A0%87%E8%AF%86/</guid>
      <description>Mac按键标示 一直都以为在电脑的世界里就只有Windows。
⌘ Command
⇧ Shift
⌥ Option
⌃ Control
↩︎ Return/Enter
⌫ Delete
⌦ 向前删除键（Fn+Delete）
↑ 上箭头
↓ 下箭头
← 左箭头
→ 右箭头
⇞ Page Up（Fn+↑）
⇟ Page Down（Fn+↓）
Home Fn + ←
End Fn + →
⇥ 右制表符（Tab键）
⇤ 左制表符（Shift+Tab）
⎋ Escape (Esc)
Edit ⌃Space 基本的代码补全（补全任何类、方法、变量）
⌃⇧Space 智能代码补全（过滤器方法列表和变量的预期类型）
⌘⇧↩ 自动结束代码，行末自动添加分号
⌘P 显示方法的参数信息
⌃J, Mid. button click 快速查看文档
⇧F1 查看外部文档（在某些代码上会触发打开浏览器显示相关文档）
⌘+鼠标放在代码上 显示代码简要信息
⌘F1 在错误或警告处显示具体描述信息
⌘N, ⌃↩, ⌃N 生成代码（getter、setter、构造函数、hashCode/equals,toString）
⌃O 覆盖方法（重写父类方法）</description>
    </item>
    
    <item>
      <title>Eclipse che 在Mac下安装</title>
      <link>https://guobingyi.github.io/blog/eclipse-che-%E5%9C%A8mac%E4%B8%8B%E5%AE%89%E8%A3%85/</link>
      <pubDate>Tue, 18 Dec 2018 16:19:23 +0800</pubDate>
      
      <guid>https://guobingyi.github.io/blog/eclipse-che-%E5%9C%A8mac%E4%B8%8B%E5%AE%89%E8%A3%85/</guid>
      <description>Eclipse Che 在Mac下安装 折腾，不断的折腾。
0x00 安装 在Mac下安装Eclipse Che，推荐使用Docker的方式，避免了很多的问题。
参考官方文档，单用户安装。
1. 添加IP别名 IP=$(docker run --rm --net host eclipse/che-ip:nightly) &amp;amp;&amp;amp; sudo ifconfig en0 alias $IP 注：在国外的网站上用的是lo0,而我的电脑是en0。如果不能启动使用ifconfig命令查看自己的网卡信息。
2. 安装 docker run -ti -v /var/run/docker.sock:/var/run/docker.sock -v /Users/guoby/mywork/code/che-data:/data eclipse/che start 正常启动后，显示以下内容：
INFO: (che start): Use: http://localhost:8080 INFO: (che start): API: http://localhost:8080/swagger 在浏览器上输入：http://localhost:8080 就可以使用Eclipse Che了。
3.疑难杂症 遇到的问题可能千奇百怪，但是都已经被前人踩到坑了。多搜索找到问题，但是最好的问题解决地方在项目的issues。
Don&amp;rsquo;t worry,it will be solved.
常见问题：
Failed to start workspace with Server &amp;lsquo;wsagent/http&amp;rsquo; in machine &amp;lsquo;dev-machine&amp;rsquo; not available.
Cause: Server &amp;lsquo;wsagent/http&amp;rsquo; in machine &amp;lsquo;dev-machine&amp;rsquo; not available</description>
    </item>
    
    <item>
      <title>Centos Service</title>
      <link>https://guobingyi.github.io/blog/centos-service/</link>
      <pubDate>Mon, 10 Dec 2018 10:45:23 +0800</pubDate>
      
      <guid>https://guobingyi.github.io/blog/centos-service/</guid>
      <description>Centos7 创建服务 用多了Windows后，才发现其实还是有很多选择的。
在Centos下使用服务，还是因为公司有几个项目每次都需要手动去启动，麻烦。所以充分发挥程序员的懒惰。 原来在Windows下用过服务，觉得还是用的挺方便的。但是用得了Centos下的服务后，才发现什么叫做方便， 好用。
0x00 编写服务 myservice.service # auto start [Unit] Description=Start MyService #服务描述 After=mysql.service #字面翻译就是等mysql服务器启动后，再启动 [Service] Type=forking #后台运行 TimeoutSec=0 #设置永不超时 ExecStart=/opt/server-shell/start.sh #服务运行命令 ExecStop=/opt/server-shell/stop.sh #服务停止命令 PrivateTmp=true #分配临时空间 [Install] WantedBy=multi-user.target #多用户 服务定义可以参考：
systemd.service — Service unit configuration
0x01 编写运行命令 start.sh #!/bin/sh #start web sh /opt/apache-tomcat-8.0.32/bin/startup.sh ps. 千万要写 &amp;ldquo;#!/bin/sh&amp;rdquo;，不写有可能执行不了sh脚本。
0x02 编写运行命令 stop.sh #!/bin/sh killPid=`ps -ef|grep start.jar|grep -v &amp;#34;grep&amp;#34;|awk &amp;#39;{print $2}&amp;#39;` if [ &amp;#34;$killPid&amp;#34; != &amp;#34;&amp;#34; ]; then echo killing start.jar process.</description>
    </item>
    
    <item>
      <title>brew 使用指南</title>
      <link>https://guobingyi.github.io/blog/brew-%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/</link>
      <pubDate>Thu, 08 Nov 2018 11:22:28 +0800</pubDate>
      
      <guid>https://guobingyi.github.io/blog/brew-%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/</guid>
      <description>brew 使用指南 自从用了brew，就在也不想离开mac系统了。
0x00安装brew 访问brew官网，根据提示进行安装。
/usr/bin/ruby -e &amp;#34;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&amp;#34; 0x01使用brew安装软件 brew install wget 0x02使用brew更新软件 brew update 更新使用brew安装的软件
0x03使用brew执行更新 brew upgrade 所以，一般都使用组合命令进行执行
brew update &amp;amp;&amp;amp; brew upgrade 0x04 使用cleanup执行删除老更新包 brew cleanup 0x05 cask下的安装与删除 安装
brew cask install name 卸载
brew cask uninstall name 0x06 总结常用命令 1. 安装源码 brew install wget 2. 显示软件的各种信息（包括版本、源码地址、依赖等） brew info svn 3. 卸载软件 $brew uninstall mpv 4. 搜索brew 支持的软件（支持模糊搜索） brew search python 5. 列出本机通过brew安装的所有软件 brew list 6.</description>
    </item>
    
    <item>
      <title>快速下载所需的Jar</title>
      <link>https://guobingyi.github.io/blog/%E5%BF%AB%E9%80%9F%E4%B8%8B%E8%BD%BD%E6%89%80%E9%9C%80%E7%9A%84jar/</link>
      <pubDate>Tue, 06 Nov 2018 10:06:02 +0800</pubDate>
      
      <guid>https://guobingyi.github.io/blog/%E5%BF%AB%E9%80%9F%E4%B8%8B%E8%BD%BD%E6%89%80%E9%9C%80%E7%9A%84jar/</guid>
      <description>使用maven下载jar到本地 原来使用Java进行项目开发的时候，都是使用浏览器一个一个jar进行下载，放到lib目录中使用。 最近，发现使用maven的效率更高，所以，使用该方法。
1.创建一个pom.xml文件。 &amp;lt;?xml version=&amp;#34;1.0&amp;#34;?&amp;gt; &amp;lt;project xmlns=&amp;#34;http://maven.apache.org/POM/4.0.0&amp;#34; xmlns:xsi=&amp;#34;http://www.w3.org/2001/XMLSchema-instance&amp;#34; xsi:schemaLocation=&amp;#34;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&amp;#34;&amp;gt; &amp;lt;modelVersion&amp;gt;4.0.0&amp;lt;/modelVersion&amp;gt; &amp;lt;groupId&amp;gt;com.bingyi&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;test&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;1.0-SNAPSHOT&amp;lt;/version&amp;gt; &amp;lt;repositories&amp;gt; &amp;lt;!-- &amp;lt;repository&amp;gt;&amp;lt;id&amp;gt;central-repos2&amp;lt;/id&amp;gt;&amp;lt;name&amp;gt;Central Repository 2&amp;lt;/name&amp;gt;&amp;lt;url&amp;gt;http://repo.spring.io/plugins-release&amp;lt;/url&amp;gt;&amp;lt;/repository&amp;gt; --&amp;gt; &amp;lt;!-- &amp;lt;repository&amp;gt;&amp;lt;id&amp;gt;maven.net.cn&amp;lt;/id&amp;gt;&amp;lt;name&amp;gt;oneof the central mirrors in china&amp;lt;/name&amp;gt;&amp;lt;url&amp;gt;http://maven.net.cn/content/groups/public/&amp;lt;/url&amp;gt;&amp;lt;/repository&amp;gt; --&amp;gt; &amp;lt;repository&amp;gt; &amp;lt;id&amp;gt;oschina-repos&amp;lt;/id&amp;gt; &amp;lt;name&amp;gt;Oschina Releases&amp;lt;/name&amp;gt; &amp;lt;url&amp;gt;http://maven.oschina.net/content/groups/public&amp;lt;/url&amp;gt; &amp;lt;/repository&amp;gt; &amp;lt;!-- &amp;lt;repository&amp;gt;&amp;lt;id&amp;gt;alimaven&amp;lt;/id&amp;gt;&amp;lt;name&amp;gt;aliyun maven&amp;lt;/name&amp;gt;&amp;lt;url&amp;gt;http://maven.aliyun.com/nexus/content/groups/public/&amp;lt;/url&amp;gt;&amp;lt;/repository&amp;gt; --&amp;gt; &amp;lt;!-- &amp;lt;repository&amp;gt;&amp;lt;id&amp;gt;central&amp;lt;/id&amp;gt;&amp;lt;name&amp;gt;Maven Repository Switchboard&amp;lt;/name&amp;gt;&amp;lt;url&amp;gt;http://repo1.maven.org/maven2/&amp;lt;/url&amp;gt;&amp;lt;/repository&amp;gt; --&amp;gt; &amp;lt;/repositories&amp;gt; &amp;lt;dependencies&amp;gt; &amp;lt;!-- TODO: add you need jar --&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.jasypt&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;jasypt&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;1.8&amp;lt;/version&amp;gt; &amp;lt;exclusions&amp;gt; &amp;lt;exclusion&amp;gt; &amp;lt;groupId&amp;gt;org.slf4j&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;slf4j-api&amp;lt;/artifactId&amp;gt; &amp;lt;/exclusion&amp;gt; &amp;lt;/exclusions&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;/dependencies&amp;gt; &amp;lt;/project&amp;gt; 2.创建执行脚本 downloadjar.bat call mvn -f pom.</description>
    </item>
    
    <item>
      <title>Upgrade</title>
      <link>https://guobingyi.github.io/blog/upgrade/</link>
      <pubDate>Mon, 27 Aug 2018 20:52:12 +0800</pubDate>
      
      <guid>https://guobingyi.github.io/blog/upgrade/</guid>
      <description>Upgrade 升级 一次偶然的机会在网上看到了一部片子叫《升级》，刚刚看到的时候感觉不到什么，都没有想到要去下载下来看一下。因为最近加班已经没有精力去看电影了，但是听说非常不错，也就下载了，找了一个时间段，将电影看了一下，感觉还真不错。
首先，看到精彩的地方是几点：
一个机械师在家中的地下室陶腾他的那台老车，看是风格迥异，甚至我都感觉是不是在看赛车的节目。但是，可以看到的是，这个男猪脚的手艺不错，经过一番捣腾后，发动机还是响起了。
画风一改，老婆做车无人驾驶汽车来，而且还可以在车上进行视频电话，完全可以抛现在的无人驾驶车好几条街。老婆为了和老公早点见面，匆匆挂断电话，导致我一度怀疑是不是，这个通电话的人买凶杀了老婆。
超豪华的家，带上人工智能，在茶几上进行查看新闻和手指操作，让这个人工智能家居变得更加高大上。
无人机值守，让整个区域都变成了监控范围。但是，也存在很多漏洞，掌控权在高级的用户上手，而所有有权限的，都可以进行篡改。在科技面前所有的东西都可以变的虚拟，所有的东西又都可以伪装。
其实，在人工智能获取到最高权限就意味着人类已经被人工智能控制。
在看完后，还是有许多让人思考的地方，比如前段时间看到的匿名者（anon）,都在说人工智能的事情，但是好在anon的人工智能还掌控在人类的手上，而升级却已经完全被人工智能掌握。最讽刺的是，人类总喜欢虚拟世界，这个和我们在玩的游戏有什么不同呢？我们都在现实生活中获取不到乐趣。那么，是否在虚拟世界里就可以活下去。这个又和《黑客帝国》中的人物一样，是否人到最后都是被圈养呢？可以让人进行无限的思考，如果现实社会不能让人感到快乐，那么是否在虚拟世界就让人快乐了。人类追求的到底是什么呢？好像非常矛盾，想让科技带给人类便捷的同时，却又害怕被科技替代。在电影中的科技，看似非常智能化，但是同样也可以让人感受到这种科技离我们越来越近，面临的是我们如何去看待这些科技。做为一个程序员，虽然非常想去实现这些科技，但是同时也为这种后果去思考。人类是否真的要被自己玩坏呢？
或许写代码也有这种感觉，感觉写一个脚本就可以完成好多自动化工作，甚至感觉所有的控制权都交给了系统。但是，或多或少，都会让我们感觉到，控制权必须掌握在自己手中，才有主动权。而在获取这种感觉的时候，都是通过不断的升级代码来完成的。当代码有自己的思维时候，或许我们也就要下岗了。
当主角说主动权交给人工智能后，每次结果都主角大吃一惊的时候，我就感觉到这种感觉非常不好，因为已经不可控制了。或许在这个时候，最好的选择就是放弃吧，但是又有多少人可以做到呢？</description>
    </item>
    
    <item>
      <title>GameOfThrones</title>
      <link>https://guobingyi.github.io/blog/gameofthrones/</link>
      <pubDate>Sat, 04 Aug 2018 15:20:33 +0800</pubDate>
      
      <guid>https://guobingyi.github.io/blog/gameofthrones/</guid>
      <description>冰与火之歌 很早的时候就有人推荐给我看，但是我一直都沉迷在《行尸走肉》中。觉得美剧中，没有比《行尸走肉》更好看的了。其实，我错了，大错特错。
0x00 狼家 史塔克 从第一季就被鸿达的场面所吸引了，在此之前，我在看《天行健》这本书，也是感觉不错。但是还是被《冰与火之歌》吸引了。
在全剧中，我最喜欢的一句话就是凛冬将至（Winter is coming）。看似平静的生活，也会被无情的打乱。对于平静的北境，来自异鬼的威胁，来自国王罗伯的邀请。看似艾德·史塔克要开始新的生活，想不到是死路一条。一直以为的主角，到头来，谁也不敢猜测。
0x01 鹿家 罗伯 鹿家非常搞笑。
0x02 龙家 龙妈真的很惨。
0x03 玫瑰家 荆棘女王。
0x04 狮子家 “有债必还”是狮子家的人非常自豪的话。
小拇指说了一句话叫：“知识就是权力！”，而王后马上就说：“权力就是权力！”。非常经典。
0x05 守夜人 守夜人可以说是非常大公无私的，但是从守夜人的来源上看，又是地位非常卑微的人。
0x06 鹰家 鹰家给我的感觉就是没有好好的教育好下一代，让儿子非常随着母亲。</description>
    </item>
    
    <item>
      <title>Centos7搭建ftp服务</title>
      <link>https://guobingyi.github.io/blog/centos7%E6%90%AD%E5%BB%BAftp%E6%9C%8D%E5%8A%A1/</link>
      <pubDate>Fri, 27 Jul 2018 09:42:51 +0800</pubDate>
      
      <guid>https://guobingyi.github.io/blog/centos7%E6%90%AD%E5%BB%BAftp%E6%9C%8D%E5%8A%A1/</guid>
      <description>Centos7 搭建ftp服务 其实，我需求的很简单，你别讲的那么复杂。
第一次在centos7下搭建ftp服务，原来在redhat下搭建过，但是忘记了怎么搭建了。尴尬了，所以就重头开始。我的需求很简单，就是一个ftp服务，去掉匿名登录后，有个用户和密码，能将文件放到上面就完了。好了，需求有了，我用百度搜了“centos7 ftp服务搭建”，一大堆网页跑出了，我选择了一些常用的地方，比如csdn,博客园，红黑联盟。但是非常失望，没有一个地方可以很清楚的讲解清楚，如果照着页面上的做，那么可能会进入一个死结，但是文章中又没有提到该怎么解，反正人家是成功的，你的就不成功。郁闷！这就陷入另外的一个处境，你不得不尝试其他文章的方法，这样一折腾，一个早上，或者一天就结束了。希望我能在这里将我遇到的坑，和怎么解决的方法告诉大家，避免走弯路。
0x00 安装vsftpd 如果centos下没有安装vsftpd，那么就你就直接安装:
yum install vsftpd 如果安装了，那么就直接卸载了。
yum remove vsftpd 卸载后需要注意以下问题：
查看线程是否存在 ps auxf | grep vsftpd 如果线程存在则直接 kill -9 .
如果/etc/vsftpd文件夹存在，先删除在重新安装。 即：在重新安装前，全部vsftpd的线程不存在，文件夹为最新。
0x01 配置信息 ftp服务的配置信息路径为：
/etc/vsftpd/vsftpd.conf 一般对照配置修改以下内容：
#禁用匿名用户登录 anonymous_enable=NO #是否允许本地用户登录 chroot_local_user=YES #ftp根目录 local_root=/ftpserver/flowdata 0x02 创建本地用户 创建ftp用户 useradd jack 设置用户密码 echo &amp;#34;jack_pass_word&amp;#34; | passwd jack --stdin 3.限制该用户仅能通过 FTP 访问
usermod -s /sbin/nologin jack 0x03 启动ftp服务 systemctl start vsftpd 0x04 验证ftp服务 在浏览器中如输入以下地址，如果能正常访问，则部署成功；如果没有，从0开始。
FTP://jack:jack_pass_word@192.168.100.175:21/ 192.168.100.175是我服务器的Ip，如果这个都不知道替换的话，算了，别弄了，不要为难自己。 0x05 解决vsftp登录后but failed to open directory的问题 关闭SELinux的方法：</description>
    </item>
    
    <item>
      <title>Anon</title>
      <link>https://guobingyi.github.io/blog/anon/</link>
      <pubDate>Sat, 14 Jul 2018 16:46:13 +0800</pubDate>
      
      <guid>https://guobingyi.github.io/blog/anon/</guid>
      <description>匿名者 What you look for every day of your life.Why you&amp;rsquo;ll never understand.It&amp;rsquo;s not that I have something to hide&amp;hellip; I hava nothing I want you to see.
最近看了一部电影《匿名者》。
刚刚开始看的时候，还是被影片中的电脑特技给征服了。看到这种通过眼睛来进行扫描人员信息的时候，还是联想到了谷歌的glass。但是唯一的区别在于谷歌glass是可以摘下来的，而电影里的是每个人都被种植到了眼睛了，并且不能被摘除。如果被入侵了，那么人就瞎了。而且所谓的记忆，也会被删除。
不可否认，这样将主动权都交给了电脑，会提高相对的安全。但是，更多的是不安全。所以，电影里的女主角才启动了隐藏算法。越是绝对的控制，越是不安全。
隐私问题也是一个非常大的问题。现在人们越来越注重个人隐私。但是，在电影中，统治者将所有人的隐私进行统一管理，警察可以查看每个人的隐私，当然hacker也可以。就是说，我们的隐私被放到服务器上，有权限的人都可以看到。想想都恐怖，如果人没有了隐私，是不是社会会更安全。
在推特上也看到，现在社会中使用脸部采集，每个人去过什么地方，都会被该地方的监控录入，然后进行分析。就是说，如果你没有做什么，或者没有人来调用监控，那么你的隐私是安全的。但是如果有人调用了，那么你就没有什么所谓的隐私可言。
对于隐私来说，应该是双刃剑。用的好，可以造福人类，用的不好，也可以危害人类。电影中的去除影像技术，就是给犯罪人员逃脱法律制裁。而犯罪的依据有通过个人的视角来评定。所以，从电影中看出，这个系统是存在非常大的严重bug的。
结论就是，任何技术，任何规则，都不能摆脱人性。人之初，性本善。突然想到了《僵尸世界大战》上的13人原则，当12个人都同意的时候，必须有1个人来推翻12人。没有绝对的东西，事物都是两面性的。
害怕，将来会有这么一天。虽然是写代码的，但是也不能将所有的东西都交于代码。或许，有种说法叫返璞归真。太过于依赖技术，不如不用技术。我一直相信，科技只能听命于人类，而非让科技来主动指导人类。太多，太多的科幻片，都直奔主题，说科技导致了人类毁灭。但是，我觉得，《匿名者》这部电影，隐晦的道出了这个道理。而这种技术，离我们却又那么近。</description>
    </item>
    
    <item>
      <title>Kafka</title>
      <link>https://guobingyi.github.io/blog/kafka/</link>
      <pubDate>Fri, 13 Jul 2018 19:46:58 +0800</pubDate>
      
      <guid>https://guobingyi.github.io/blog/kafka/</guid>
      <description>学习kafka 学习技术的过程中，我慢慢习惯去官网看看，不管学习什么。从什么时候开始，当我听说，别人讲给的听的感觉，就像人吃东西，然后在喂给你的时候。听着非常恶心。从营养角度来说，吃被人吐出来的东西，营养已经被消化了一部分。
0x00 开始 kafka的官网 http://kafka.apache.org/ 什么是kafka Apache Kafka是由Apache软件基金会开发的一个开源消息系统项目，由Scala写成。Kafka最初是由LinkedIn开发，并于2011年初开源。2012年10月从Apache Incubator毕业。该项目的目标是为处理实时数据提供一个统一、高通量、低等待的平台。 Kafka是一个分布式的、分区的、多复本的日志提交服务。它通过一种独一无二的设计提供了一个消息系统的功能。
0x01 kafka常用命令 注意
&amp;amp;保证在关闭shell窗口后能继续运行
在windows下将.sh改为.bat,“/”改为“\”
开启ZooKeeper bin/zookeeper-server-start.sh config/zookeeper.properties &amp;amp; 开启kafka服务 bin/kafka-server-start.sh config/server.properties &amp;amp; ps.如果通过终端进入，不要直接关闭终端，使用exit命令关闭，不然会出现kafka进程全部关闭的情况。
创建一个主题 bin/kafka-topics.sh --create --zookeeper localhost:2181 --replication-factor 1 --partitions 1 --topic test 列举主题 bin/kafka-topics.sh --list --zookeeper localhost:2181 发送消息 向主题为test的发送消息，输入字符后回车。 bin/kafka-console-producer.sh --broker-list localhost:9092 --topic test 启动消费者 &amp;ndash;from-beginning 是从开始获取，可以不用该选项，直接从实时消息体获取信息。 bin/kafka-console-consumer.sh --bootstrap-server localhost:9092 --topic test --from-beginning 启动kafka时需要配置的信息 在server.properties中进行配置 listeners=PLAINTEXT://192.168.100.181:9092 log.dirs=/opt/kafka_data </description>
    </item>
    
    <item>
      <title>begin start learn c language</title>
      <link>https://guobingyi.github.io/blog/begin-start-learn-c-language/</link>
      <pubDate>Mon, 09 Jul 2018 09:18:07 +0800</pubDate>
      
      <guid>https://guobingyi.github.io/blog/begin-start-learn-c-language/</guid>
      <description>C学习笔记 c语言是大学里的入门语言，时隔十多年后，又开始学习。
0x00 工具 工欲善其事必先利其器。
调试工具 在苹果电脑上直接使用gdb进行调试会存在一定的问题。所以最好的调试环境还是放到了docker上，或者直接使用了vs code 进行调试。因为这种那种的原因，所以最终还是决定使用vs code 进行ide。
gdb调试
在苹果系统中gdb调试各种不爽，sudo后也有其他问题；代码签名也有问题。反正就是苹果系统不推荐你使用就行了，别折腾太伤。本来是学习c语言的，绕了一大圈发现会在max os上使用gdb了。
lldb调试
苹果系统上推荐使用lldb进行调试c语言。所以想在mac os上调试，就用它吧，别和自己过不去。
IDE Visual studio code
微软推出的，免费。
emacs
这个不用说了吧，神器。但是，很难！
make 用过ant的都知道，ant是学习make写的。
要想真正的了解make，还是在于读一遍文档吧。
https://www.gnu.org/software/make/manual/make.pdf 在读一遍陈浩大神的makefile教程。
https://blog.csdn.net/haoel/article/details/2886 这个地址将陈浩大神的帖子整理了一下。
https://blog.csdn.net/weixin_38391755/article/details/80380786 </description>
    </item>
    
    <item>
      <title>初探Shell</title>
      <link>https://guobingyi.github.io/blog/%E5%88%9D%E6%8E%A2shell/</link>
      <pubDate>Wed, 04 Jul 2018 19:54:52 +0800</pubDate>
      
      <guid>https://guobingyi.github.io/blog/%E5%88%9D%E6%8E%A2shell/</guid>
      <description>You got to put the past behind you before you can move on.
由于项目上的需要开始接触shell，其实shell早就有过接触，只不过这次接触了，深入的思考了。
0x00 为什么用shell? 原来学习一门语言的时候都会这样问自己？但是大多数的答案都是：项目上需要。没有思考的余地，也就没有深入的思考。
现在开始用到，也学习了python,ruby,swift,javascript后发现，shell有她自身更好的发挥余地。比如我们经常会使用的命令cd,hugo server,git add -A等。别小看这些命令，一个一个来，还是要输入一会的。程序员不就图个安逸，一个shell脚本搞定的事情，为什么要多来输入几次呢？在举个例子，如果终端只有一个，那么要看tomcat的日志，还要更新类，那么就会来回的路径下切换，如果不用文本记录下来，光敲路径就花费很长的时间，so，用个shell脚本就可以解决了。当然，这个例子也不能说明shell的强大之处，那么这个例子就是shell的重要用途了。在零部署的时候，需要安装一些组件，数据库，初始化数据库脚本，注册服务，启动服务，关机。整个流程可以说一气呵成，但是如果是人工的话，那么想想工作量也是吓人的，这还不包括部署多台服务器呢。
如果是安装系统，会非常喜欢ghost版本，安装就step by step。而shell就提供了这样功能。当然有人会说python也一样搞定。是的，不可否认，但是如果python自身也需要安装库呢？所以，shell独天得厚的优势在于系统自带的同时，还可以自动安装所需的命令。
结论就是：如果你需要将命令step by step执行，那么就选择shell吧。
0x01 Hello,World! 每个学习程序设计的开始都会是这个，也因为这个才从此入坑。
创建文件hello.sh,输入一下内容：
#!/bin/bash echo &amp;#39;Hello.World!&amp;#39; 在终端中使用sh hello.sh,将输出以下结果：
Hello,World! 恭喜你，入门了。
思考：
为什么第一行会有个#!/bin/bash echo 可以用单引号，也可以用双引号，区别是什么？ 如果要让shell脚步可以直接运行，怎么做？ 如何文件后缀是php,那么有该如何做呢？ 0x02 变量 shell的变量命令基本和常用语言(pythoh/ruby/java/go)基本差不多，目前还没有遇到过坑。
那么如何定义一个变量呢？ someone=&amp;#34;Lee&amp;#34; some_two=&amp;#34;http://10.10.10.222&amp;#34; 看似简单的定义变量，如果写多了程序，就会有个问题，如下：
someone = &amp;#34;Lee&amp;#34; #Eroor 为什么会有这个错误，因为写代码的时候都喜欢来个空格，这样看着顺眼些，但是在shell里是错误的。因为变量名和等号之间不能有空格。
变量名和等号之间不能有空格。
变量名和等号之间不能有空格。
变量名和等号之间不能有空格。
重要的事情说三遍，你要知道调试shell，就像java里System.out.println(&amp;ldquo;ok&amp;rdquo;)一样麻烦，更何况shell木有断点功能。目前我还不知道shell的ide，或者打断点，如果你知道，请告诉我，让我试试。
使用变量 $someone $(some_two) 只读变量 readonly someone 删除变量 unset someone 0x03 字符串 单引号 someone=&amp;#39;Lee&amp;#39; 单引号里的任何字符都会原样输出，单引号字符串中的变量是无效的；</description>
    </item>
    
    <item>
      <title>倚天屠龙记读后感</title>
      <link>https://guobingyi.github.io/blog/%E5%80%9A%E5%A4%A9%E5%B1%A0%E9%BE%99%E8%AE%B0%E8%AF%BB%E5%90%8E%E6%84%9F/</link>
      <pubDate>Sun, 24 Jun 2018 22:11:31 +0800</pubDate>
      
      <guid>https://guobingyi.github.io/blog/%E5%80%9A%E5%A4%A9%E5%B1%A0%E9%BE%99%E8%AE%B0%E8%AF%BB%E5%90%8E%E6%84%9F/</guid>
      <description>个性，决定了一个人未来能走多远。
金庸的小说一直都是自己喜欢的。从高中开始，读的第一本书是《鹿鼎记》，那个时候是老师要求读的，原来都不知道有金庸这个人。从此一发不可收拾，开始追读金庸的小说。到大学的时候，由于金庸的小说有限，所以一直省着读。工作后，读了《笑傲江湖》，近期读了《倚天屠龙记》。
张无忌这个人的角色，开始就是一个悲情的角色。让人从开始就非常心疼他，关心他。正所谓，天无绝人之路，掉进山洞，学到了九阳真经。治好了自己体内的玄冰之毒，而且也学到了上乘武功。从这里开始，大家都觉得应该是登山人生巅峰。可是，如果这样小说就没有太多意义了。人性贯穿到金庸的小说中，都是宣扬着“正气”，而要突出这些“正气”，就要从多个方面来说明。真善美，假恶臭。在小说中，这几个人被刻画的非常形象生动。
张三丰 张三丰，一个小和尚，自己开创了武当门派。或许，也只有大师才能有如此的造诣。对待生活的态度，不是一板一拍；对待世间的事，也不是循规蹈矩。当然，武功上的造诣，更是独自悟道，发明了太极心法。
谢逊 爱恨分明，敢作敢当。对家人的爱，超出你的想象。聪明，不是说出来的。
小昭 如果说要和张无忌比惨的话，小昭算一个。能这样忍辱负重，并最后实现人生目标的人，真的，厉害。
周芷若 我竟然自己想到了周芷若的剧情，想她应该是前朝皇帝的女儿才这样希望张无忌能掌管大权的。其实，我真的想多了。
赵敏 手段不是一般的厉害，和张无忌的妈妈有得一拼。因为电影了，演员是同一个赵敏，所以这两个角色真是难分，同时也感慨张敏的演的真好。
在小说中，每个人物都刻画的非常深刻。或许也只有金庸才能将这些人物写的那么鲜活。</description>
    </item>
    
    <item>
      <title>Think</title>
      <link>https://guobingyi.github.io/blog/think/</link>
      <pubDate>Fri, 22 Jun 2018 09:41:18 +0800</pubDate>
      
      <guid>https://guobingyi.github.io/blog/think/</guid>
      <description>想法很多 自从没有在游戏上花费太多的时间，现在想法也很多。
1.用hugo搭建自己的博客 现在已经使用了，但是感觉样式不怎么好看，慢慢在来改了。
不管怎么说，一切的开始，虽然难，但是都在前进就好！
2.用docker中的centos来搭建开发环境 因为自己的系统是macos，所以很多代码不一定能跑起来，比如dbdk。所以就想用docker的方式来搭建一个开放平台，这样即使换了电脑或则系统，都可以使用docker把镜像导入进来。思路而已，还要考虑的问题如下：
如何将镜像进行备份和同步；
初步的想法是docker将镜像导出，然后git到github上进行存储。但是这些都是需要压缩和加密的。
如何将实体机的开发环境弱化；
目前的开发环境都在本机的实体机上，所以想要弱化就必须考虑到一些开发ide，比如java的eclipse。想到用eclipse che来替代，就看docker是否能支持的好了。
3.尝试着写本书 这个就是一个伏笔了，希望能带来惊喜。当然，这个仅仅是生活的一部分，如果依赖就抱有太大的希望，就太给自己压力了。
先学着写吧。
4.科技改变生活 我觉得先从自己的生活改变开始，让自己的工作效率更高。为了达到这边目标，先从以下几点做起：
使用shell脚本，将自己常用的命令进行一个封装； 将一些程序中经常使用的工具进行汇总，供shell脚本使用； 自己编写代码，提供没有的工具。 </description>
    </item>
    
  </channel>
</rss>
