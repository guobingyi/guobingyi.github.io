<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Just Do it on guobingyi</title>
    <link>https://guobingyi.github.io/</link>
    <description>Recent content in Just Do it on guobingyi</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Thu, 06 Feb 2020 19:37:59 +0800</lastBuildDate>
    
	<atom:link href="https://guobingyi.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Csharp</title>
      <link>https://guobingyi.github.io/code/csharp/</link>
      <pubDate>Thu, 06 Feb 2020 19:37:59 +0800</pubDate>
      
      <guid>https://guobingyi.github.io/code/csharp/</guid>
      <description>C#  C#的学习有太多的情怀，比如pascal。
 一直都在不断的换语言来学习，来弥补学习上的懒惰。
不知道是什么原因，我突然对每种语言都热衷起来，对我原来写的那篇博客打脸，或者说也不能算是打脸，而是不同时期的不同思考罢了。 😊
第一份工作是冲着Java的Sun认证去的，发现是vb和Delphi开发的项目。而在此之前，大学毕业的时候看到老九用C#写代码，老高就让我好好学习一下，而我的那台老电脑还存着第一本书是介绍C#的。说明在最早的时候，我认识到的是C#，而不是Java。
刚刚毕业的时候，学习一门技术的时候，都是去书店里找书。或者准确的说，互联网的发展没有像现在一样。需要学习什么，都需要从书本上去看，然后在实践。现在不同了，需要什么样的知识，直接到官网看文档。不能说是能力提升了，还是知识的获取变得更轻松了。也难怪最近几年的技术类书几乎都没有买了，因为官网上的文档已经非常全面，而且都非常规范。原来的模式是买书，实践，向师傅请教，然后思考，最后才到看文档。现在的模式是文档，实践，文档，google就基本能完成了。现在的模式拉锯了师傅之间的距离，师傅层面上知道的是经验问题，而经验也会由于技术的发展而落后，或者失效。所以，从这个层面上来说，如果不学习，那么很快就会被超越。
学习语言的目的是什么？我想就是用该语言快速的完成任务。更好听的是实现自己的思想。生活在这个时代太幸福了，不需要一来就学习汇编语言，有非常多的高级语言供我们选择。现阶段我比较喜欢的go，打动我的是真正的跨平台。python，ruby吧，你要装运行环境，Java呢，虚拟机要装，C#要安装dotnet-sdk。Rust准备看一下。扯远了，学习的目的还是有所需求。比如，公司的项目就是该语言开发的，你要继续开发；公司的项目需要重新搭建，你需要进行评估。总之，学习带着目的来和不带目的来，学习的效果是不一样的。
最近，突发奇想，把所学的语言都重新认真的看一遍，因为咋不是有时间嘛，把时间浪费在有意义的事情上，多好。而最先被看到的是C#，那种熟悉的感觉依稀记得。所以直接安装了。
brew cask install dotnet-sdk 安装完看了一下版本，都3.1.101了，发展速度，好快。
快速的搭建了一个hello world项目。
dotnet new console --name Hello ps. 创建项目很快就Restore succeeded. 但是为什么终端还是需要等1分钟左右，我怀疑还在下载什么东西，怪我网速慢咯。
执行项目。
 cd Hello dotnet run 这样一个hello,world就打印在终端了，嗯，是非常速度的。
接着就可以用你喜欢的IDE打开项目，开始慢慢品味了。
code -r Hello 最小的完整代码片段：
using System; namespace Hello { class Program { static void Main(string[] args) { Console.WriteLine(&amp;quot;Hello World!&amp;quot;); } } } 怎么样，C#的开发已经够简单了吧，如果是原来，第一得先下个dotnet runtime，还有visual studio 200X的IDE，那么你才能进行C#的开发，当然也有免费的IDE，但是和visual studio比较起来就逊色多了。现在有免费的Visual studio Code可以用，可以说越来越对开发人员友好了，也可以说选择越来越多了。
 在学习任何一门语言的时候，最重要的事情就是集中关注概念，不要迷失在语言的技术细节中。学习语言的目的是成为一个更好的程序员；也就是说，使自己在设计和实现新系统时，以及在维护老系统时，能够工作得更有效。为此，对与程序设计和设计技术的理解远比对细节的理解更重要，而这种理解的根本是时间和实践。
 在看完了将近2000多页的C#文档，对C#有了新的认识，当然最重要的是学习到了C#可以运用的地方，什么时候用，什么地方用。在大脑里有一个认识，比如在简析XML文件的时候，LINQ的运用太棒了，比如异步调用的方式等。所有的这些内容都可以提供在以后的设计过程中的一个参考，一个衡量。最终，决定用什么最有效，最快速的完成任务。
下面是一些非常重要的部分：
C# 教程  官方的例子，手把手教你。</description>
    </item>
    
    <item>
      <title>Notimeplay</title>
      <link>https://guobingyi.github.io/blog/notimeplay/</link>
      <pubDate>Sun, 02 Feb 2020 15:45:05 +0800</pubDate>
      
      <guid>https://guobingyi.github.io/blog/notimeplay/</guid>
      <description>没有时间玩  玩物丧志？
 曾几何时，我也会为了玩而发愁？或许好多时候都在为此而发愁吧，上学的时候，为了玩三国志，必须要先把作业做完；上班的时候，必须要把工作做完；在家的时候，必须要把家务做完。或许，跟多的时候，都在为游戏而发愁，我什么时候可以有自己的时间呢？然后，开始思考，如何快速的做完作业，如何快速的做完工作，如何快速的做完家务。这样就可以玩了，但是发现不管怎么快速，时间总也不够玩。在游戏里，时间过的真快，感觉都没有怎么玩就要睡觉了，然后有时会为了玩而熬夜。而熬夜却是最危险的事情，它会让寿命减短。这样做又是否值得呢？日出而作，日落而息。自然规律不能破坏，不然，面临的问题会非常严重，如癌症。得出结论后，是不是觉得熬夜不值得呢？是的，非常不值得。我记得有一次，在身体不适的时候，玩游戏也不能解除这样的痛苦，当然抽烟更是难受。玩游戏与抽烟，虽然不能说一样，但是有的时候会让你快乐，但是如果熬夜玩游戏，却会要命。抽烟同样是这个道理。
明白了这些，熬夜去游戏是会付出代价的，苍天会饶过谁？抽烟也是。算了这笔帐后，发现，如果想玩，就得健康的玩，不然都是亏的。
从今天开始，是时候改变了。</description>
    </item>
    
    <item>
      <title>ProxySet</title>
      <link>https://guobingyi.github.io/code/proxyset/</link>
      <pubDate>Thu, 30 Jan 2020 11:05:10 +0800</pubDate>
      
      <guid>https://guobingyi.github.io/code/proxyset/</guid>
      <description>Mac下代理设置  采菊东篱下，悠然见南山。
 一直都在网络上找Mac下的代理设置，因为使用了VPN。但是，查找的资料一直都没有能说清楚，直到昨天，终于看到了这篇文章，把我近几个月来的烦恼都解决了。不知道能不能查阅到，所以我贴了大部分内容。
在终端下访问系统代理 scutil命令管理系统配置参数，通过 &amp;ndash;proxy参数来显示系统代理信息。
未配置代理情况：
$ scutil --proxy &amp;lt;dictionary&amp;gt; { FTPPassive : 1 HTTPEnable : 0 HTTPSEnable : 0 } 配置代理的情况：
$ scutil --proxy &amp;lt;dictionary&amp;gt; { ExcludeSimpleHostnames : 1 FTPEnable : 0 FTPPassive : 1 GopherEnable : 0 HTTPEnable : 1 HTTPPort : 49199 HTTPProxy : localhost HTTPSEnable : 1 HTTPSPort : 49199 HTTPSProxy : localhost ProxyAutoConfigEnable : 0 ProxyAutoDiscoveryEnable : 0 RTSPEnable : 0 SOCKSEnable : 0 } 解析scutil输出 我们可以使用awk解析scutil的输出并提取代理配置。 以下代码片段可以解决问题：</description>
    </item>
    
    <item>
      <title>Hhreadbooklist</title>
      <link>https://guobingyi.github.io/book/hhreadbooklist/</link>
      <pubDate>Tue, 28 Jan 2020 11:14:49 +0800</pubDate>
      
      <guid>https://guobingyi.github.io/book/hhreadbooklist/</guid>
      <description>好好阅读列表  记录好好阅读信息。
 2020年1月28日，好好已经完成以下书的阅读：
   书名 备注 图片     《飞吧，红头发》     《愿望的实现》     《七色花》     《金波作品选》     《大头儿子和小头爸爸 甜密密的森林》     《神笔马良》      </description>
    </item>
    
    <item>
      <title>Changelife</title>
      <link>https://guobingyi.github.io/blog/changelife/</link>
      <pubDate>Sat, 25 Jan 2020 20:58:10 +0800</pubDate>
      
      <guid>https://guobingyi.github.io/blog/changelife/</guid>
      <description>改变生活  最害怕的事情就是习惯。
 自从不需要为了生活奔波后，就不知道了该怎么生活，或者说不知道现在该如何生活。原来，只要上班就可以了，现在不上班了却不知道干什么了？好讽刺。
今天听到老婆说好好非常期待和我一起去爬石头的日子，现在回想起来已经好多年了，在她上幼儿园的时候，现在呢？已经二年级的下学期了。时间真不会为谁而停留，也不会你后悔就可以。其实，我不明白的就是为什么老婆总说我，说我不要在孩子面前玩游戏，现在我终于知道了。原来父亲的这个角色不是谁都可以替代的，每个人都有自己的角色。这些年来，我真的是缺少的这个角色的时间。最忙的时候，加班总早上出来，孩子还在睡觉，到晚上回家的时候孩子已经睡了，太多太多的时间都是这样过的，而当时却是没有选择。现在，有选择了，而我却又过着原来的生活，总想让孩子早点睡觉，这样我就可以打游戏了。我很多时候都是这样的态度，如果当天没有能玩游戏却感受到缺失了什么。所以，难道是游戏让我获得的东西是什么呢？任天堂的Switch我也买了，也玩了荒野之息，也感受到了大师么的杰作，可是为什么我还是不满足呢？还要去玩王者荣耀，还是每天都觉得什么都缺失呢？我想或多或少，是我自己没有认识到生活，自己应有的生活态度。
好了，现在终于被老婆点破了，我这个缺失的父亲角色。我终于也开窍，原来我需要的是什么？培养孩子是一件伟大的事情，可惜我小的时候，父母都没有能很好的陪我，因为时间一下子到了我可以自己玩的时候了，我喜欢单机的游戏是因为我可以沉迷到里面，什么都可以不用管？什么都可以不用想，可是，现在的这个时候，我才发现原来一直让自己困扰的东西是原来没有的。难道，我失去的东西，让自己的孩子也同样失去吗？我不想这样，所以，我需要改变。或许，原来也同样说过同样的问题，可惜没有开窍，没有能这么深入的思考。只是，我觉得今天晚上，原本我都觉得我太郁闷了，什么事情都要说？为什么什么事情都是我的错？我难道在大年初一的时候玩一下游戏都是错的吗？我为什么那么难？现在，想同了，想明白了。原来我的任务，我的责任在此之前是不清晰的。我的生活方式是不正确的，我为什么会这样，就是因为我还没有适应这样的生活。所以，接下来就是改变。改变自己原来的生活方式，改变对生活的态度。先自己的健康问题要解决，然后就是家的责任，我能够做到。</description>
    </item>
    
    <item>
      <title>6UnderGround</title>
      <link>https://guobingyi.github.io/movie/under-ground/</link>
      <pubDate>Thu, 09 Jan 2020 16:17:25 +0800</pubDate>
      
      <guid>https://guobingyi.github.io/movie/under-ground/</guid>
      <description>鬼影特攻  瑞恩·雷诺兹，说起来你应该不知道，但是说《死侍》，你应该就知道了。
 电影从剧情上来说，一般一般，每个队员都有一个代号，Zero One Two Three Four Five Six Seven。不知道为什么，就介绍了男队员和男主角的身份，女队员都没有介绍，不知道是不是我看的是第6部，毕竟我第一次看。所以，抱着这个态度去百度了一下，发现真的就只有这一部呀，那么难道是埋下伏笔，还有后续？不管怎么说，剧情还是有点拖沓，想多介绍的地方却没有，想快速的说明却又一直拖沓。这部片子就是给我这样的感觉，特效，武打，颜值，或许都不算什么。女的不怎么好看，男的不怎么帅，武打呢，哎，那个谁你过来一下。
但是如果是从消遣的看，还是不错的，可以看到喷气飞机，高级商务机。豪车，豪宅，高科技。影片塑造了一个原本可以在全球获得最高财富的人，却把自己死了，做一个鬼魂，来处理政府不能处理的事情。而影片中的故事从土耳其的内政开始，先反应了战争所带来的痛苦和悲惨。给我印象最深的是，本国人居然轰炸自己人，而且炸就炸了，还使用了毒气，太TMD的恐怖了，炸不死你，还不毒死你，就是说一定要搞死你。而不是军队对军队，而是军队对医护救疗难民。只能说，战争真的恐怖，不是闹着玩的，希望和平一直到老，哈利路亚！
男猪脚感觉就是一个救世主，非常符合欧美国家的电影，主角光环，什么都懂，上能制作高科技武器，下能徒手对付高级保镖。牛逼呀，什么都厉害，完全是无懈可击。Two，没有怎么介绍，就是一个女杀手，枪法精湛，武艺高超。当然，最好看的还是那对眼睛，蓝色呀。Three，全职杀手，我感觉是他母亲非常不喜欢他，感觉他做的事情非常可怕。当然，电影也说出了他为什么金盆洗手，是由于他一次执行任务，杀了没有母亲的孩子的父亲，我去，好绕。一下子感觉人生不应该这样。Five，是一个女生，医疗兵。感觉也没有什么特色呀，就做一下客场。Six，开场飚了一趟车就挂了，但是一般都是人都有自我保护能力，但是为什么他要开的让自己挂，而不是主角呢？Seven，就厉害了，前三角洲队员，原来用狙击枪的，现在什么都用的麻利。后面，Three和Two居然有一腿了。哎，什么都是导演说了算。最最最，让我受不了的是，弟弟为了政权，让哥哥被乱拳打死，太不合乎常理了。当然，剧情嘛，就是好人营救世界，坏人灭亡。非常符合人性的需求。
怎么说呢？如果来者不拒的话，那还是可以看看的，如果觉得浪费时间的话，那还是算了，毕竟这样的片子还是多的。</description>
    </item>
    
    <item>
      <title>Happywork</title>
      <link>https://guobingyi.github.io/blog/happywork/</link>
      <pubDate>Sun, 05 Jan 2020 17:29:30 +0800</pubDate>
      
      <guid>https://guobingyi.github.io/blog/happywork/</guid>
      <description>如何快乐的工作  如果，你做的事是噩梦，那么不如放手。
 好久没有一家人活动了，我终于放下游戏，放下心中的小打算，走出去，听了一场“演唱会”。
“演唱会”是一个留德的钢琴师回昆明，举行的一场表演。用贝多芬250年来做契机的，来表达对贝多芬这位伟人的思念。不知道为什么？我真的从来不怎么喜欢音乐，但是却非常认真的听下来。我觉得感动我的不仅仅是音乐，而是这位演奏者的专注打动我了。我看到了一位对音乐热爱，并且对自己的技艺非常精湛的人感动。我不由想到了自己，自己对程序的热爱，是什么样的热爱？是激情过后的苍白，还是当初为了养家糊口而不得已的选择，我想或许都有吧，但是从骨子里我是真的热爱，并从这位演奏者身上看到了技艺的力量。一种让人全身心的投入，一种为之奋斗的感觉，对，就是一种自我实现，但又让人感动的状态。
寻寻觅觅中，走到了现在，而却对自己真正想要得到的东西而感到迷茫，什么是自己需要的？什么是自己喜欢的？自己想做什么？在老婆不断的建议中，我也在不断的尝试，可是昨天晚上，又让我知道了自己真正需要的是什么，对程序，我写代码的时候可以忘却自己，能从代码中获得不一样的感觉，不论是为了什么，在这个过程中我获得了自我。
我，一直以来，自己家的电器/电脑/手机，出现了什么问题，我都能自己解决，当然也包括了朋友的。在这个过程中我通过学习，通过自己的积累，能很好的处理这些问题。我一直都喜欢这种状态，也非常享受解决问题的过程。从种种方面来说，我喜欢的东西，或许我能从做的事情上来感受到快乐。但是，人不可能脱离这个社会，该学会的东西还是得学会。而我，却想做一个艺人，投入到自己喜欢的东西上面就是一生。突然想到了emasc这个软件，说一生都不够用，来学习她。我想，我就喜欢这样的事情。
原来一直都喜欢用VS Code，因为太方便了，什么东西都可以不用想，直接拿来就可以用，插件非常方便，直观。也是在一瞬间才发现，就是因为这样，我们对细节的了解都依托在了IDE上。缺少了对细节的关注，缺少了折腾的心，原本时间就是那么多，为什么还要去依托IDE。我想从今天起，我还是回归到Emasc上，虽然她是那么古老，需要自己动手的东西那么多，可是我却感到踏实。但是却又另外的一个声音在告诉我，人生苦短，为什么不用最好的东西来节省精力，把时间都花在需要关注的地方。我的思想在“打架”了。到底谁会赢呢？到底什么才是对的？
其实，真的没有对错，或许在不同的时期，没有选择就是最好的，是否有必要一定要得出一个结论呢？</description>
    </item>
    
    <item>
      <title>Ad Astra</title>
      <link>https://guobingyi.github.io/movie/ad-astra/</link>
      <pubDate>Thu, 26 Dec 2019 17:28:35 +0800</pubDate>
      
      <guid>https://guobingyi.github.io/movie/ad-astra/</guid>
      <description>星际探索  布拉德·皮特，我喜欢的男影星之一。
 间隔1年之久，皮特终于出新片了，他的每部片子我都喜欢，毕竟演技实在太好了。
这部片子是分两段时间看完的，毕竟没有那么完整的时间来看，人到中年，你懂的。
我不知道，第一部分的感觉还不错，浩瀚无垠的宇宙，人们对外界充满幻想，而太空中操作的人，可以直接从太空掉入到地球。Roy是一名上校，负责太空中的事宜。和妻子的关系不是那么好，我原以为是太专注工作，看到最后才发现Roy是个好男人，不给别人添麻烦，最主要的是对自己的工作充满未知。
第二部分开始就有点压抑，谜底被逐渐揭开，原来项目最终的计划就是除去他父亲的项目。Roy开始回忆他父亲，原来父亲一直都是把工作放到第一位，为了证明外太空是有生命的，而为此抛弃了家人，抛弃了要回家的同事，一直在外太空研究。我觉得，这部片子没有非常华丽的打斗场面，没有非常多的特技，但是皮特的演技却让我所折服。每个眼神，每次对话都这样迷人，或许这个就是大牌，在枯燥中表现一切。
我喜欢这样的片子，像《僵尸世界大战》一样，皮特就是一个非常普通的人，而却完成了伟大的任务。《星际探索》也是一样，我有时真不能理解为什么会这样？但是，最终，从以人为本的角度来说，这就是最好的结局，而最后的那句话，也让人深思。“我们在忙于追逐未来，却忽略了现在；我们在期待未来，却忘记了现在；我们为什么而活，为了最亲近的人。”太过于将期待寄托未来，不然好好活在当下。
或许，最近的生活也让我非常迷茫，我不知道我该做什么，我该如何做？但是，生活还得继续。每天都在为未来买单，每天都提心吊胆，还不如实实在在的过好现在。</description>
    </item>
    
    <item>
      <title>Mac Batteries</title>
      <link>https://guobingyi.github.io/blog/mac-batteries/</link>
      <pubDate>Tue, 24 Dec 2019 18:33:37 +0800</pubDate>
      
      <guid>https://guobingyi.github.io/blog/mac-batteries/</guid>
      <description>Mac电池寿命  我以为你可以继续，其实你已经努力了！
 从用笔记本开始，一直都没有用到过需要修理电池，最近的一次是x230的笔记本显示电池需要维修，我没有理她，我觉得不行就当一个台式机用着了，大不了直接用适配器工作好了，可是没有多久我的苹果笔记本也报这样的提示的了。我郁闷了。毕竟mac是主力机，很多工作都需要在上面做，而且我觉得我使用电脑的频率明显减少了，但是为什么还会出现了这个问题？我理解了一下苹果提供的电池方案：
电池-充分延长电池使用时间和寿命
这样的解决方案并没有解决我的问题，而我理解的是最近成天24小时的插着电池，没有进行了深充深放的操作，我一直错误的任务锂电池或者苹果的电池是没有这样的忌讳的，可是从实际的情况来说，还是需要进行必要的深充深放，并且不要长时间的插电。
不论怎么说？如果这就是我使用的电池状态，那么意味着每隔3～4年的时间，我得给自己的笔记本换电池，这样成本就增多了。不希望这样&amp;hellip;&amp;hellip;
今天，开始重新对mac笔记本的电池有了新的认识，也希望重新按照健康的标准来使用，我希望这个就只是一个假象，或者说，我的电池开始维修报警后，我还能用多久！
也有其他说法是天气问题，但是比起天气问题来说，我更相信的说法是苹果的系统升级后，变着法来升级硬件呀！
以下是网友提供的保养电池的方法，我觉得还是毕竟靠谱的，如果从淘宝上买了新电池后，就这样保养了。
第一种方法：保持离子的活性，提升电池健康度。 1、首先我们使用电源适配器把电池充满电； 2、拔掉电源适配器，重置smc； Shift - Control - Option - Power； 3、然后使用电池运行macbook，直到电量用到10%后再插入电源适配器； 4、提示：连续多天充放电，用到10%或者自动关机再冲，连续几次后就不提示修理电池了，过了几个月又提示，用的第二种方法解决！第二种方法：最新系统解决电池校准。 最新雪豹系统目前已经免费升级了，官方在系统中对电源管理计划进行了优化，macbook air就是升级最新系统后解决了第二次提示修理电池的问题。 友情提示：macbook电池采用的是锂电池，如果长时间使用电源适配器的话会导致电池离子的活性度降低，从而电池健康度会越来越差。建议每个月进行一次完全冲放电。 第三种方法：更换电池。 一般来说macbook锂电池充电循环次数只能用400-600次，电池基本上就不耐用，要出现问题了。  ps. 2020-1-29 补充
 不知道为什么？真的，如果说没有能耐得住的话，我想我已经换了电池，我忍住了，我想看看我的电池什么时候真的就报废了，或者说充不了电了。今天在电脑升级到10.15.3的时候，电池需要维护的报警没有了，看了一下电池状态居然是正常的，我不知道我还能说什么？或许这个套路让多少像我这样有强迫症的人换电池呢？ 居然好了，不知道该开心还是郁闷？</description>
    </item>
    
    <item>
      <title>我与游戏</title>
      <link>https://guobingyi.github.io/blog/%E6%88%91%E4%B8%8E%E6%B8%B8%E6%88%8F/</link>
      <pubDate>Sat, 21 Dec 2019 10:46:55 +0800</pubDate>
      
      <guid>https://guobingyi.github.io/blog/%E6%88%91%E4%B8%8E%E6%B8%B8%E6%88%8F/</guid>
      <description>我与游戏  玩物丧志，是很多人说的一句话！
 是的，我喜欢玩游戏。但是不是厉害的那种，属于自己沉浸在游戏中的感觉，而更多的是在游戏上体会原来缺失的感觉。
最近入手了任天堂的Switch游戏机，从体验上来说和电脑上玩差不多，或许也是从换了mac笔记本后，没有在笔记本上玩游戏了，这个体验只能是一般。毕竟，原来早就想拥有一台掌机，现在愿望实现了。</description>
    </item>
    
    <item>
      <title>运维</title>
      <link>https://guobingyi.github.io/blog/%E8%BF%90%E7%BB%B4/</link>
      <pubDate>Wed, 13 Nov 2019 11:22:00 +0800</pubDate>
      
      <guid>https://guobingyi.github.io/blog/%E8%BF%90%E7%BB%B4/</guid>
      <description>关于运维的一点意见  2013年写的，后面翻出来感觉那个时候的自己真棒！
  对于即将离开项目组,对我这段时间的运维工作做一个总结. 首先来到项目组，需要把项目中的一些基础情况了解一下。    谁负责那一块的开发，联系电话。能问人的时候，一定要问，这样比你自己看代码来的要快一些，为了快速反馈客户这种办法是最好的，当然你也可以下来自己在摸索一下，以后遇到这样的问题就OK了。
  了解客户的基础信息，如这个人在这个部门中是什么样角色，负责系统的哪一部份功能，电话号码。这样有什么问题，可以及时和客户联系。
  态度。绝对不能和客户说这不关你的事，不关你的事，那么关谁的事。记住，任何问题到你手上，首先不需要很急，慢慢将问题记录下来，找人或者自己将问题解决，这是最基本的。如果能和客户建立起良好的关系，那么客户也会理解你的工作，有些情况下还会为你的领导讲好话。这些都是和客户交换得来的。如果你得罪了客户，那么客户也不会给你面子，什么你解决不了，那么客户就会叫经理换人。在说说这一点，如果你有问题，去打电话询问，一接到电话对方的态度就打动了你，即使他没有能立刻帮你解决问题，我相信你也是可以理解的，如果一接到电话就说这不关你的事，即使问题解决，也会对你留下很不好的影响。
  业务，还是业务。到了项目组，不要被新奇的架构或者组件所吸引，慢慢静下心来将业务搞懂。这样当客户在那个业务环节出现问题的时候，才不会什么都不知道。所以，熟悉业务很重要，需求说明书，系统帮助手册，和客户沟通，自己从头到尾的使用一遍系统，这些都是很好熟悉业务的方法。
  在和上一个运维的同事移交的时候尽量多的问一下，目前系统那些地方容易出现问题，是怎么解决的，多问，是没有坏处的。
   其次，是运维的过程中需要注意的地方。    遇到一个解决的问题，首先要把它记录下来。记录的内容大概有：问题是什么？是怎么解决的？解决这个问题使用了多少时间。人们常说，不要被相同的石头砸到脚。但是，我们很多时间在运维的时候就会出现这样的问题。为什么呢？还是那句老话，好记心不如烂笔头。还有一点好处就是，当移交工作的时候就可以将这些东西一并给下一位同事，送人玫瑰手留余香。
  有事没事多去系统上看看。为什么呢？原因是当系统出现了问题，你才知道吗？做好每天的履行检查，及时发现问题解决问题。那么客户对你的运维工作将会很满意。
  又来了业务。业务在系统中是会变的，这个地球人都知道。客户在使用系统的过程中，会存在一些业务的变更，这个时候，如果你连原来的业务都不熟悉将会很痛苦，如果你比客户还熟悉业务变更的趋势，那么兄弟你有业务专家的天赋啊。所以既然来到了这个项目的运维，为什么我们不好好学习一下业务呢？为了以后在这个领域成为业务专家而努力吧！
  最后，就做一个总结吧。我从工作到现在一直想做一个优秀的程序员而努力，但是工作却常常和自己开玩笑。每次都是从运维开始的，慢慢才有了写代码的工作。我想说这个的目的是，并不是所有的东西都如你所愿，但是只要你在工作上都认真努力，那么不管是运维还是开发，你都能锻炼自己的一身本领。</description>
    </item>
    
    <item>
      <title>我的摄影之路</title>
      <link>https://guobingyi.github.io/blog/%E6%88%91%E7%9A%84%E6%91%84%E5%BD%B1%E4%B9%8B%E8%B7%AF/</link>
      <pubDate>Mon, 21 Oct 2019 16:41:44 +0800</pubDate>
      
      <guid>https://guobingyi.github.io/blog/%E6%88%91%E7%9A%84%E6%91%84%E5%BD%B1%E4%B9%8B%E8%B7%AF/</guid>
      <description>我的摄影之路  路漫漫其修远兮，吾将上下而求索。
 没有想到我会走到这条道路上来，还是因为没有了写代码的热情。那天，和老婆说起来，说我原来喜欢的是摄影，因为摄影给我感觉是一种热爱生活的表现。我的编程是因为要养家糊口，才欺骗自己说是喜欢的。
摄影，对于我来说，也是一个不断摸索的过程，说白了就是一个学习的过程。原来我一直鄙视会photoshop，会美工的，会修改色彩的，我觉得那个就是会用一下软件的人，没有像编程一样改变世界的能力，他们就停留在使用的层面上，鄙视。现在，我才发现，任何一门技术都有其存在的价值，那就是让生活变的更加美好。
回想起那时的我，就是一心以编程为主，眼里看不到其他的东西。为什么会这样？现在的我时常问自己，我想最主要的原因是由于编程的能力可以让自己获取一份稳定的收入。而其他的，我却没有去关注，因为编程的能力提升，耗费了我的大量时间和精力，我没有时间和精力去关注其他事情了。
吐槽了一下自己的历程，现在要重新学习一下摄影，使用到的软件是adobe公司的两个软件。
Adobe Photoshop CC 2019 的确很好用，改变了许多我对图像处理的观点，也培养自己对色彩的敏感。 Adobe Lightroom Classic 借用金叔说的话就是：“单反无后期，不如用手机！” 为什么这样说，现在我也能体会到一些了，比如我发现我单反照出来的，没有华为手机拍摄出来的照片好看，设置背甩几条街。当是，当我用软件进行后期处理一下，我才发现，我又可以甩华为手机拍摄出来的几条街了。毕竟，构好图，拍摄清晰，后期就好处理了。 这里说一些苹果11的手机，真的，从你开始拍摄的时候起，你的单反还真干不过她，因为她的三个镜头很厉害。 两个软件都是用来学习的，没有用做商业用途，即还没有产生收入。说这个话的原因是，我用的盗版的软件，而且我原来还非常鄙视使用盗版软件的，打脸了。后来，我想了一下，为什么我会有这样的转变，是由于，我编程的时候可以使用免费的IDE，可以使用开源的项目，可以使用开源的编程语言，所以在付费层面上避免了一些开支，而且能很好的完成任务。所以，我说我用正版的软件。而现在，当我使用这些付费软件的时候，还没有找到免费的替代品，并且还没有能创造出收入，所以，你懂的。(原来我还是y意向要介绍一下怎么下载，怎么安装，怎么保护自己的数据，最后我觉得，使用盗版本身就是不好的，为什么还要宣传呢？)
不知道是什么时候，对于盗版的软件，我都非常害怕，害怕有有后面，害怕这些好的软件由于盗版的原因而消失，所以我就不提供相应的下载地址了，毕竟，做为一个想要找到下载软件的人，百度，google，搜索一下，就会得到你想要的东西。我这里说的是，我都把现在的软件禁用了网络，避免一些不必要的麻烦。
现在，开始学习如何使用他们，把一些想法付诸一些实践。当然，从以往学习的经验来说，我都是喜欢看官网的文档，虽然，很多时候没有中文的。
这里说一点题外话，也督促自己的好好学习，不要在去想器材了。刚刚学习的时候，我觉得应该买一个中端的单反学习一下就可以了，结果不知道为什么买了个Canon EOS 80D,一个APS画幅的，没有是全画幅的感觉到郁闷了好久，一直想换称无敌狮(5d4)，还有想佳能的大三元，红圈镜头。通过学习甚至还想买尼康的D850，说白了就是两个事情困扰我。
 好器材，拍摄出好图片  为了让自己的技能快速提升，想到的是换器材，买最好的器材，或者买专业摄影师的器材。后来，在一次一次的尝试中发现，其实自己的器材已经非常不错了，并且完全满足了自己的要求，那么剩下的就是自己的技术问题了。
 好镜头，拍摄出好图片  镜头为了感受一下，买了佳能最超值的小痰盂三代，699这个价格非常给力，让我体会了一下大光圈的效果，当然我觉得好用的还是套机上的那个EFS 18-200mm f3.5-5.6 IS镜头，毕竟这个镜头单买都是2000多。从玩电脑，到玩摄影，给我的感觉都是一份钱一份货，最重要的选择要对，比如电脑选苹果，单反选佳能或尼康。如果电脑选择了其他品牌，那么贵就不值得了，单反或许就这几家吧，我不知道我的选择是否是正确的。
最后，我不在纠结这些了，因为所有的这些都是建立在技术上面的，如果没有技术，那么再好的器材，再好的镜头，也不过是一个装B的物品而已，并不能让你产生出优质的照片，ok,bb到此结束。期待下一个感悟后的我！
 最好的镜头是眼睛，最好的相机是大脑。——某人说。
 </description>
    </item>
    
    <item>
      <title>我的女孩</title>
      <link>https://guobingyi.github.io/blog/%E6%88%91%E7%9A%84%E5%A5%B3%E5%AD%A9/</link>
      <pubDate>Sat, 12 Oct 2019 21:10:21 +0800</pubDate>
      
      <guid>https://guobingyi.github.io/blog/%E6%88%91%E7%9A%84%E5%A5%B3%E5%AD%A9/</guid>
      <description>我的女孩  如果工作忙，那么就来带娃吧。
 没有想到我会一个人带娃一段时间。
更加没有想到的是，她为了怕被我揍，既然把作业本斯了，还撒谎说和同桌闹撕毁了，在教室的垃圾篓里。我真没有想到的是做为一个爸爸，我是这样的。我应该反省的是我自己，我自己没有做好。
工作的时候，大多数时间都是老婆在带孩子。我整整的和她相处的时间并不长，她的一些小毛病我都不知道。所以在这段时间里，我和她相处下来，知道了她的一些情况。
我知道每个孩子都是有玩的天性，我们不应该去磨灭她，我也知道我在成长的过程中，也发生过和她一样的事情，所以我理解她。她今天哭的非常伤心，说不应该说谎的。看着她流泪，我真的很伤心，她甚至还害怕我打她。我才发现，我在孩子心里是一个什么样的爸爸，是一个做错了就要被揍的爸爸。
我梳理一下。
老婆要去青岛参加会议，外公外婆参加旅行社去旅游，爸爸妈妈在家照顾三爹，我照顾女儿。所以，按照女儿的话就是我们的二人时光。
虽然在此之前，老婆曾主动的让我去帮女儿看作业，照顾女儿的一切，让出行前的我不要那么困难，但是我的内心总觉得没有什么大不了的，我程序都能写，就不能带娃了？牛逼就这样吹出来了，结果我也为此付出了相应的代价。
 作业检查  二年级的小学生的作业相对上学期少了许多，但是对于我来说，却发现有很大的问题。在孩子她妈没有告诉我之前，我甚至以为就是一般的签名就可以了，结果是，你要帮孩子检查作业，看孩子的书写是否认真，明天带的书和课本是否带齐，红领巾，桌布，水杯，早点，加餐，美术工具，等等，是否已经准备好了。
语文的预习大人要查百度，进行组词，看是否是多音字，是否是成语，当然就是解释，要解释给孩子词语的意思。听写，要读准音，检查听写的字是否写对，写整齐，拼音是否正确。背诵，检查孩子是否能背诵老师要求的内容。当然，最最最重要的是，孩子在做作业的工程中是否认真，是否配合你完成老师安排的作业。
数学的检查相对要轻松一些，但是你得认真检查，不然就会出现错误的地方，而孩子也会因为这样</description>
    </item>
    
    <item>
      <title>Mac Catalina</title>
      <link>https://guobingyi.github.io/blog/mac-catalina/</link>
      <pubDate>Fri, 11 Oct 2019 16:40:13 +0800</pubDate>
      
      <guid>https://guobingyi.github.io/blog/mac-catalina/</guid>
      <description>苹果操作系统 Catalina  折腾，喜欢折腾。
 苹果推送了新的操作系统Catalina，乍一看，我想到的Tomcat的日志文件Catalina.log。当然，其实不是，就是苹果的macOS Catalina。我喜欢苹果电脑，自从使用上了就没有想要换其他笔记本的想法。为什么呢？因为原来没有选择，就只能使用Windows操作系统，而且自己的工作必须也得在Windows下面才能完成。后来，变更了工作，可以使用苹果笔记本了，才发现其实还是有选择的。
苹果笔记本使用下来的最大感受就是速度和反应速度比较快，而且没有让人烦恼的自动默默更新。当然，不得不说的是视网膜屏幕，真的写一天代码都不会累。但是，由于使用频率过高，也导致了苹果电脑出现了一些问题。我一直都非常信赖她，但是也是她教会了我要学会经常备份，没有什么是十全十美的，都会有问题。
新版本推送后，我非常兴奋的进行了升级，可是给我的答案却是失败。
macOS 未能安装在您的电脑上 储存系统验证或修复失败。(-69716) 退出安装器以重新确定电脑，然后再次尝试。 按照原来的情况，我会在网上看一下有没有和我遇到同样情况的兄台，然后看看人家的解决方案，这次得出的结论是没有。由于刚刚长假过后，所以不想太累，想等等在弄吧。最搞笑的是，还有个null的标示。
思前想后，我真不想弄了，想苹果过段时间应该会有相应的解决办法，可惜，我就是等不了呀。我这个有强迫症的人，怎么能有新的东西不能用呢？我想到的是空间问题，所以删除了一些不常用的软件。可是到官网一看，我去，空间只需要18.5GB。而我释放了40GB的空间，可惜还是同样的错误。
然后，我仔细看了一下错误，“验证失败”，储存系统需要验证的地方是我启动了文件保险箱吗？我决定停用磁盘的文件保险箱。结果，系统无法启动了&amp;hellip;&amp;hellip;我心里无数匹马呀！还好，昨天备份了系统，所以就恢复吧，一看评估时间4小时，心里又出现了马。在无奈的等待中，系统恢复了。决定抱着试试的态度，进行了升级，结果成功了。原本想等着新版本来解决问题的，也有想过人工客服问一下情况，可惜这些都不需要了，成功了。
说明了什么，我也不想得瑟，只能说明苹果的重心还是在iphone上，为什么？因为我苹果手机升级就没有遇到这些糟心的事情，笔记本上却真实的遇到了。
看了一下catalina的功能，才发现，原来把磁盘分成2个区了，一个系统，一个数据。我原来文件保险箱是需要解锁的，所以后台更新没有弹出密码框，就报错了。
 升级需谨慎，折腾需备份，不然，不就是多了个新空白系统嘛!
 对于软件，真的没有什么银弹，自己是知道的，可惜还是那么的相信你。</description>
    </item>
    
    <item>
      <title>改变我的思路</title>
      <link>https://guobingyi.github.io/blog/%E6%94%B9%E5%8F%98%E6%88%91%E7%9A%84%E6%80%9D%E8%B7%AF/</link>
      <pubDate>Fri, 13 Sep 2019 22:46:44 +0800</pubDate>
      
      <guid>https://guobingyi.github.io/blog/%E6%94%B9%E5%8F%98%E6%88%91%E7%9A%84%E6%80%9D%E8%B7%AF/</guid>
      <description>改变我的思路  莫愁前路无知己，天下谁人不识君。
 最近又回到了刚刚开始的时候，原因是和老婆不在内耗了。我们终于和平相处了。对于内战的这段时间，我们都没有好好想想自己该做点什么，或者说将来要做点什么。
老婆推荐我学习摄影，和小朋友的摄影，儿童摄影。
其实，真正的问题在于我们之间其实也疏远了许多。
Source Code Pro, Monaco, &amp;lsquo;Courier New&amp;rsquo;, monospace Cascadia Code, Monaco, &amp;lsquo;Courier New&amp;rsquo;, monospace</description>
    </item>
    
    <item>
      <title>Hospital</title>
      <link>https://guobingyi.github.io/blog/hospital/</link>
      <pubDate>Fri, 06 Sep 2019 17:33:00 +0800</pubDate>
      
      <guid>https://guobingyi.github.io/blog/hospital/</guid>
      <description>医院  如果觉得自己的健康还不错，那可以去医院看一看。
 好久没有去医院了，不知道为什么？去医院总给人一种压抑的感觉，当然更多的是一种无奈。我2017年被确诊为糖尿病2型，即我是一个糖尿病人。在所有的人中，我被贴了这样的一个标签。我非常想撕掉她，可惜她一直都跟着我。
天气阴着去医院是一种郁闷的事情，可惜我去了。而且，在去之前我忐忑不安，我不知道我是否会有其他并发症或者其他一些不好的东西。一切都是一个未知数。8点42分的挂号信息，我原本以为我不能量空腹血糖了，等拿了号再去吃早餐。但是去到医院的时候，我感觉我应该可以看到的，因为医生已经开始上班了（后来，我听老婆说8点医生就开始上班了）。拿着就医卡，到自助机上进行签到，发现没有这个用户，心里有点急，但是还好把所有卡都带上了。昨天，晚上我还说只带一张的时候，老婆让我全部带着，我没有抗拒，全部带着了，说明老婆的经验比我丰富，更主要的原因是，医院真的好久没有来了，不知道自己的就医卡是那一张了。签到后，去医生门诊的时候，刚好没有人，我就先看了，然后就是一大堆的化验。抽血，尿液，二次抽血，并发症检查。我或许都已经知道了做为糖尿病患者应该要做的检查了，但是，没有办法，顺着做吧。
抽血的人很多,有些甚至是昨天开好的单子今天来抽，但是，更多的是今天的。看着自己的血被抽出来，我知道我今天得补充点营养了。尿液是在厕所里弄的，感觉医院的卫生间总有一种说不出来的难闻味。我知道要去住院部检查并发症，所以，先到阿拉丁回族馆吃了早点，我时常会想到老婆说的，为什么都不重要，自己的健康非常重要，所以吃早点成了重要的事情。到住院部的时候，我非常庆幸自己的选择，因为医生在开早会，什么都还没有准备好。还是熟悉的走道，熟悉的医生，熟悉的病床。今天早上，医生还问我是否要住院检查，我回绝了，我知道，都一样的效果，不折腾。所以带着想是不是住院部的病床又空出来了，我特意留意了一下，果真如此，病床有空余的了，毕竟，一个星期7千多的治疗费还是比较昂贵的。对于并发症的检查我还是比较有自信的，毕竟自己还年轻，如果这个时候就出现问题了，那么，就非常麻烦了。虽然抱着忐忑的心做了检查，结果还是让人满意的。所以，这个钱你也不能说白花了，毕竟两年了，是该做一下检查了。
餐后两小时的采血就是等待，我知道今天早上又看不到医生了，应该下午吧！在我前面抽血的人，医生告诉他一个小时可以打印结果的时候，我以为我也是这样的。当我也问医生的时候，医生说：“下午4点”。我知道，不可以了。所以，我先到医生那里问了一下，她也建议我下午来，这样结果看的清晰些。
回到家，一大家子人吃饭。我还是不习惯这样的场景，但是，人生就是这样，你无法选择的时候，就闭上眼睛接受吧。我不知道为什么，老婆也没有说我去医院的事情，或许，我感觉老婆也不想让其他人知道。对于好好，我们都害怕有人在她面前说我生病的事情，对于她，不想给她太大的压力。
吃完饭后，我还是一样的走路，睡觉。我觉得我自己已经非常自我了，我没有被外界打扰。由于早上还是有点累的，所以我睡的比较熟。在闹钟想起的时候，我醒了，但是想到早上医生说要到4点才能拿结果的时候，我又眯着了。迷迷糊糊中，我感觉到我要醒了，毕竟要到医院的。可惜感觉怎么也睁不开眼睛，我知道我必须通过洗脸才能清醒过来。我从床边摸着到卫生间，还没有接水洗脸，就感受到脚上水的冰凉。我知道我已经到卫生间了，但是怎么感觉还是醒不过来呢？我非常着急，突然，我醒来了。但是，梦境中的感觉却是那么真实。我感觉到我很长时间没有这样了，或许每次这样的梦境都是我已经非常累才会出现的情况。
我还是提前来到了医院，我带着碰运气的心态，查了结果，让我出乎意料的是结果出来了，而不是4点，而是3点。我有点不理解那位医生为什么要说的差距那么大？或许真的是医院的人太多了，应该分流吧。带着忐忑的心，来到诊所。门关着，有很多人在外面等着，我知道得排一下对了。所以，我也没有去门口站着。我就这样等了30分钟，门开了一大群人冲进去，我想我早上来的，应该就看个结果很快的，我也跟着进去。有个小伙，说他中午的号，一个小时过去了都没有动静，非常激动，我一看很多人看报告，我就和医生沟通了一下，说这种情况我们看报告的怎么排队呢？医生说：“在门外排队，先来先看？”我非常无语，但是又没有什么好说的，毕竟还有许多实习生，所以我也退出去等着。在门外排队，门第二次开的时候，既然又开始叫号了，可惜没有人，我们其中一个看结果的说，我就看一个结果就好了，然后就进去了。我算下一个，可惜后面来了个人，她说她早上看的要看结果，要排到我前面去，我没有让。我进去的时候，发现有个做在门口的人，实在太痛苦了，还是什么情况，也忍不主去门口站着了。我非常不喜欢这种，我可以认真的等待，排队，可我不能忍受这种没有秩序的操作。
医生和我说，从检查结果上来看还可以，但是血糖控制的不好。需要我吃上药，二甲双胍，三个月后来复查。一个定论，花了我一天的时间。我知道有人甚至比我花的时间多，因为生病了。由于中午吃的不是很多，来医院的时候我买了燕麦面包。所以，我先到2楼抓药的地方吃了一片。以为，这样会出现我的名字，然后去拿药。吃完后发现，怎么还没有，看一下就诊的纸条说要去签到，然后去抓药的地方问一下，她说在对面，我一看对面是一个简易门诊，两个医生做在那里。一个男的一个女的，女的年纪大约50多岁，男的年纪大约45左右。我走过去问男的，男的甚至都没有说话，指了对面的机子。我走到机子前一看，是拿药的确认流程。我按照操作把就医卡放到机子上，可惜没有什么动静。我回头想进一步询问的说话，男医院看到我向他走来直接扭头不看我。我只有硬这头皮问了女医生，女医生说是的，把就医卡放上去就可以了。我无奈的走过去又放了一次，发现还是一样的情况，突然看到界面上显示，打印纸用完了。我走到后面的另外一台机子一刷就好了。我太无语了，怪自己不看提示。但是也又点对男医生有意见，做医生不应该帮助别人吗？最后，我有自己说服自己，或许医生一天都对着这样的人太多了，无语了，麻木了。这是谁的错呢？
晚上，老婆让我继续挂了营养科的号，让第二天再去一趟医院。虽然我的心里有一万个不想去，但是我告诉自己这个是对自己负责。第二天，我去了，1号楼的11层要上去还费了些精力。但是，还是找到了。医生是个小年轻女医生，在我看病前还接受了电视台的采访，说中秋节少吃点月饼，因为是高热量的，对身体不好。我等着她采访完，她对我的病情进行了了解，说了我吃东西该注意的事项，我才发现和老婆说的都一样，但是为什么我听不进老婆说的呢？我在反省这个问题？
医院里的病人很多，但是每个人的脸上都挂着不安，我甚至看到有对老夫妇在哭泣。我们开始注意自己的健康，开始去热爱生活，可是，如果身体夸了，一切都变的不重要了。
珍惜生命，热爱生活！
没有什么是比健康更重要的，如果有，那就是命。</description>
    </item>
    
    <item>
      <title>有效的工作</title>
      <link>https://guobingyi.github.io/blog/%E6%9C%89%E6%95%88%E7%9A%84%E5%B7%A5%E4%BD%9C/</link>
      <pubDate>Mon, 02 Sep 2019 16:30:19 +0800</pubDate>
      
      <guid>https://guobingyi.github.io/blog/%E6%9C%89%E6%95%88%E7%9A%84%E5%B7%A5%E4%BD%9C/</guid>
      <description>有效的工作  我们一直都觉得自己努力了，结果呢？
 最近，有段时间是自己可以支配的。回想起原来上班的时候，如果想做点自己的事情，必须把工作的内容完成。而那个时候还因为工作比较忙，刚刚开始想要做的事情或者已经做了一半的工作都得丢下来忙工作。这样就导致原来思考了一半的事情，或者做了一半的事情都得丢掉。如果想起来做的时候，又得从头开始。效率非常底，同样的事情总是要从头开始？现在，有时间了，为什么不把要做的事情做了呢？还是，又有其他的事情要做吗？回想起这些，我发现，其实并不是外界打扰自己，而是自己的方法不对。我发现，这个是人的目标没有明确导致的。
为什么这样说？比如说我们有三件事情要做，其中有一件事情是无目标的。那么，你会发现这件事情会拖很久，而且没有结果。
由于最近看到的招聘信息对年龄的限制，导致向我这样37岁的人，无法找到一份自己满意的工作。所以，与其这样无聊的耗下去，不如去追一下自己的梦，做一个自由的开发者。想做自由开发者，要如何做？一直都是我思考的问题，是在外包网上承包吗？我觉得这样的几率很小，而且需要去和客户沟通需求，一想到这样的事情，和我找一份工作有什么区别呢？
 自己控制需求
  自己控制整个软件的生命周期
  无需到处叫卖
 需要满足这样，或许只有苹果平台上的部分App可以做到这样。我想，就目前来说这个选择也是最好的。为了保证这个目标持续下去，所以也回到文中所说的，效率。不要让一件事去打扰另外一件事情，就必须确定一个目标。
暂时给自己设定以下目标：
  学习macOS和iOS平台下开发，熟悉开发流程。
  先用一个实际项目，血糖检测App来熟悉苹果平台上面的开发。
  发布自己的第一个App。
  大的目标是好确定的，现在需要将大目标进行细分。
1.1 阅读苹果帮助文档；
1.2 阅读相关苹果开发书籍；
1.3 将学习成果记录下来；
1.4 督促自己深入学习。
预计完成时间：2019-12-30
2.1 编写血糖检测App需求设计文档和概要设计文档；
2.2 通过学习编写macOS平台下App；
2.3 通过学习编写iOS平台下App；
2.4 通过学习将使用服务端（go实现）与macOS平台App与iOS平台App进行数据交互；
2.5 总结开发苹果App过程，记录相关代码实现；
2.6 在自己的平台下进行第一个版本发布。
预计完成时间：2019-11-01
3.1 学习如何进行注册苹果开发者；
3.2 准备注册苹果开发者；
3.3 发布自己的第一个App应用。
预计完成时间：2020-01-07
 Talk is cheap,show me the code!
 计划中，可以有所细小改动，但是主要目标不变。为自己的改变而加油！</description>
    </item>
    
    <item>
      <title>宝贝周末一天</title>
      <link>https://guobingyi.github.io/blog/%E5%AE%9D%E8%B4%9D%E5%91%A8%E6%9C%AB%E4%B8%80%E5%A4%A9/</link>
      <pubDate>Sun, 01 Sep 2019 10:07:48 +0800</pubDate>
      
      <guid>https://guobingyi.github.io/blog/%E5%AE%9D%E8%B4%9D%E5%91%A8%E6%9C%AB%E4%B8%80%E5%A4%A9/</guid>
      <description>宝贝周末一天  总喜欢插播广告，这回被收拾了。
 我家的宝贝，最近做事情总不认真。今天早上原本要去滑轮的，却由于做作业不认真被叫停了。我和她老妈原来是准备给她学习一年时间的，毕竟这样可以锻炼她的身体，让她有个强壮的体魄。可是小朋友，作业不认真，被老妈收拾了。其实，我非常郁闷的是对于这一次的事情，我都被小朋友欺骗过好几次了。对于她的作业我一般都不会去检查的，我都非常相信她。从这一次后，我也发现，其实每个人都小过，都做过小时候的事情，为了玩，真是拼了。比如说今天早上的计算题，正常情况下是错一到两题的，而一看错了十多题，当然来气了。加上昨天去学习钢琴，被老师说这个小朋友非常聪明，如果能蒙混过关就不会好好的去弹，总在挑战老师的底线。
宝贝上小学的时候，我由于身体原因辞职回家。原本很多事情，我都可以帮助老妈来分担的。但是，从这段时间以来我发现我离孩子好远，我都跟不上她的节奏了。我会经常被鄙视，因为我从来都没有去关注她的作业，她的学习情况，她现在的认识能力。导致我和她经常聊不起来，对于作业上的问题我都经常无法为她解决。弹琴就更不用说了，我一窍不通。什么高音符，底音符，我都不知道，所以离她有点远了。
对于今天不能去滑轮我想是累计已久的原因了，不认真。不管你怎么和她说要认真，总是在随意的应付。心里想的最多的还是玩，根本没有将你说的话听进去。早上起床后，就叫嚷着去滑轮，老婆让她先做两页作业，可是她就是不想做，最后在老婆的坚持下，去做作业了。但是，感觉她根本没有静下来做。在她说做完了，要去滑轮的时候，还和我说要带着钱去，我就知道她的心思都在滑轮上了。非常真实的是，我听了她说作业做完了，没有去检查，而是帮她拿滑轮装备去了。老婆认真的一检查，发现错误非常多，以至于直接取消了去滑轮。宝贝，大叫着说要去滑轮，做在地上哭，老婆怎么也叫不停的时候，用尺子打了她，但是她还是不屈不挠，一定要去。老婆要去上课，她一直追到门口，口里哭喊着：“妈妈，我错了！”，可惜老婆没有给她机会让她在家反省。并且叮嘱我让我好好利用这次机会，她太想的这个想法，让她把不认真的习惯改了。我和她说：“今天早上被收拾了是什么原因？是不是自己不认真，人是在桌子面前的，可是心已经飞到滑轮场上了。”她说是的，并且对于不能去滑轮感到非常难过。慢慢的安静下来，我告诉她：“是不是还想这去滑轮呢？我想是不可以了，你只能改变你不认真的习惯，或许以后还有机会。”她说：“但是，我太想去了！”。我知道是的，或许从另外的一个角度来说，孩子上了一周的课，都没有能好好的出去玩一会。这个我理解她，但是对于不认真做事是不可以的。我让她去改错，刚刚开始是认真的，但是过一会就又开始了。或许这个习惯已经很久了，而我们却没有能及时的改正。</description>
    </item>
    
    <item>
      <title>我和王者荣耀</title>
      <link>https://guobingyi.github.io/blog/%E6%88%91%E5%92%8C%E7%8E%8B%E8%80%85%E8%8D%A3%E8%80%80/</link>
      <pubDate>Sat, 31 Aug 2019 22:23:21 +0800</pubDate>
      
      <guid>https://guobingyi.github.io/blog/%E6%88%91%E5%92%8C%E7%8E%8B%E8%80%85%E8%8D%A3%E8%80%80/</guid>
      <description>我和王者荣耀  吻住，我们能赢！
 曾经一度痴迷王者荣耀的我，现在一下子降温了。我给自己的目标是打上王者，现在这个目标实现了。我曾经一度以为我会非常兴奋，我会各种吹嘘，我会等等。但是，结果是无尽的空虚。为什么会这样？我原来一直保持的习惯或许因此而改变，我新的追求又是什么呢？
2017年，我学会了玩王者荣耀，一直到前几天打上王者后，我对王者荣耀的热情开始退减。虽然仅仅只是王者1星，我知道还有110星，难道我会重新设定目标吗？我想我是不会了，我知道这个就是我的最大能力吧！因为从玩这个游戏开始，我已经花了太多的时间在上面，我该把时间分到其他地方了。说说体会吧，我一直都听了官方的说法，5V5公平游戏，我想公平是对于玩家最大的安慰吧，但是，你只要玩到一个时间点，你会发现，这个都是假的，皮肤的隐藏特性和V8效果，让你感受到失望。当然，我也成为了V5玩家，为什么呢？不然就是靠场次堆。不可否认，游戏中说的意识，操作等等一些吹的东西，都不如匹配到神级队友给力。玩多了，你发现，什么能力都是假的，运气非常重要。你玩的在烂，队友都要带飞你；你如何厉害，队友都要把你带沟里。这个就是游戏的理解，说什么意识操作的，你看看有几个主播不是V8的。其实，有很多人早就看破了这个局，但是局里的人怎么都弄不明白为什么？所以，聪明的人早早离开，智慧的人都不会去玩，愚蠢的人却在局里不能自拔。突然，想起看到的一篇文章，说王者荣耀是国人的自娱游戏。把多余的时间用来自娱，而不是思考。细思恐极呀，我们这个层次的人就只能把时间花费在这上面，所以我们被人领导，被人奴役是正常的。思考的时间都去那里了？你想到了什么？为什么我还是这个状态？为什么我不能周游世界？为什么我看不起病？我的天呀，我思考的是如何练好一个英雄，如何多上几个星，结果被圈在里面。我会找借口，大家都娱乐，为什么我不能玩王者荣耀呢？我还和老婆吵过好多次，发现还是自己太年轻了。游戏中的确会给人放松的感觉，但是也何尝被对方锤得不能自理，挂机到麻木不仁，连败到怀疑人生，经常在4g的情况下来个460。这些都是游戏的感觉，特别是我觉得可以堆场次的时候，那种对决中，每次都看的清清楚楚。玩下来，发现这个游戏不需要什么技术，会平A就好了。输了不要难过，赢了不要高兴。心态就这样练起来了，对游戏也就无所谓了。原来玩游戏都会告诉自己遇到情况该怎么处理，该如何打好这一局，该如何上星？现在，想起来好搞笑呀，为什么？聪明的人思考如何让人生更上一个台阶，如何让自己的生活质量更高？我怎么很别人比？所以，有句话说：“可怜之人必有可恨之处！”。在希望别人怜悯的时候，自己是否努力去改变这一切了吗？
 是时候说再见了!
  It is time say goodbye!
 哦，对了，我的皮肤怎么办？我的那些用钱买的皮肤呀？我这个是穷人思维吗？如果，用时间和金钱对比的话，我是否为了打翻了牛奶在继续哭泣呢？哦，明白了。原来，没有经历过痛苦，说什么甜蜜，我就真不知道了？我甚至在原来和自己说：“出家的皇帝才能开破红尘！”，现在我才知道，Great Master为什么是 Creat Master。就是大师不需要经历就能悟出的道理，你个凡人怎么能够理解！
真香，我是蜕变吗？还是凤凰涅槃，欲火重生？还是打发无聊的时间？曾经听过，最郁闷的事情是，比你优秀的人比你努力。</description>
    </item>
    
    <item>
      <title>Git</title>
      <link>https://guobingyi.github.io/code/git/</link>
      <pubDate>Fri, 30 Aug 2019 07:03:51 +0800</pubDate>
      
      <guid>https://guobingyi.github.io/code/git/</guid>
      <description>Git 常用命令 1.初始化仓库信息
 git init 增加文件信息到库   git add -A 提交代码   git commit -m &amp;quot;first commit&amp;quot; 同步到远程库   git push -u origin master 将远程库信息同步到本地   git clone http://192.168.100.226:3000/guoby/wzry.git 撤销提交操作  git commit --amend 重新更新git服务器信息  git remote rm origin git remote add origin http://192.168.100.201:3000/guoby/wzry.git git push -u origin master 删除文件  8.1 删除单个文件
git rm ._ddd.file 8.2 删除多个文件
find . -name &amp;quot;._*&amp;quot; -delete git add -A git commit -m &#39;delete others file&#39; </description>
    </item>
    
    <item>
      <title>牙治疗</title>
      <link>https://guobingyi.github.io/blog/%E7%89%99%E6%B2%BB%E7%96%97/</link>
      <pubDate>Sat, 10 Aug 2019 17:48:32 +0800</pubDate>
      
      <guid>https://guobingyi.github.io/blog/%E7%89%99%E6%B2%BB%E7%96%97/</guid>
      <description>牙治疗  牙疼不是病，疼起来真要命！
 原本就知道可以洁牙的，是原来黄总说过她去洁牙，然后一个月又恢复了，导致我对洁牙非常有顾虑。当然最恐怖的还是牙齿出血，会感染艾滋病，这个才是最要命的。</description>
    </item>
    
    <item>
      <title>巴尔干边界</title>
      <link>https://guobingyi.github.io/movie/thebalkline/</link>
      <pubDate>Thu, 18 Jul 2019 10:06:12 +0800</pubDate>
      
      <guid>https://guobingyi.github.io/movie/thebalkline/</guid>
      <description>巴尔干边界  战争，总是让人受伤。
 俄罗斯的电影不怎么喜欢看，原因很简单，就是不怎么喜欢俄语。
因为更多的时间看的是美剧，所以，对英语相对听起来好一点。
或许，有这样的态度，所以看起来还是有点感觉不好，当然，本身的配音感觉也没有处理好。
但是，正是因为这样，被剧情和视觉感染了。
0x00 开头 如果说开头很一般的话，我觉得一点问题都没有。为什么这样说？还是因为开头都非常老套，一个团队，参与了任务，任务失败，团队解散。刚刚的开始，从故事或者从镜头来说都非常老套，但是是俄罗斯人拍的，所以忍着看了下来。
0x01 正片开始 一般都是隔了几年，需要做重新组建团队，然后逐一找到成员，并且说明了一下，各自组员的状况。说明都过的不好，希望一雪前耻。
中间穿插着战争给人们的伤害。
 给人震撼的镜头01
 丈夫带着待产的妻子去医院，然后被轰炸，丈夫着急找到妻子，发现妻子已经被炸死，婴儿呱呱在哭，护士抱起婴儿，拉着丈夫离开，可是丈夫已经崩溃，站在原地发呆，又一轮的轰炸，整个医院被夷为平地。
 给人震撼的镜头02
 一个村子被屠杀，一个小女孩躲在了桌子下面，她的警察叔叔找到了她，并抱起了她。在一路上，看到的尸体刻目惊心。
 给人震撼的镜头03
 大巴车被拦下前，是一顿机枪的扫射。什么是战争，一下子就感受到了。
下车，全部跪地抱头。反面主角登场，逐一盘问。对牧师的那个镜头，太经典了。让牧师改变信仰的时候，我感觉到或许在死亡面前，有可能会改变吧。给我的结论是，信仰在国外的人，就想中国古代的节操一样重要，宁可死，也不会改变。
当然，女主太漂亮，也让士兵们冲动了一下。好在男主太厉害了。
 给人震撼的镜头04
 剧情是不分国界的，好人总是被坏人利用。而导演也将坏人刻画的非常深刻。
女主被抓了，原因是她在的医院是被坏人控制的，而且还是院长。
院长就出来了指责一下反面老大就死了，给我的感觉就是战争中是没有什么权利可言的，枪在谁手上，谁说了算。
逼问女主的时候，来个割喉，实在太恐怖了。女主的底线就是不能看着一个小女孩被处以极刑。
 给人震撼的镜头05
 虽然说6个人打100多人有点牛，但是看到的是，当装备压制的时候，还是可以的。
战争，就得有人要牺牲。但是，到看坏人被揍得很惨的时候，还是很爽的。
0x02 结束 老套的结尾。在千钧一发的时候，援军感到，最后的几个队员被救。
然后就是歌颂一下俄军的好。
0x03 总结 感觉这部电影在豆瓣上获得了7.5的分，还是比较中肯的。毕竟，近几年的战争电影太少了，而且让人感受到战争残酷的电影太少了。</description>
    </item>
    
    <item>
      <title>Gitbook</title>
      <link>https://guobingyi.github.io/blog/gitbook/</link>
      <pubDate>Wed, 06 Mar 2019 10:29:40 +0800</pubDate>
      
      <guid>https://guobingyi.github.io/blog/gitbook/</guid>
      <description>GitBook 初探  gitbook 是一个基于Node.js的工具。
 在Mac pro下安装gitbook非常简单，前提是安装了brew。
0x00 安装node brew install node 0x01 安装gitbook npm install gitbook-cli -g 0x02 简单使用 1.创建项目名称 mkdir goodtime 2.初始化项目 cd goodtime gitbook init 3. 编译项目 gitbook build 4. 启动项目 gitbook serve 5. 导出pdf/epub/mobi (1).安装插件 gitbook install (2).安装电子书插件 brew cask install calibre (3).导出pdf gitbook pdf . goodtime.pdf (4).导出epub gitbook epub . goodtime.epub (5).导出mobi gitbook mobi . goodtime.mobi 0x03 总结 自从使用了hugo后，对写书的兴趣就下降了。原来也用过gitbook写过点书，哈哈～～，准确的说是想学着写书。感觉非常不错，但是由于工作的原因也是断断续续的。或许，有时间应该深入学习一下，毕竟，写点东西还是蛮有意思的。</description>
    </item>
    
    <item>
      <title>Android Studio</title>
      <link>https://guobingyi.github.io/blog/android-studio/</link>
      <pubDate>Wed, 13 Feb 2019 10:31:13 +0800</pubDate>
      
      <guid>https://guobingyi.github.io/blog/android-studio/</guid>
      <description>再见 Android Studio  我们还会再次相见！
 0x00 缘起 第一次开始Android开发的时候，是在Eclipse上进行的。那个时候需求安装插件，安装Sdk等等，非常不容易才能搭建起一个开发环境。但是，由于工作的性质，一直没有能好好的学习一下。在不段的学习过程中，发现了Android Studio逐步替换了Eclipse开发Android的地位，并且开发门槛也逐步降低。
在看Android的Sdk文档的时候，发现了官方也推荐这个IDE进行开发，发现这个工具来头不了，是Google自己的IDE。
0x01 我的安卓开发之旅 1. 动物的叫声 做这个app的时候，是看到Google可以搜索动物，并且还能发出动物的叫声，而好好刚刚3岁多，可以让她看看有那些动物，并且这些动物的叫声是什么，就着手开始写了，一开始什么都不知道，就只有这样的一个点子，然后看了《第一行代码》这本书开始的，作者郭霖和我同性，但是人家可厉害多了。从写书的方式来说，我就觉得非常不错。原来我是非常鄙视国内作者的，写的东西苦涩难懂，简单的东西非用复杂的方式来表达。
2. 老人丢失找回 这个app的思路，来源自于我姑爹，他患上了疾病，有时候会自己走丢，大哥让我给他买哥电话手表，但是电话手表的找回功能却做的没有现在那么好，精度范围居然在50m外，而且没有行动轨迹。对于程序员的我说干就干，地图api使用了百度地图，想找一个云服务器来进行GPS信号传输，但是无奈的在于姑爹由于生病走了，所以这个app就搁浅了。
从这个项目来说，所有的需要都来自于生活，然后让自己的技术服务于生活，那么这个技术就是好的。
0x02 我的断舍离 虽然自己也认为，多学点技术没有什么坏处，所谓技多不压身。但是这个知识爆炸的时代，关注的过多，也会让自己迷失。所以，在断舍离的时候，想到的是，在自己横行发展差不多的时候，来一次纵向的发展，把关注点聚焦一下。
当然，还有的原因就是自己的手机已经是iPhone了，没有模拟器。
我相信自己，如果能用xcode编写出app后，用android studio也同样能编写出来，前提是这个点子得好，为过多人服务。
0x03 删除 1.卸载Android Studio rm -Rf /Applications/Android\ Studio.app rm -Rf ~/Library/Preferences/AndroidStudio* rm ~/Library/Preferences/com.google.android.studio.plist rm -Rf ~/Library/Application\ Support/AndroidStudio* rm -Rf ~/Library/Logs/AndroidStudio* rm -Rf ~/Library/Caches/AndroidStudio* 2. 删除Projects rm -Rf ~/AndroidStudioProjects 3. 删除gradle rm -Rf ~/.gradle 4. 卸载Android Virtual Devices(AVDs) and *.keystore rm -Rf ~/.android 5. 删除Android SDK Tools rm -Rf ~/Library/Android* </description>
    </item>
    
    <item>
      <title>再见Docker</title>
      <link>https://guobingyi.github.io/blog/%E5%86%8D%E8%A7%81docker/</link>
      <pubDate>Tue, 12 Feb 2019 10:56:46 +0800</pubDate>
      
      <guid>https://guobingyi.github.io/blog/%E5%86%8D%E8%A7%81docker/</guid>
      <description>再见Docker  刚刚开始，却又说再见！
 0x00 缘起 第一次遇到docker是由于学习go语言的时候，发现有人居然用go写了一个应用容器引擎，而且docker的使用非常方便。就那句话，“谁用谁知道”。哈哈～～
今天突然发现，自己被很多东西困扰了。是时候给自己来一个断舍离了，所以就拿电脑中不经常使用的app开刀了。docker在电脑中待了很长时间了，以至于打开的时候，看看目前的版本是否修复了原来Docker.qcow2文件是否只能呆在固定位置的情况，发现已经可以随意调整了，给docker点赞的同时也决定了删除她，毕竟要给自己做断舍离的同时，也想让自己聚焦一下，太发散了，累。
0x01 docker 常用命令 1. 查看本地可用镜像 docker images 2. 查看运行的容器 docker ps 3. 查看所有的容器 docker ps -a 4. 停止容器 docker stop container 5. 启动容器 docker start container 6. 删除容器 docker rm container 7. 删除镜像 docker rmi image name 8. 从Docker容器内拷贝文件到主机上 docker cp &amp;lt;containerId&amp;gt;:/file/path/within/container /host/path/target 9. 终极命令 docker COMMAND --help 使用docker自带的命令来看命令的使用。
例如，我不知道docker pause 怎么使用，用来干什么，那么我就输入docker pause &amp;ndash;help来显示结果，如下所示：
bingyideMacBook-Pro:~ guoby$ docker stop --help Usage:	docker stop [OPTIONS] CONTAINER [CONTAINER.</description>
    </item>
    
    <item>
      <title>Mac Tools</title>
      <link>https://guobingyi.github.io/mac/tools/</link>
      <pubDate>Tue, 15 Jan 2019 14:37:52 +0800</pubDate>
      
      <guid>https://guobingyi.github.io/mac/tools/</guid>
      <description>Mac下好用的工具推荐  自从升级到Mac下后，就没有回去的勇气。
 0x00 brew 推荐指数：🌟🌟🌟🌟🌟
开发必备。安装其它工具也变的越来越简单了。
进入官网，直接按照操作进行下载。
0x01 NIGHTOWL 推荐指数：🌟🌟
主题由浅色和深色的转变，如果你是一个和我一样有这样需求的人，白天浅色，晚上深色，那个这个app就不要错过。 进入官网直接下载安装即可。
0x02 Visual Studio Code 推荐指数：🌟🌟🌟🌟🌟
微软的良心大作，一款Mac下非常给了的IDE，完全可以依赖插件的情况下，打造成为你的工作IDE。 简单，插件多，颜值高。最主要的还是开源，免费的，你值得拥有。
官网地址
0x03 Emacs 推荐指数：🌟🌟🌟🌟
其实想给五星的，但是由于入门实在有点困难，所以减了一星。
如果说有来生的话，我一定会选择Emacs，因为一生的时间不够把Emacs搞定。
Emacs的插件可以说是重量级的，如org-mode。
毕竟Emacs是老一辈人的最爱，毕竟到时候进行专注一件事情的时候了。那么你拥有了Emacs的能力后 其他的IDE都可以靠边站了，一个就够了，可以想象是多么牛的事情。
开源，免费的咋就不说了，这个毕竟是Richard Stallman写的，不知道Richard Stallman自行百度吧。
官网地址
0x04 jetbrains 推荐指数：🌟🌟🌟
如果在不考虑经济基础的情况下，给五星我一点都不心疼。
三星的原因是太贵了，而我又是开发人员，不喜欢在自己的电脑上安装盗版软件，so，社区版的就够用了。
才踏入编程行业的时候，那个时候宝蓝（Borland）公司的Delphi给我的影响是最深的，以至于很长时间Visual Studio 才让我打破了这个观念，到现在是JetBrains。
开发Java/Ruby/Python/Go/Php/JavaScript/Dotnet/DataBase都可以用上，大部分都有社区版，如果没有就用 Visual Studio Code或者Emacs代替吧。
0x05 有道云笔记 推荐指数：🌟🌟🌟🌟🌟
有道云笔记是国产软件中的良心作品，空间足，免费，提供常用的笔记和Markdown笔记模式。
0x06 印象笔记 推荐指数：🌟🌟🌟🌟
扣一星的原因是免费用户一个月的空间就60M，如果要放点大图片什么的，还需要分几次用。
0x07 github 推荐指数：🌟🌟🌟🌟🌟
在被微软收购后，微软做的最足的改变就是私有库居然免费了，对于我们这种草根来说，是最好不过的，可以 当云盘使用了，比百度云盘不知好多少了。
0x08 RocketVPN 推荐指数：🌟🌟🌟🌟🌟
19元一个月的订购，可以访问google，对于经常查资料的人来说，非常棒的VPN，可惜在中国区再也不可以下载了。
0x09 WPS 推荐指数：🌟🌟🌟🌟🌟
替代Office的最好软件，不能支持正版Office的情况下，只能用这个了，但是用Mac自带的Pages有诸多不便。这个 时候为金山点赞吧，因为国产的软件的确不容易！
0x10 Zoom 推荐指数：🌟🌟🌟🌟🌟</description>
    </item>
    
    <item>
      <title>Learn Emacs</title>
      <link>https://guobingyi.github.io/emacs/learn/</link>
      <pubDate>Sun, 13 Jan 2019 10:49:09 +0800</pubDate>
      
      <guid>https://guobingyi.github.io/emacs/learn/</guid>
      <description>Emasc 学习  如果说一个IDE可以用一辈子的话，那么就是Emasc。
 0x00 安装 目前Emacs安装提供多中方式安装，可以参考官网进行安装。
0x00 入门 入门其实就是看Emacs的帮助手册，C-h t调用出帮助手册，使用大约30分钟的时间看完整个文档。那么基本可以对键有一个大概的认识，还是 需要从实战中不断加深认识。
0x01 看书或者视频 对于看书，我觉得有时候会有点枯燥，没事时间的同学可以看一下zilongshanren的Spacemacs Rocks 第二季的文章，最好 配合着视频看，会提高很多。
0x02 学以致用 用学的目的不就是为了用嘛，怎么用，就是自己用着顺手，每次打开电脑的一件事就是启动Emasc。
0x03 安心种田 将自己学到的，应用到的，将Emacs打造成自己唯一的IDE。</description>
    </item>
    
    <item>
      <title>Mac 按键标识</title>
      <link>https://guobingyi.github.io/blog/mac-%E6%8C%89%E9%94%AE%E6%A0%87%E8%AF%86/</link>
      <pubDate>Wed, 09 Jan 2019 14:37:49 +0800</pubDate>
      
      <guid>https://guobingyi.github.io/blog/mac-%E6%8C%89%E9%94%AE%E6%A0%87%E8%AF%86/</guid>
      <description>Mac按键标示  一直都以为在电脑的世界里就只有Windows。
   ⌘ Command
  ⇧ Shift
  ⌥ Option
  ⌃ Control
  ↩︎ Return/Enter
  ⌫ Delete
  ⌦ 向前删除键（Fn+Delete）
  ↑ 上箭头
  ↓ 下箭头
  ← 左箭头
  → 右箭头
  ⇞ Page Up（Fn+↑）
  ⇟ Page Down（Fn+↓）
  Home Fn + ←
  End Fn + →</description>
    </item>
    
    <item>
      <title>Eclipse che 在Mac下安装</title>
      <link>https://guobingyi.github.io/blog/eclipse-che-%E5%9C%A8mac%E4%B8%8B%E5%AE%89%E8%A3%85/</link>
      <pubDate>Tue, 18 Dec 2018 16:19:23 +0800</pubDate>
      
      <guid>https://guobingyi.github.io/blog/eclipse-che-%E5%9C%A8mac%E4%B8%8B%E5%AE%89%E8%A3%85/</guid>
      <description>Eclipse Che 在Mac下安装  折腾，不断的折腾。
 0x00 安装 在Mac下安装Eclipse Che，推荐使用Docker的方式，避免了很多的问题。
参考官方文档，单用户安装。
1. 添加IP别名 IP=$(docker run --rm --net host eclipse/che-ip:nightly) &amp;amp;&amp;amp; sudo ifconfig en0 alias $IP 注：在国外的网站上用的是lo0,而我的电脑是en0。如果不能启动使用ifconfig命令查看自己的网卡信息。
2. 安装 docker run -ti -v /var/run/docker.sock:/var/run/docker.sock -v /Users/guoby/mywork/code/che-data:/data eclipse/che start 正常启动后，显示以下内容：
INFO: (che start): Use: http://localhost:8080 INFO: (che start): API: http://localhost:8080/swagger 在浏览器上输入：http://localhost:8080 就可以使用Eclipse Che了。
3.疑难杂症 遇到的问题可能千奇百怪，但是都已经被前人踩到坑了。多搜索找到问题，但是最好的问题解决地方在项目的issues。
Don&amp;rsquo;t worry,it will be solved.
常见问题：
Failed to start workspace with Server &amp;lsquo;wsagent/http&amp;rsquo; in machine &amp;lsquo;dev-machine&amp;rsquo; not available.</description>
    </item>
    
    <item>
      <title>Go Beego</title>
      <link>https://guobingyi.github.io/code/go-beego/</link>
      <pubDate>Fri, 14 Dec 2018 10:16:03 +0800</pubDate>
      
      <guid>https://guobingyi.github.io/code/go-beego/</guid>
      <description>beego tutorial  无他， 但手熟尔。
 0x00 介绍 1. beego 简介 beego 是一个快速开发 Go 应用的 HTTP 框架，他可以用来快速开发 API、Web 及后端服务等各种应用，是一个 RESTful 的框架，主要设计灵感来源于 tornado、sinatra 和 flask 这三个框架，但是结合了 Go 本身的一些特性（interface、struct 嵌入等）而设计的一个框架。
2. beego 的架构 beego 是基于八大独立的模块构建的，是一个高度解耦的框架。当初设计 beego 的时候就是考虑功能模块化，用户即使不使用 beego 的 HTTP 逻辑，也依旧可以使用这些独立模块，例如：你可以使用 cache 模块来做你的缓存逻辑；使用日志模块来记录你的操作信息；使用 config 模块来解析你各种格式的文件。所以 beego 不仅可以用于 HTTP 类的应用开发，在你的 socket 游戏开发中也是很有用的模块，这也是 beego 为什么受欢迎的一个原因。大家如果玩过乐高的话，应该知道很多高级的东西都是一块一块的积木搭建出来的，而设计 beego 的时候，这些模块就是积木，高级机器人就是 beego。至于这些模块的功能以及如何使用会在后面的文档逐一介绍。
3. beego 的执行逻辑 既然 beego 是基于这些模块构建的，那么它的执行逻辑是怎么样的呢？beego 是一个典型的 MVC 架构。
4. beego 项目结构 一般的 beego 项目的目录如下所示：
├── conf │ └── app.</description>
    </item>
    
    <item>
      <title>Go Tutorial</title>
      <link>https://guobingyi.github.io/code/go-tutorial/</link>
      <pubDate>Thu, 13 Dec 2018 14:28:45 +0800</pubDate>
      
      <guid>https://guobingyi.github.io/code/go-tutorial/</guid>
      <description>Go Tutorial  学习一门语言最好的方式，就是熟读其文档。
 0x00 安装 安装go语言是件轻松的事情，如果安装都非常困难，那么还有什么好说的。
Mac下安装 brew install go Windows下安装 推荐使用MSI installer方式安装，一直Next下去就可以了。
0x01 Hello,world! package main import ( &amp;quot;fmt&amp;quot; ) // Print Hello,world! func main() { fmt.Printf(&amp;quot;Hello,World!&amp;quot;) } 0x01 文档查阅 godoc -http=:6060 0x02 入门  文档介绍如何安装  http://localhost:6060/doc/install 如何编写go语言  http://localhost:6060/doc/code.html 如何高效的编写go语言  http://localhost:6060/doc/code.html 熟悉go语言的api  http://localhost:6060/pkg/ 0x03 深入  已beego框架学习如何编写web项目  https://beego.me 关注go语言的Top项目  https://github.com/topics/go 学习go语言框架提供的第三方包  https://github.com/avelino/awesome-go </description>
    </item>
    
    <item>
      <title>Centos Service</title>
      <link>https://guobingyi.github.io/blog/centos-service/</link>
      <pubDate>Mon, 10 Dec 2018 10:45:23 +0800</pubDate>
      
      <guid>https://guobingyi.github.io/blog/centos-service/</guid>
      <description>Centos7 创建服务  用多了Windows后，才发现其实还是有很多选择的。
 在Centos下使用服务，还是因为公司有几个项目每次都需要手动去启动，麻烦。所以充分发挥程序员的懒惰。 原来在Windows下用过服务，觉得还是用的挺方便的。但是用得了Centos下的服务后，才发现什么叫做方便， 好用。
0x00 编写服务 myservice.service # auto start [Unit] Description=Start MyService #服务描述 After=mysql.service #字面翻译就是等mysql服务器启动后，再启动 [Service] Type=forking #后台运行 TimeoutSec=0 #设置永不超时 ExecStart=/opt/server-shell/start.sh #服务运行命令 ExecStop=/opt/server-shell/stop.sh #服务停止命令 PrivateTmp=true #分配临时空间 [Install] WantedBy=multi-user.target #多用户 服务定义可以参考：
systemd.service — Service unit configuration
0x01 编写运行命令 start.sh #!/bin/sh #start web sh /opt/apache-tomcat-8.0.32/bin/startup.sh ps. 千万要写 &amp;ldquo;#!/bin/sh&amp;rdquo;，不写有可能执行不了sh脚本。
0x02 编写运行命令 stop.sh #!/bin/sh killPid=`ps -ef|grep start.jar|grep -v &amp;quot;grep&amp;quot;|awk &#39;{print $2}&#39;` if [ &amp;quot;$killPid&amp;quot; != &amp;quot;&amp;quot; ]; then echo killing start.</description>
    </item>
    
    <item>
      <title>brew 使用指南</title>
      <link>https://guobingyi.github.io/blog/brew-%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/</link>
      <pubDate>Thu, 08 Nov 2018 11:22:28 +0800</pubDate>
      
      <guid>https://guobingyi.github.io/blog/brew-%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/</guid>
      <description>brew 使用指南  自从用了brew，就在也不想离开mac系统了。
 0x00安装brew 访问brew官网，根据提示进行安装。
/usr/bin/ruby -e &amp;quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&amp;quot; 0x01使用brew安装软件 brew install wget 0x02使用brew更新软件 brew update 更新使用brew安装的软件
0x03使用brew执行更新 brew upgrade 所以，一般都使用组合命令进行执行
brew update &amp;amp;&amp;amp; brew upgrade 0x04 使用cleanup执行删除老更新包 brew cleanup 0x05 cask下的安装与删除 安装
brew cask install name 卸载
brew cask uninstall name 0x06 总结常用命令 1. 安装源码 brew install wget 2. 显示软件的各种信息（包括版本、源码地址、依赖等） brew info svn 3. 卸载软件 $brew uninstall mpv 4. 搜索brew 支持的软件（支持模糊搜索） brew search python 5. 列出本机通过brew安装的所有软件 brew list 6.</description>
    </item>
    
    <item>
      <title>快速下载所需的Jar</title>
      <link>https://guobingyi.github.io/blog/%E5%BF%AB%E9%80%9F%E4%B8%8B%E8%BD%BD%E6%89%80%E9%9C%80%E7%9A%84jar/</link>
      <pubDate>Tue, 06 Nov 2018 10:06:02 +0800</pubDate>
      
      <guid>https://guobingyi.github.io/blog/%E5%BF%AB%E9%80%9F%E4%B8%8B%E8%BD%BD%E6%89%80%E9%9C%80%E7%9A%84jar/</guid>
      <description>使用maven下载jar到本地 原来使用Java进行项目开发的时候，都是使用浏览器一个一个jar进行下载，放到lib目录中使用。 最近，发现使用maven的效率更高，所以，使用该方法。
1.创建一个pom.xml文件。 &amp;lt;?xml version=&amp;quot;1.0&amp;quot;?&amp;gt; &amp;lt;project xmlns=&amp;quot;http://maven.apache.org/POM/4.0.0&amp;quot; xmlns:xsi=&amp;quot;http://www.w3.org/2001/XMLSchema-instance&amp;quot; xsi:schemaLocation=&amp;quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&amp;quot;&amp;gt; &amp;lt;modelVersion&amp;gt;4.0.0&amp;lt;/modelVersion&amp;gt; &amp;lt;groupId&amp;gt;com.bingyi&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;test&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;1.0-SNAPSHOT&amp;lt;/version&amp;gt; &amp;lt;repositories&amp;gt; &amp;lt;!-- &amp;lt;repository&amp;gt;&amp;lt;id&amp;gt;central-repos2&amp;lt;/id&amp;gt;&amp;lt;name&amp;gt;Central Repository 2&amp;lt;/name&amp;gt;&amp;lt;url&amp;gt;http://repo.spring.io/plugins-release&amp;lt;/url&amp;gt;&amp;lt;/repository&amp;gt; --&amp;gt; &amp;lt;!-- &amp;lt;repository&amp;gt;&amp;lt;id&amp;gt;maven.net.cn&amp;lt;/id&amp;gt;&amp;lt;name&amp;gt;oneof the central mirrors in china&amp;lt;/name&amp;gt;&amp;lt;url&amp;gt;http://maven.net.cn/content/groups/public/&amp;lt;/url&amp;gt;&amp;lt;/repository&amp;gt; --&amp;gt; &amp;lt;repository&amp;gt; &amp;lt;id&amp;gt;oschina-repos&amp;lt;/id&amp;gt; &amp;lt;name&amp;gt;Oschina Releases&amp;lt;/name&amp;gt; &amp;lt;url&amp;gt;http://maven.oschina.net/content/groups/public&amp;lt;/url&amp;gt; &amp;lt;/repository&amp;gt; &amp;lt;!-- &amp;lt;repository&amp;gt;&amp;lt;id&amp;gt;alimaven&amp;lt;/id&amp;gt;&amp;lt;name&amp;gt;aliyun maven&amp;lt;/name&amp;gt;&amp;lt;url&amp;gt;http://maven.aliyun.com/nexus/content/groups/public/&amp;lt;/url&amp;gt;&amp;lt;/repository&amp;gt; --&amp;gt; &amp;lt;!-- &amp;lt;repository&amp;gt;&amp;lt;id&amp;gt;central&amp;lt;/id&amp;gt;&amp;lt;name&amp;gt;Maven Repository Switchboard&amp;lt;/name&amp;gt;&amp;lt;url&amp;gt;http://repo1.maven.org/maven2/&amp;lt;/url&amp;gt;&amp;lt;/repository&amp;gt; --&amp;gt; &amp;lt;/repositories&amp;gt; &amp;lt;dependencies&amp;gt; &amp;lt;!-- TODO: add you need jar --&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.jasypt&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;jasypt&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;1.8&amp;lt;/version&amp;gt; &amp;lt;exclusions&amp;gt; &amp;lt;exclusion&amp;gt; &amp;lt;groupId&amp;gt;org.slf4j&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;slf4j-api&amp;lt;/artifactId&amp;gt; &amp;lt;/exclusion&amp;gt; &amp;lt;/exclusions&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;/dependencies&amp;gt; &amp;lt;/project&amp;gt; 2.创建执行脚本 downloadjar.bat call mvn -f pom.</description>
    </item>
    
    <item>
      <title>Dbeaver</title>
      <link>https://guobingyi.github.io/opensource/dbeaver/</link>
      <pubDate>Tue, 23 Oct 2018 10:52:14 +0800</pubDate>
      
      <guid>https://guobingyi.github.io/opensource/dbeaver/</guid>
      <description>Dbeaver项目  好项目，如何生存下去？
 官方项目地址：https://github.com/dbeaver/dbeaver
官方项目介绍：https://dbeaver.io/
开始听到DBeaver的时候，是一位同事在用，没有留意。
最主要的是想让自己的苹果电脑上少安装一些盗版软件，而做的真正的支持正版软件。
我评价一个好的开源项目，应该是下载源码后，能直接编译成功的。
当然，在编译DBeaver的时候也有一些小插曲，都已经解决了，并且成功编译，所以过了我自己评定好开源项目的第一关。
以下是编译的过程中出现的一些问题：
1.1 编译中下载插件无法下载。
需要翻墙，找个可以访问外网资源的软件就可以了，mac系统下推荐RocketVPN。 1.2 编译报错。
[INFO] org.jkiss.utils 2.1.78-SNAPSHOT .................... FAILURE [ 2.394 s] 问题是由于我手贱升级了java到11导致的，这个时候手动设置一下JAVA_HOME路径。
export JAVA_HOME=/Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home ps. 遇到问题可以到项目中的Issues中查找，80%都能解决问题。
编译成功后会在在dbeaver/product/standalone/target/products/org.jkiss.dbeaver.core.product下产生三个平台的安装文件。
至此，编译完成。
从这个开源项目中可以花时间看一下，java语言开发的项目如何生成三个平台（linux,macosx,win32)的安装问题。
有时间需要弄明白的地方？
  Java如何编译成跨平台的项目？
  为何来维系这个开源项目，虽然本项目也分为社区版和企业版？
  </description>
    </item>
    
    <item>
      <title>12year</title>
      <link>https://guobingyi.github.io/life/12year/</link>
      <pubDate>Fri, 05 Oct 2018 16:05:26 +0800</pubDate>
      
      <guid>https://guobingyi.github.io/life/12year/</guid>
      <description>12年的同学聚会  转眼间，12年飞逝。
 我还是非常期待这次同学聚会的。所以，我在知道后就把行程安排好了，同时也把火车票买了。做到，风雨无阻。
要去的头天晚上，好好还不让我去，她不想离开我。其实，我真的担心，在我去的时候她在家里哭闹，但是没有。
去的时候有点期待，毕竟是12年没有见到的同学，是不是应该有很多的话要说呢？
早上起来就期待着这次聚会，梳洗好后准备要走的时候，好好起床了，告诉我不让我走，但是我告诉她，这次爸爸要去的，是去见12年前的大学同学，好好在纠缠了一会也就放弃了，她只是希望我不要喝酒。然后，让我帮她带点礼物。
早上的昆明一样的堵，更何况下过雨。原本想做公交车的，还是害怕时间来不及还是打车了。师傅是个本地人，一上来就开始吐槽昆明的交警各种乱收费。
来到取票厅，我才发现，我早点来是对的，人山人海。
高铁票是老婆帮买的，第一次还是有点紧张，不知道要怎么出票，恩，说明我好久没有一个人出来了，也说明好多事情都是老婆代劳的。但是，30多岁的经验告诉我，不会弄，是可以看看别人是怎么弄的就可以了。所以，我也没有刻意的去想，就想着看自己前面的人，学着人家弄就可以了。然后开始看视频广告，一看不得了。原来是告诉大家，做高铁的时候，千万不要睡过头了，原来说的公交车睡过了，没有问题，就多几个站而已，高铁就惨了，睡过了，就从楚雄到大理了。所以，最让我警惕的是，不能睡觉。
买了票进站后，才发现人还是非常的多，看到许多人的行头都是去大理玩的，很多年轻人，带着行李箱，一个人踏上了旅程。我甚至还看到一个母亲带着小孩旅游的，不得不佩服。如果让我一个人带的话，我是没有信心的。
火车上的时间是漫长的，因为心中期待这这次聚会，期待着自己给自己一个面对自己的时间。
在忍住了没有睡觉后，感觉随时都有可能到楚雄。摘掉了耳机，听着到播报“楚雄站，到了”的时候，就非常兴奋。
下站后的第一时间就是先把回来的车票出了，因为来楚雄的时候，让我感受到售票处的人还是那么多，我可能就不能正常回昆明了。公交车和出租车还是比较多的，我看了一眼可以到桃源湖的9路公交车就上去了，还好有一个座位。
我知道，其实我今天来的还是挺早的，但是我不想先到组委会那边，因为我想自己先走走。走一走自己曾经走过的路，看一看原来在的地方。
下车后，从河边开始走起，原来分为老城区和新城区就是靠这条河来进行分离的。而最近的一个公园就是龙江公园。 继续往前走，顺着原来熟悉的路，向前走。
这栋楼原来是楚雄州的昆明新知图书城，我曾经我最喜欢的一个地方，喜欢在这里买书，看一些新的技术。
电信大楼，我的第一个电话就是这里买的哦。我来这个地方就做两件事，来弄小灵通的事，或者就是每个月打款了。 原来上学的时候，每个月都是父亲打款过来的。
站在立交桥上，对四条路都有满满的回忆。这条路走得最多的是要到客运南站，虽然更多的是去北站坐车，但是也有情况去南站坐车。
这条路是开往北站的路，当然更多的是去北站坐车回家，当然也和老婆去火车站，去过一次大理。 这条路走往桃园湖，但是我去的更多的是楚雄州的图书馆，虽然书有点旧，但是还是在里面读了许多宝贵的知识，搞笑的是有次我去的时候， 有个电视台来采访，问了一下我对图书馆的感受，我还非常认真的配合。最后，图书管理员都对我非常好。哈哈～～
这条路就走的比较多，回学校的路，我们经常会来龙泰吃小吃，通宵，看电影。
上大学时期，比较流行的龙泰电影院，龙泰网吧。当然，还有个喝咖啡的地方。
在这个地方留下了太多太多的回忆，每次从南门坡做5角的微型车下来。大学的事情就两个，要不就是通宵网吧，要不就是小火锅。看似5角，但是很多时候，我们都是走着下来，并不是因为要省这5角，而是走的过程中感觉更好而已。
或许城市里，没有改变太多的就是这些小吃店吧。我还记得我们一起吃小火锅的情景。那时，我记得， 尚地每次火锅菜一熟就开始发烟，我和老彪，抽完烟发现怎么菜又没有了，哈哈😄。那个时候，三个人，两瓶茅梁。
特地跑过来，看了一下这个医院。因为有次老彪他们宿舍喝酒喝多了，集体来这个医院打点滴。而那次也吓到我们了，班主任都过来了，让我们守着他们一晚。我们在旁边开了个房间等他们。
原本想去原来经常吃米线的地方吃东西的，但是在路边看到这家回族的馆子还不错。依稀的小雨在下，肚子有点饿， 所以就想就在这家吃个小碗吧，遇到其他店再吃吧。
踢球是大学生活中非常有意思的，因为每次读书累了，踢球可以很好的解决这些问题。当然，在大学里，踢球好也会 和其他系来约踢球，相互比较。我们的球鞋都会买两种，一种是在大场上踢球用的，一种是在小场（篮球场）踢球的。 这家店是我们经常来买球鞋的。
依稀记得，在这个旁边是有个买面条的餐馆。那个时候吃面条，第一次看到是称两卖的。而我经常吃的就小碗和大碗。中碗只存在 中学的时候，现在大部分都不使用了。牛x的楚一中，我们上学的时候，名气比我们大学大多了。当然，让我感觉牛的还是和他们高中队 踢了一次球，居然踢不过，可想而知。
楚雄州医院，我就记得有次我感冒去打了一次点滴。说明踢球的好处太多了。而那次打点滴，还看到一个女的，说她开车从昆明上来， 开车累了，就睡着了，撞到了路边，被过往的司机救了。感慨生活不能太拼了。
这个路口，不知在次等过多少次红绿灯。一个走到西山公园，一个走到南门坡。
这个南门坡有太多太多的回忆，有在这个地方的球场踢球。印象深刻的一次进球就是，和经管系踢球，胸部停球，然后凌空抽射。 球越过守门员入网，一气呵成。想想都是那么的让人激动。
在南门坡和爸爸妈妈分手，爸爸说：“是时候该断奶了！”。看着他们离去的背影，我真想不上学了，跟着他们回家。
在南门坡，为了赶北站最早的车回昆明，一个人走下来，没有人。只有火警车呼啸而过。最终在坡底找到了一个微型车，搭乘最早的早班车回家。
在南门坡，被小林老师看到，说我们这个时间不好好去上自习，来这里逛什么？被严重鄙视。
中师部的球场，如果我们在上球场找不到小场踢，就会跑到这边来玩。
博物馆也变的高端大气啦。
在博物馆的对面有个前卫在线还是什么的？原来喜欢来这里喝啤酒，听他们唱歌。原来就一瓶啤酒就可以做一个 晚上的地方，由于就是听歌，也没有什么好玩的，所以来的次数也不是很多。
原来的老师宿舍，下面是医务室，我原来会经常找姜老师玩。
终于到老校区的正门啦，虽然还有其他门，但是我来上学的时候，走的就是这道门，也就奠定了在我心中的地位。
为什么说是我心中的地位，因为很多时候都喜欢从这个门回家，有回家的感觉。
此时此情，回忆满满的；从左走来找姜老师，从右走来买包烟；直走回家或者去龙泰通宵网吧！
传说中的樱花大道，因为每到时节，樱花都会开满路的两边，非常漂亮。
我们在老校区住的公寓，条件非常好，4人间。为什么这样说，因为在我们的上届住的8人间，而且是高低床。而我们呢，每人一张床，上面睡觉，下面学习。想想当时还是非常幸福的。毕竟，从来没有离家这么远，第一次出门，第一次出来闯。
原来从老校区走到新校区的一个湖，现在被填平了，盖了许多的房子，怎么说呢？应该可以说是吃货一条街。想一想，当时的我们，想吃点好吃点的，只能到龙泰才能吃到。
新校区的也变得越来越高大上，真是有钱什么都可以搞定。
我们的主教学楼在2楼，计科系早早的被般了过来，原来曾经怀疑过，是好的科系被早般过来，还是差的，我想是好的吧！
道路两旁的树已经长成了，绿荫大树，我们刚刚过来的时候，还没有，一晃眼十年过去了。
图书馆是除了球场外，最喜欢去的地方，当然你要说网吧也喜欢去也行，但是上学的时候是没有那么多钱的。毕业后的几年，经常会做梦，梦到自己的图书馆书又过期了，又要被罚款了。主要是自己从图书馆借的书，就没有那次正常看完归还过。不过，还是在这里留下了满满的回忆。在这个新图书馆，已经挣扎了一次考四级和考研，但是由于四级没有考过，所以考研也就无从谈起了。或许，应该从那个时候就应该断了考研的念头，而不是工作了，还在想着考一个在职的研究生。反正到目前为止，研究生就像梦一样存在了。
慢慢的，离找工作的时间越来越近，也就没有太多的时间准备考试，而是主要已学习一门语言为主。那个时候，在老校区的时候，看到有人抱着一本《Think in Java》，没有感受到Java力量。主要还是想学一门所见即所得的，所以拥抱了微软的技术。搞笑的是，从那个时候开始起，就非常鄙视php,asp,html,javascript技术，觉得那些都是比较肤浅的，要学习底层的东西。虽然搞不清什么是底层的东西。😊总想着徐老大说的，要用程序来改变人生。在抱着《C#高级编程》这本大红书啃的时候，姜老师给了我一个机会，用visual basic来编写一个户籍管理系统，给了我他办公室的钥匙，让我用他的电脑来写。那个时候，非常兴奋，去图书馆里借了很多visual basic的书来看，而且还到新知图书城，买来了一本《visual basic.net高级编程》。（这本书送给了我大姚职中的学生，因为我用visual basic写了一个图片浏览工具，而被我的技术深深折服，哈哈，吹牛啦！）依稀记得，那个时候，白天去机房编写，晚上去姜老师办公室编写，还有避开那些学生会的同学去那里开会。那个时候，真是太拼了，知道自己在写程序的感觉真好。到最后，也不知道什么原因，这个程序写到一半的时候，由于时间紧，所以姜老师自己写了，而我呢？也从此入了visual basic的门。到最后用到了visual studio 2003,开始使用了C#语言来完成自己的毕业设计。当然，在此期间，我也和小多学习了Delphi的使用，因为他们毕业设计是用Delphi写的。从这个方面来看，我也经历了Delphi的落幕。虽然，有很多话要说，但是也得就此打住了。</description>
    </item>
    
    <item>
      <title>Upgrade</title>
      <link>https://guobingyi.github.io/blog/upgrade/</link>
      <pubDate>Mon, 27 Aug 2018 20:52:12 +0800</pubDate>
      
      <guid>https://guobingyi.github.io/blog/upgrade/</guid>
      <description>Upgrade 升级 一次偶然的机会在网上看到了一部片子叫《升级》，刚刚看到的时候感觉不到什么，都没有想到要去下载下来看一下。因为最近加班已经没有精力去看电影了，但是听说非常不错，也就下载了，找了一个时间段，将电影看了一下，感觉还真不错。
首先，看到精彩的地方是几点：
  一个机械师在家中的地下室陶腾他的那台老车，看是风格迥异，甚至我都感觉是不是在看赛车的节目。但是，可以看到的是，这个男猪脚的手艺不错，经过一番捣腾后，发动机还是响起了。
  画风一改，老婆做车无人驾驶汽车来，而且还可以在车上进行视频电话，完全可以抛现在的无人驾驶车好几条街。老婆为了和老公早点见面，匆匆挂断电话，导致我一度怀疑是不是，这个通电话的人买凶杀了老婆。
  超豪华的家，带上人工智能，在茶几上进行查看新闻和手指操作，让这个人工智能家居变得更加高大上。
  无人机值守，让整个区域都变成了监控范围。但是，也存在很多漏洞，掌控权在高级的用户上手，而所有有权限的，都可以进行篡改。在科技面前所有的东西都可以变的虚拟，所有的东西又都可以伪装。
  其实，在人工智能获取到最高权限就意味着人类已经被人工智能控制。
  在看完后，还是有许多让人思考的地方，比如前段时间看到的匿名者（anon）,都在说人工智能的事情，但是好在anon的人工智能还掌控在人类的手上，而升级却已经完全被人工智能掌握。最讽刺的是，人类总喜欢虚拟世界，这个和我们在玩的游戏有什么不同呢？我们都在现实生活中获取不到乐趣。那么，是否在虚拟世界里就可以活下去。这个又和《黑客帝国》中的人物一样，是否人到最后都是被圈养呢？可以让人进行无限的思考，如果现实社会不能让人感到快乐，那么是否在虚拟世界就让人快乐了。人类追求的到底是什么呢？好像非常矛盾，想让科技带给人类便捷的同时，却又害怕被科技替代。在电影中的科技，看似非常智能化，但是同样也可以让人感受到这种科技离我们越来越近，面临的是我们如何去看待这些科技。做为一个程序员，虽然非常想去实现这些科技，但是同时也为这种后果去思考。人类是否真的要被自己玩坏呢？
或许写代码也有这种感觉，感觉写一个脚本就可以完成好多自动化工作，甚至感觉所有的控制权都交给了系统。但是，或多或少，都会让我们感觉到，控制权必须掌握在自己手中，才有主动权。而在获取这种感觉的时候，都是通过不断的升级代码来完成的。当代码有自己的思维时候，或许我们也就要下岗了。
当主角说主动权交给人工智能后，每次结果都主角大吃一惊的时候，我就感觉到这种感觉非常不好，因为已经不可控制了。或许在这个时候，最好的选择就是放弃吧，但是又有多少人可以做到呢？</description>
    </item>
    
    <item>
      <title>Visual Studio Code</title>
      <link>https://guobingyi.github.io/code/vscode/</link>
      <pubDate>Fri, 24 Aug 2018 16:10:52 +0800</pubDate>
      
      <guid>https://guobingyi.github.io/code/vscode/</guid>
      <description>Visual Studio Code 插件  近来对Visual Studio Code的使用频率越来越高，也同时对微软出的这款免费IDE越来越喜欢。
 1.Settings Sync 对于使用不同电脑进行开发的人，最喜欢的就是同一个IDE，相同的配置。所以Settings Sync可以解决这个问题。详细的使用还是参考帮助文档，对了，前提是你得注册了一个github账号。
2. Project Manager 其实这个功能就是为了在不同的项目中快速切换。恩，好用。
3. REST Client REST 客户端允许你直接发送 HTTP 请求并在 Visual Studio Code 中查看响应。比PostMan简单，但是可以在IDE中直接使用也不错。
4. Todo Tree 写惯了TODO，用这个就可以由个想eclipse的效果，感觉还不错。
5. Night Owl 晚上编码的时候可以用一下这个皮肤效果，不错。
6. markdownlint 使用hugo编写博客的时候，用到最多的插件，因为可以边写边看效果。
7. GO/C#/Ruby/Python/C/C++ 语言插件，根据自己使用来进行安装，但是像我这样，什么都想弄一下的，都装了。
8. Git History git项目提交后，git历史信息。
9.GitLens git项目提交信息和提交时间点信息。
10. minify 将javascript文件变为min格式，好用。原来都是在eclipse中使用相应的插件，现在visual studio code 也有了。
11. Org Model 原本这个应该是emacs才有的，而且功能比较强大。
12. SVN svn的可视化版本，虽然现在我都用命令行。
13. TODO Highling TODO:高亮显示，挺醒目滴。
14. vscode-icons 图标根据语言进行变化，对视角比较看重的同学可以试试。
15. XML Format 就是对xml文件内容进行格式化，让人能清晰的看懂。</description>
    </item>
    
    <item>
      <title>Others</title>
      <link>https://guobingyi.github.io/code/others/</link>
      <pubDate>Thu, 09 Aug 2018 11:39:34 +0800</pubDate>
      
      <guid>https://guobingyi.github.io/code/others/</guid>
      <description>Don&amp;rsquo;t be evil
 记录一些奇怪的错误 0x00 swift控制端启动错误 每次在控制台输入swift的时候，都会报这个错：
bingyideMacBook-Pro:~ guoby$ swift Traceback (most recent call last): File &amp;quot;&amp;lt;input&amp;gt;&amp;quot;, line 1, in &amp;lt;module&amp;gt; File &amp;quot;/usr/local/Cellar/python@2/2.7.15_1/Frameworks/Python.framework/Versions/2.7/lib/python2.7/copy.py&amp;quot;, line 52, in &amp;lt;module&amp;gt; import weakref File &amp;quot;/usr/local/Cellar/python@2/2.7.15_1/Frameworks/Python.framework/Versions/2.7/lib/python2.7/weakref.py&amp;quot;, line 14, in &amp;lt;module&amp;gt; from _weakref import ( ImportError: cannot import name _remove_dead_weakref Welcome to Apple Swift version 4.1.2 (swiftlang-902.0.54 clang-902.0.39.2). Type :help for assistance. 很长时间没有解决，在使用了google后，最终找到了解决方案。
If you&#39;re on OSX and are using homebrew, check your packages installed with brew by running brew list, and if &amp;quot;python@2&amp;quot; appears in that list, and Python 2.</description>
    </item>
    
    <item>
      <title>Test-driven development with Go</title>
      <link>https://guobingyi.github.io/code/test-drivendevelopmentwithgo/</link>
      <pubDate>Tue, 07 Aug 2018 17:48:14 +0800</pubDate>
      
      <guid>https://guobingyi.github.io/code/test-drivendevelopmentwithgo/</guid>
      <description>介绍 使用Go语言进行驱动开发。
讲什么 本书将讲解如何使用一个在线服务创建二维码，仅仅使用Go自带的框架。
二维条形码可以编写各种信息。许多智能手机都用扫描二维码的应用程序，你可能以前看见过，如果没有，下面就是典型的二维码信息：
在本书的结尾将由一个完整的例子，使用http服务来创建二维码。在此过程中，你讲学习到Go语言的一些特性和其标准库用法以及测试驱动开发。
预期读者 本书的读者需要有一定的编程基础，如果没有学习过Go,请点击此处进行学习。
要求 在阅读本书前，你需要准备以下工具：
Go Go语言环境是本书中的唯一要求。你可以从其官网进行下载安装。如果你的操作系统是OS X，可以使用Homebrew进行安装。 大多数的Linux都已经在包管理器中加入了Go。
一个终端 使用Go语言的最佳途径就是使用终端。大多数的Linux系统使用其自动的终端shell，苹果用户可以使用Terminal.app；而 windows用户可以使用Cygwin或Git Bash。
一个编辑器 最终，你将使用一个编辑器来进行编码。编辑器有非常多的选择，然而Sublime Text看起来非常流行。默认的 Go配置插件，Emasc和Vim都有提供。
翻译者：推荐Visual Studio Code，好用，免费。
代码实例 Go代码 本书包含大量代码示例。 Go代码是最突出的，这样的代码总是用文件名和行号注释; 这些数字不一定从1开始，但在写入时请参考文件中的位置。 每个片段都包含文件名作为其标题，通常后面跟着一些纯文本注释。
fragment.go
17 func (r *Receiver) MyFunc() err { 18 print(&amp;#34;Anything&amp;#34;) 19 print(&amp;#34;Even more&amp;#34;) 20 } 17
关于第17行的一些有趣信息。
17 - 20
关于从第17行到第20行的整个代码块的一些有趣信息。
有时代码样本缺少行号 - 在这种情况下，代码实际上并不包含在源代码中，而是意味着要点。
go fmt 高亮显示运算符优先级
func Hypothetical(a b c int) int { return 4*a*a + (b*c)/2 } 命令行会话 软件开发是编辑器和命令行之间的相互作用。相关命令行会话也包含在本书中，并呈现如下：</description>
    </item>
    
    <item>
      <title>健康</title>
      <link>https://guobingyi.github.io/life/health/</link>
      <pubDate>Tue, 07 Aug 2018 09:00:19 +0800</pubDate>
      
      <guid>https://guobingyi.github.io/life/health/</guid>
      <description>自己的健康问题  如果不是生死问题，所有的问题都是小问题。
 肾结石 从来都没有想到过自己会得这样的病，但是还是得了。
下面是医生开的结石药：
 热淋清颗粒  疗效我感觉就是在尿血的时候喝，到底起不起用不知道，反正吃了好多盒，石头依然在。
 舒泌通胶囊  打石药，也是吃了好多盒，石头依然在。
 结石通胶囊  打石药，和上面差不多，或许是因为上面的不起作用，换这种的吧，好几盒，石头依然在。
糖尿病  阿卡波糖片   骨化三醇胶丸   盐酸二甲双胍片   碳酸钙D3片   门冬胰岛素  </description>
    </item>
    
    <item>
      <title>GameOfThrones</title>
      <link>https://guobingyi.github.io/blog/gameofthrones/</link>
      <pubDate>Sat, 04 Aug 2018 15:20:33 +0800</pubDate>
      
      <guid>https://guobingyi.github.io/blog/gameofthrones/</guid>
      <description>冰与火之歌  很早的时候就有人推荐给我看，但是我一直都沉迷在《行尸走肉》中。觉得美剧中，没有比《行尸走肉》更好看的了。其实，我错了，大错特错。
 0x00 狼家 史塔克 从第一季就被鸿达的场面所吸引了，在此之前，我在看《天行健》这本书，也是感觉不错。但是还是被《冰与火之歌》吸引了。
在全剧中，我最喜欢的一句话就是凛冬将至（Winter is coming）。看似平静的生活，也会被无情的打乱。对于平静的北境，来自异鬼的威胁，来自国王罗伯的邀请。看似艾德·史塔克要开始新的生活，想不到是死路一条。一直以为的主角，到头来，谁也不敢猜测。
0x01 鹿家 罗伯 鹿家非常搞笑。
0x02 龙家 龙妈真的很惨。
0x03 玫瑰家 荆棘女王。
0x04 狮子家 “有债必还”是狮子家的人非常自豪的话。
小拇指说了一句话叫：“知识就是权力！”，而王后马上就说：“权力就是权力！”。非常经典。
0x05 守夜人 守夜人可以说是非常大公无私的，但是从守夜人的来源上看，又是地位非常卑微的人。
0x06 鹰家 鹰家给我的感觉就是没有好好的教育好下一代，让儿子非常随着母亲。</description>
    </item>
    
    <item>
      <title>Centos7搭建ftp服务</title>
      <link>https://guobingyi.github.io/blog/centos7%E6%90%AD%E5%BB%BAftp%E6%9C%8D%E5%8A%A1/</link>
      <pubDate>Fri, 27 Jul 2018 09:42:51 +0800</pubDate>
      
      <guid>https://guobingyi.github.io/blog/centos7%E6%90%AD%E5%BB%BAftp%E6%9C%8D%E5%8A%A1/</guid>
      <description>Centos7 搭建ftp服务  其实，我需求的很简单，你别讲的那么复杂。
 第一次在centos7下搭建ftp服务，原来在redhat下搭建过，但是忘记了怎么搭建了。尴尬了，所以就重头开始。我的需求很简单，就是一个ftp服务，去掉匿名登录后，有个用户和密码，能将文件放到上面就完了。好了，需求有了，我用百度搜了“centos7 ftp服务搭建”，一大堆网页跑出了，我选择了一些常用的地方，比如csdn,博客园，红黑联盟。但是非常失望，没有一个地方可以很清楚的讲解清楚，如果照着页面上的做，那么可能会进入一个死结，但是文章中又没有提到该怎么解，反正人家是成功的，你的就不成功。郁闷！这就陷入另外的一个处境，你不得不尝试其他文章的方法，这样一折腾，一个早上，或者一天就结束了。希望我能在这里将我遇到的坑，和怎么解决的方法告诉大家，避免走弯路。
0x00 安装vsftpd 如果centos下没有安装vsftpd，那么就你就直接安装:
yum install vsftpd 如果安装了，那么就直接卸载了。
yum remove vsftpd 卸载后需要注意以下问题：
 查看线程是否存在  ps auxf | grep vsftpd 如果线程存在则直接 kill -9 .
 如果/etc/vsftpd文件夹存在，先删除在重新安装。  即：在重新安装前，全部vsftpd的线程不存在，文件夹为最新。
0x01 配置信息 ftp服务的配置信息路径为：
/etc/vsftpd/vsftpd.conf 一般对照配置修改以下内容：
#禁用匿名用户登录 anonymous_enable=NO #是否允许本地用户登录 chroot_local_user=YES #ftp根目录 local_root=/ftpserver/flowdata 0x02 创建本地用户  创建ftp用户  useradd jack 设置用户密码  echo &amp;quot;jack_pass_word&amp;quot; | passwd jack --stdin 3.限制该用户仅能通过 FTP 访问
usermod -s /sbin/nologin jack 0x03 启动ftp服务 systemctl start vsftpd 0x04 验证ftp服务 在浏览器中如输入以下地址，如果能正常访问，则部署成功；如果没有，从0开始。</description>
    </item>
    
    <item>
      <title>Anon</title>
      <link>https://guobingyi.github.io/blog/anon/</link>
      <pubDate>Sat, 14 Jul 2018 16:46:13 +0800</pubDate>
      
      <guid>https://guobingyi.github.io/blog/anon/</guid>
      <description>匿名者  What you look for every day of your life.Why you&amp;rsquo;ll never understand.It&amp;rsquo;s not that I have something to hide&amp;hellip; I hava nothing I want you to see.
 最近看了一部电影《匿名者》。
刚刚开始看的时候，还是被影片中的电脑特技给征服了。看到这种通过眼睛来进行扫描人员信息的时候，还是联想到了谷歌的glass。但是唯一的区别在于谷歌glass是可以摘下来的，而电影里的是每个人都被种植到了眼睛了，并且不能被摘除。如果被入侵了，那么人就瞎了。而且所谓的记忆，也会被删除。
不可否认，这样将主动权都交给了电脑，会提高相对的安全。但是，更多的是不安全。所以，电影里的女主角才启动了隐藏算法。越是绝对的控制，越是不安全。
隐私问题也是一个非常大的问题。现在人们越来越注重个人隐私。但是，在电影中，统治者将所有人的隐私进行统一管理，警察可以查看每个人的隐私，当然hacker也可以。就是说，我们的隐私被放到服务器上，有权限的人都可以看到。想想都恐怖，如果人没有了隐私，是不是社会会更安全。
在推特上也看到，现在社会中使用脸部采集，每个人去过什么地方，都会被该地方的监控录入，然后进行分析。就是说，如果你没有做什么，或者没有人来调用监控，那么你的隐私是安全的。但是如果有人调用了，那么你就没有什么所谓的隐私可言。
对于隐私来说，应该是双刃剑。用的好，可以造福人类，用的不好，也可以危害人类。电影中的去除影像技术，就是给犯罪人员逃脱法律制裁。而犯罪的依据有通过个人的视角来评定。所以，从电影中看出，这个系统是存在非常大的严重bug的。
结论就是，任何技术，任何规则，都不能摆脱人性。人之初，性本善。突然想到了《僵尸世界大战》上的13人原则，当12个人都同意的时候，必须有1个人来推翻12人。没有绝对的东西，事物都是两面性的。
害怕，将来会有这么一天。虽然是写代码的，但是也不能将所有的东西都交于代码。或许，有种说法叫返璞归真。太过于依赖技术，不如不用技术。我一直相信，科技只能听命于人类，而非让科技来主动指导人类。太多，太多的科幻片，都直奔主题，说科技导致了人类毁灭。但是，我觉得，《匿名者》这部电影，隐晦的道出了这个道理。而这种技术，离我们却又那么近。</description>
    </item>
    
    <item>
      <title>Kafka</title>
      <link>https://guobingyi.github.io/blog/kafka/</link>
      <pubDate>Fri, 13 Jul 2018 19:46:58 +0800</pubDate>
      
      <guid>https://guobingyi.github.io/blog/kafka/</guid>
      <description>学习kafka  学习技术的过程中，我慢慢习惯去官网看看，不管学习什么。从什么时候开始，当我听说，别人讲给的听的感觉，就像人吃东西，然后在喂给你的时候。听着非常恶心。从营养角度来说，吃被人吐出来的东西，营养已经被消化了一部分。
 0x00 开始 kafka的官网 http://kafka.apache.org/ 什么是kafka Apache Kafka是由Apache软件基金会开发的一个开源消息系统项目，由Scala写成。Kafka最初是由LinkedIn开发，并于2011年初开源。2012年10月从Apache Incubator毕业。该项目的目标是为处理实时数据提供一个统一、高通量、低等待的平台。 Kafka是一个分布式的、分区的、多复本的日志提交服务。它通过一种独一无二的设计提供了一个消息系统的功能。
0x01 kafka常用命令 注意
  &amp;amp;保证在关闭shell窗口后能继续运行
  在windows下将.sh改为.bat,“/”改为“\”
  开启ZooKeeper bin/zookeeper-server-start.sh config/zookeeper.properties &amp;amp; 开启kafka服务 bin/kafka-server-start.sh config/server.properties &amp;amp; ps.如果通过终端进入，不要直接关闭终端，使用exit命令关闭，不然会出现kafka进程全部关闭的情况。
创建一个主题 bin/kafka-topics.sh --create --zookeeper localhost:2181 --replication-factor 1 --partitions 1 --topic test 列举主题 bin/kafka-topics.sh --list --zookeeper localhost:2181 发送消息  向主题为test的发送消息，输入字符后回车。  bin/kafka-console-producer.sh --broker-list localhost:9092 --topic test 启动消费者  &amp;ndash;from-beginning 是从开始获取，可以不用该选项，直接从实时消息体获取信息。  bin/kafka-console-consumer.sh --bootstrap-server localhost:9092 --topic test --from-beginning 启动kafka时需要配置的信息  在server.</description>
    </item>
    
    <item>
      <title>begin start learn c language</title>
      <link>https://guobingyi.github.io/blog/begin-start-learn-c-language/</link>
      <pubDate>Mon, 09 Jul 2018 09:18:07 +0800</pubDate>
      
      <guid>https://guobingyi.github.io/blog/begin-start-learn-c-language/</guid>
      <description>C学习笔记  c语言是大学里的入门语言，时隔十多年后，又开始学习。
 0x00 工具 工欲善其事必先利其器。
调试工具 在苹果电脑上直接使用gdb进行调试会存在一定的问题。所以最好的调试环境还是放到了docker上，或者直接使用了vs code 进行调试。因为这种那种的原因，所以最终还是决定使用vs code 进行ide。
 gdb调试
 在苹果系统中gdb调试各种不爽，sudo后也有其他问题；代码签名也有问题。反正就是苹果系统不推荐你使用就行了，别折腾太伤。本来是学习c语言的，绕了一大圈发现会在max os上使用gdb了。
 lldb调试
 苹果系统上推荐使用lldb进行调试c语言。所以想在mac os上调试，就用它吧，别和自己过不去。
IDE  Visual studio code
 微软推出的，免费。
 emacs
 这个不用说了吧，神器。但是，很难！
make  用过ant的都知道，ant是学习make写的。
 要想真正的了解make，还是在于读一遍文档吧。
https://www.gnu.org/software/make/manual/make.pdf 在读一遍陈浩大神的makefile教程。
https://blog.csdn.net/haoel/article/details/2886 这个地址将陈浩大神的帖子整理了一下。
https://blog.csdn.net/weixin_38391755/article/details/80380786 </description>
    </item>
    
    <item>
      <title>Ruby</title>
      <link>https://guobingyi.github.io/code/ruby/</link>
      <pubDate>Wed, 04 Jul 2018 23:21:56 +0800</pubDate>
      
      <guid>https://guobingyi.github.io/code/ruby/</guid>
      <description>Ruby 学习笔记 </description>
    </item>
    
    <item>
      <title>Go</title>
      <link>https://guobingyi.github.io/code/go/</link>
      <pubDate>Wed, 04 Jul 2018 23:21:20 +0800</pubDate>
      
      <guid>https://guobingyi.github.io/code/go/</guid>
      <description>go语言学习笔记 </description>
    </item>
    
    <item>
      <title>初探Shell</title>
      <link>https://guobingyi.github.io/blog/%E5%88%9D%E6%8E%A2shell/</link>
      <pubDate>Wed, 04 Jul 2018 19:54:52 +0800</pubDate>
      
      <guid>https://guobingyi.github.io/blog/%E5%88%9D%E6%8E%A2shell/</guid>
      <description>You got to put the past behind you before you can move on.
 由于项目上的需要开始接触shell，其实shell早就有过接触，只不过这次接触了，深入的思考了。
0x00 为什么用shell? 原来学习一门语言的时候都会这样问自己？但是大多数的答案都是：项目上需要。没有思考的余地，也就没有深入的思考。
现在开始用到，也学习了python,ruby,swift,javascript后发现，shell有她自身更好的发挥余地。比如我们经常会使用的命令cd,hugo server,git add -A等。别小看这些命令，一个一个来，还是要输入一会的。程序员不就图个安逸，一个shell脚本搞定的事情，为什么要多来输入几次呢？在举个例子，如果终端只有一个，那么要看tomcat的日志，还要更新类，那么就会来回的路径下切换，如果不用文本记录下来，光敲路径就花费很长的时间，so，用个shell脚本就可以解决了。当然，这个例子也不能说明shell的强大之处，那么这个例子就是shell的重要用途了。在零部署的时候，需要安装一些组件，数据库，初始化数据库脚本，注册服务，启动服务，关机。整个流程可以说一气呵成，但是如果是人工的话，那么想想工作量也是吓人的，这还不包括部署多台服务器呢。
如果是安装系统，会非常喜欢ghost版本，安装就step by step。而shell就提供了这样功能。当然有人会说python也一样搞定。是的，不可否认，但是如果python自身也需要安装库呢？所以，shell独天得厚的优势在于系统自带的同时，还可以自动安装所需的命令。
结论就是：如果你需要将命令step by step执行，那么就选择shell吧。
0x01 Hello,World! 每个学习程序设计的开始都会是这个，也因为这个才从此入坑。
创建文件hello.sh,输入一下内容：
#!/bin/bash echo &#39;Hello.World!&#39; 在终端中使用sh hello.sh,将输出以下结果：
Hello,World! 恭喜你，入门了。
思考：
 为什么第一行会有个#!/bin/bash echo 可以用单引号，也可以用双引号，区别是什么？ 如果要让shell脚步可以直接运行，怎么做？ 如何文件后缀是php,那么有该如何做呢？  0x02 变量 shell的变量命令基本和常用语言(pythoh/ruby/java/go)基本差不多，目前还没有遇到过坑。
那么如何定义一个变量呢？ someone=&amp;quot;Lee&amp;quot; some_two=&amp;quot;http://10.10.10.222&amp;quot; 看似简单的定义变量，如果写多了程序，就会有个问题，如下：
someone = &amp;quot;Lee&amp;quot; #Eroor 为什么会有这个错误，因为写代码的时候都喜欢来个空格，这样看着顺眼些，但是在shell里是错误的。因为变量名和等号之间不能有空格。
变量名和等号之间不能有空格。
变量名和等号之间不能有空格。
变量名和等号之间不能有空格。
重要的事情说三遍，你要知道调试shell，就像java里System.out.println(&amp;ldquo;ok&amp;rdquo;)一样麻烦，更何况shell木有断点功能。目前我还不知道shell的ide，或者打断点，如果你知道，请告诉我，让我试试。
使用变量 $someone $(some_two) 只读变量 readonly someone 删除变量 unset someone 0x03 字符串 单引号 someone=&#39;Lee&#39;   单引号里的任何字符都会原样输出，单引号字符串中的变量是无效的；</description>
    </item>
    
    <item>
      <title>倚天屠龙记读后感</title>
      <link>https://guobingyi.github.io/blog/%E5%80%9A%E5%A4%A9%E5%B1%A0%E9%BE%99%E8%AE%B0%E8%AF%BB%E5%90%8E%E6%84%9F/</link>
      <pubDate>Sun, 24 Jun 2018 22:11:31 +0800</pubDate>
      
      <guid>https://guobingyi.github.io/blog/%E5%80%9A%E5%A4%A9%E5%B1%A0%E9%BE%99%E8%AE%B0%E8%AF%BB%E5%90%8E%E6%84%9F/</guid>
      <description>个性，决定了一个人未来能走多远。
 金庸的小说一直都是自己喜欢的。从高中开始，读的第一本书是《鹿鼎记》，那个时候是老师要求读的，原来都不知道有金庸这个人。从此一发不可收拾，开始追读金庸的小说。到大学的时候，由于金庸的小说有限，所以一直省着读。工作后，读了《笑傲江湖》，近期读了《倚天屠龙记》。
张无忌这个人的角色，开始就是一个悲情的角色。让人从开始就非常心疼他，关心他。正所谓，天无绝人之路，掉进山洞，学到了九阳真经。治好了自己体内的玄冰之毒，而且也学到了上乘武功。从这里开始，大家都觉得应该是登山人生巅峰。可是，如果这样小说就没有太多意义了。人性贯穿到金庸的小说中，都是宣扬着“正气”，而要突出这些“正气”，就要从多个方面来说明。真善美，假恶臭。在小说中，这几个人被刻画的非常形象生动。
 张三丰  张三丰，一个小和尚，自己开创了武当门派。或许，也只有大师才能有如此的造诣。对待生活的态度，不是一板一拍；对待世间的事，也不是循规蹈矩。当然，武功上的造诣，更是独自悟道，发明了太极心法。
 谢逊  爱恨分明，敢作敢当。对家人的爱，超出你的想象。聪明，不是说出来的。
 小昭  如果说要和张无忌比惨的话，小昭算一个。能这样忍辱负重，并最后实现人生目标的人，真的，厉害。
 周芷若  我竟然自己想到了周芷若的剧情，想她应该是前朝皇帝的女儿才这样希望张无忌能掌管大权的。其实，我真的想多了。
 赵敏  手段不是一般的厉害，和张无忌的妈妈有得一拼。因为电影了，演员是同一个赵敏，所以这两个角色真是难分，同时也感慨张敏的演的真好。
在小说中，每个人物都刻画的非常深刻。或许也只有金庸才能将这些人物写的那么鲜活。</description>
    </item>
    
    <item>
      <title>Think</title>
      <link>https://guobingyi.github.io/blog/think/</link>
      <pubDate>Fri, 22 Jun 2018 09:41:18 +0800</pubDate>
      
      <guid>https://guobingyi.github.io/blog/think/</guid>
      <description>想法很多  自从没有在游戏上花费太多的时间，现在想法也很多。
 1.用hugo搭建自己的博客 现在已经使用了，但是感觉样式不怎么好看，慢慢在来改了。
不管怎么说，一切的开始，虽然难，但是都在前进就好！
2.用docker中的centos来搭建开发环境 因为自己的系统是macos，所以很多代码不一定能跑起来，比如dbdk。所以就想用docker的方式来搭建一个开放平台，这样即使换了电脑或则系统，都可以使用docker把镜像导入进来。思路而已，还要考虑的问题如下：
  如何将镜像进行备份和同步；
初步的想法是docker将镜像导出，然后git到github上进行存储。但是这些都是需要压缩和加密的。
  如何将实体机的开发环境弱化；
目前的开发环境都在本机的实体机上，所以想要弱化就必须考虑到一些开发ide，比如java的eclipse。想到用eclipse che来替代，就看docker是否能支持的好了。
  3.尝试着写本书 这个就是一个伏笔了，希望能带来惊喜。当然，这个仅仅是生活的一部分，如果依赖就抱有太大的希望，就太给自己压力了。
先学着写吧。
4.科技改变生活 我觉得先从自己的生活改变开始，让自己的工作效率更高。为了达到这边目标，先从以下几点做起：
 使用shell脚本，将自己常用的命令进行一个封装； 将一些程序中经常使用的工具进行汇总，供shell脚本使用； 自己编写代码，提供没有的工具。  </description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://guobingyi.github.io/about/</link>
      <pubDate>Fri, 22 Jun 2018 09:36:13 +0800</pubDate>
      
      <guid>https://guobingyi.github.io/about/</guid>
      <description>别人笑我太疯癫，我笑他人看不穿。
技能
 Java golang python ruby c/c++  </description>
    </item>
    
    <item>
      <title>Contact</title>
      <link>https://guobingyi.github.io/contact/</link>
      <pubDate>Fri, 22 Jun 2018 09:23:35 +0800</pubDate>
      
      <guid>https://guobingyi.github.io/contact/</guid>
      <description>怎么联系我，邮箱吧！
但是，不一定回。 ：）</description>
    </item>
    
    <item>
      <title>Think</title>
      <link>https://guobingyi.github.io/post/think/</link>
      <pubDate>Thu, 21 Jun 2018 18:52:37 +0800</pubDate>
      
      <guid>https://guobingyi.github.io/post/think/</guid>
      <description>想法很多  自从没有在游戏上花费太多的时间，现在想法也很多。
 1.用hugo搭建自己的博客 现在已经使用了，但是感觉样式不怎么好看，慢慢在来改了。
不管怎么说，一切的开始，虽然难，但是都在前进就好！
2.用docker中的centos来搭建开发环境 因为自己的系统是macos，所以很多代码不一定能跑起来，比如dbdk。所以就想用docker的方式来搭建一个开放平台，这样即使换了电脑或则系统，都可以使用docker把镜像导入进来。思路而已，还要考虑的问题如下：
  如何将镜像进行备份和同步；
初步的想法是docker将镜像导出，然后git到github上进行存储。但是这些都是需要压缩和加密的。
  如何将实体机的开发环境弱化；
目前的开发环境都在本机的实体机上，所以想要弱化就必须考虑到一些开发ide，比如java的eclipse。想到用eclipse che来替代，就看docker是否能支持的好了。
  3.尝试着写本书 这个就是一个伏笔了，希望能带来惊喜。当然，这个仅仅是生活的一部分，如果依赖就抱有太大的希望，就太给自己压力了。
先学着写吧。
4.科技改变生活 我觉得先从自己的生活改变开始，让自己的工作效率更高。为了达到这边目标，先从以下几点做起：
 使用shell脚本，将自己常用的命令进行一个封装； 将一些程序中经常使用的工具进行汇总，供shell脚本使用； 自己编写代码，提供没有的工具。  </description>
    </item>
    
    <item>
      <title>About Me</title>
      <link>https://guobingyi.github.io/about_old/</link>
      <pubDate>Tue, 19 Jun 2018 22:28:42 +0800</pubDate>
      
      <guid>https://guobingyi.github.io/about_old/</guid>
      <description> 别人笑我太疯癫，我笑他人看不穿。
 喜欢程序设计，致力于将终身奉献给程序设计。
 talk is cheap,show me the code! </description>
    </item>
    
    <item>
      <title>Config</title>
      <link>https://guobingyi.github.io/post/config/</link>
      <pubDate>Sat, 16 Jun 2018 00:00:56 +0800</pubDate>
      
      <guid>https://guobingyi.github.io/post/config/</guid>
      <description>看一下hugo的配置  当初觉得为什么hugo可以比beego那么多star,现在可以理解了。
 因为用go开发web的人，没有使用hugo创建自己博客的多。
来一个图片的例子：</description>
    </item>
    
    <item>
      <title>One</title>
      <link>https://guobingyi.github.io/post/one/</link>
      <pubDate>Fri, 15 Jun 2018 23:50:17 +0800</pubDate>
      
      <guid>https://guobingyi.github.io/post/one/</guid>
      <description>测试为什么图像没有  原来都有的，现在没有？
 我觉得就是哪里配置的问题。
** 粗体 **</description>
    </item>
    
    <item>
      <title>Good</title>
      <link>https://guobingyi.github.io/post/good/</link>
      <pubDate>Fri, 15 Jun 2018 23:45:20 +0800</pubDate>
      
      <guid>https://guobingyi.github.io/post/good/</guid>
      <description>测试一下中文是否支持 </description>
    </item>
    
    <item>
      <title>Test</title>
      <link>https://guobingyi.github.io/post/test/</link>
      <pubDate>Fri, 15 Jun 2018 23:31:47 +0800</pubDate>
      
      <guid>https://guobingyi.github.io/post/test/</guid>
      <description>Test my blog  new day will come,wzry go away!
 </description>
    </item>
    
    <item>
      <title>Newday</title>
      <link>https://guobingyi.github.io/post/newday/</link>
      <pubDate>Fri, 15 Jun 2018 23:30:41 +0800</pubDate>
      
      <guid>https://guobingyi.github.io/post/newday/</guid>
      <description>Hello,Hugo! </description>
    </item>
    
  </channel>
</rss>