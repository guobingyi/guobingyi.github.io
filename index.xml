<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Just Do it on guobingyi</title>
    <link>https://guobingyi.github.io/</link>
    <description>Recent content in Just Do it on guobingyi</description>
    <generator>Hugo</generator>
    <language>zh-cn</language>
    <lastBuildDate>Fri, 25 Jul 2025 19:33:23 +0800</lastBuildDate>
    <atom:link href="https://guobingyi.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>猎金游戏</title>
      <link>https://guobingyi.github.io/movie/agildedgame/</link>
      <pubDate>Fri, 25 Jul 2025 19:33:23 +0800</pubDate>
      <guid>https://guobingyi.github.io/movie/agildedgame/</guid>
      <description>&lt;h1 id=&#34;猎金游戏&#34;&gt;猎金游戏&lt;/h1&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;刘德华，我喜欢的男影星之一。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://guobingyi.github.io/img/movie/A-Gilded-Game.webp&#34; alt=&#34;猎金游戏&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;推荐指数：⭐️⭐️⭐️⭐️&lt;/p&gt;&#xA;&lt;p&gt;同样的剧情可以演绎一个世纪。&lt;/p&gt;&#xA;&lt;p&gt;开始的剧情以为讲股票，中间的剧情以为讲职场，最后的剧情以为讲人性。都不对，怎么来看这部剧，就是太无奈。&lt;/p&gt;&#xA;&lt;p&gt;开始讲实习生的时候，特别感受到职场的不易。很能感受到一个初入职场的人，要关系没有关系，要能力没有能力，就是一个小白。但是，好在自己的为人，朋友的父亲帮助了高寒。一个小镇来的，父母都是靠卖水为生。自己的女朋友为了自己的衣服而变卖包包，想起和老婆在出租房的日子，我很能理解高寒为什么出卖师傅，和李海伦走在了一起。从马总让自己出卖自己，到底线的守住，吃狗食，被骗，到最后逐步成熟。当然了，高寒和李海伦睡了，这个真的无语啊，难道，高层的关系真的那么乱？我到是想有这样的机会🤣，可是能力不允许啊，哈哈。&lt;/p&gt;&#xA;&lt;p&gt;出卖师傅这个的前提是让女朋友过上好生活，这个人之常情，张托德的确是位好师傅，可是，一切都好像那么合理，就是不合理。以命相求，也是没有办法，要么成功，要么失败。好在，张托德是个好人。&lt;/p&gt;&#xA;&lt;p&gt;股票这种东西，真的不缺乏好多“傻子”的参与。不是说“傻子”对人都有什么偏见，但是真的，“傻子”才会那么执迷，那么喜欢听别人的意见，没有独立思考。因为股票可以实现财务自由，因为股票不需要和人打交道，因为股票操作简单，但是股票的对手是谁？是大资金，机构，游资，都是武装到牙齿的对手，凭什么你能赢？如果，股市真的那么好赚钱，那么，其他行业都要倒闭。可是，真的是这样的吗？许多人想都不想就离开了，但是总有一部分人选择留下来，毕竟，来钱真的快，当然，亏钱也是真的快。电影里谈的少，毕竟，市场还需要源源不断的韭菜。小赌怡情，大赌伤身。&lt;/p&gt;&#xA;&lt;p&gt;最后的结局当然是好人战胜坏人，皆大欢喜。&lt;/p&gt;&#xA;&lt;p&gt;我看电影的时间是自己“争取“的时间，什么是最好的陪伴，在需要的时候给与,在不需要的时候，自己照顾好自己。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Php Code</title>
      <link>https://guobingyi.github.io/code/php-code/</link>
      <pubDate>Thu, 24 Jul 2025 20:13:23 +0800</pubDate>
      <guid>https://guobingyi.github.io/code/php-code/</guid>
      <description>&lt;h1 id=&#34;php-语言&#34;&gt;PHP 语言&lt;/h1&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;PHP，即 PHP: Hypertext Preprocessor，是一种被广泛应用的开源通用脚本语言，尤其适用于 Web 开发并可嵌入 HTML 中去。它的语法利用了 C、Java 和 Perl，易于学习。该语言的主要目标是允许 web 开发人员快速编写动态生成的 web 页面，但 PHP 的用途远不只于此。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;如果你觉得我是在记录学习 PHP 语言，那么你错了。&lt;/p&gt;&#xA;&lt;p&gt;我喜欢各种语言倒腾，兴趣索然。&lt;/p&gt;&#xA;&lt;p&gt;在一段时间之后，我觉得我需要安装 php 语言来玩一下，结果在安装的过程中出现了很多问题，出钱就可以搞定的，可是在代码方面，我的信仰就是 free is better!那么，就开始说说，为什么那么难。&lt;/p&gt;&#xA;&lt;p&gt;我使用苹果电脑，但是系统是 12 的，所以连 brew 都发出了警告。&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Warning: You are using macOS 12.&#xA;We (and Apple) do not provide support for this old version.&#xA;&#xA;This is a Tier 3 configuration:&#xA;  https://docs.brew.sh/Support-Tiers#tier-3&#xA;You can report Tier 3 unrelated issues to Homebrew/* repositories!&#xA;Read the above document instead before opening any issues or PRs.&#xA;&lt;/code&gt;&lt;/pr</description>
    </item>
    <item>
      <title>极速追杀:芭蕾杀姬</title>
      <link>https://guobingyi.github.io/movie/jszsblsj/</link>
      <pubDate>Tue, 08 Jul 2025 19:50:35 +0800</pubDate>
      <guid>https://guobingyi.github.io/movie/jszsblsj/</guid>
      <description>&lt;h2 id=&#34;极速最杀芭蕾杀姬&#34;&gt;极速最杀:芭蕾杀姬&lt;/h2&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;基努·里维斯，我喜欢的男影星之一。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://guobingyi.github.io/img/movie/jszswz.webp&#34; alt=&#34;极速追杀:芭蕾杀姬&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;推荐指数：⭐️⭐️⭐️⭐️&lt;/p&gt;&#xA;&lt;p&gt;极速追杀全都追完了，也不知道后面还能讲点啥。好吧，来了，这部电影是外传，毕竟前面的主角也一个一个挂了，都不知道怎么延续下去了，开始外传来了。&lt;/p&gt;&#xA;&lt;p&gt;开始，我觉得约翰的组织已经够厉害了，结果团长说杀害伊芙父亲的组织更厉害，他们已杀人为乐趣。让我对这个组织怀有不一样的想法，结果，这个组织就在一个镇上，真的是全镇恶人。&lt;/p&gt;&#xA;&lt;p&gt;电影的套路就是很老套，父母被杀，女儿手刃仇家。但是，可以看出，这次的阵容有点像推新人一样，比如我们的努哥，不是基努·里维斯，而是《行尸走肉》上的努哥。&lt;/p&gt;&#xA;&lt;p&gt;电影也弥补了约翰的组织是怎么培训杀手的，或许，后面的都讲完了，可以讲讲以前的了。&lt;/p&gt;&#xA;&lt;p&gt;总体来说，看着挺过瘾的，毕竟女杀手不是用力量取胜，而是用自己的优势来取胜，说的挺好的。&lt;/p&gt;&#xA;&lt;p&gt;带娃的时间总是很充实，忙里偷闲，看看电影也是放松。&lt;/p&gt;</description>
    </item>
    <item>
      <title>我叫赵甲第</title>
      <link>https://guobingyi.github.io/movie/wojiaozjd/</link>
      <pubDate>Thu, 05 Jun 2025 21:45:22 +0800</pubDate>
      <guid>https://guobingyi.github.io/movie/wojiaozjd/</guid>
      <description>&lt;h1 id=&#34;我叫赵甲第&#34;&gt;我叫赵甲第&lt;/h1&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;相濡以沫，但是不要相忘于江湖。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://guobingyi.github.io/img/movie/zjd.webp&#34; alt=&#34;zjd&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;虽然套路都是一样的，但是总能弥补心里缺少的东西。&lt;/p&gt;&#xA;&lt;p&gt;这部电视剧，可以说一个镜头，追了一部剧。或许，我也是姐姐们带大的，所以提别能感受姐姐们的爱。&lt;/p&gt;&#xA;&lt;p&gt;可以这样说，电视剧的剧情就是恩怨情，带着点让自己弥补不能当老大的感觉。不过，男主赵甲第的确演的不错，左手右手都能夹菜，右手写的字也不错。&lt;/p&gt;&#xA;&lt;p&gt;最后，就是感谢能有时间看电视剧，或许，人总得有点乐子，记得自己是来体验生活的。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Backtowork</title>
      <link>https://guobingyi.github.io/blog/backtowork/</link>
      <pubDate>Tue, 03 Jun 2025 17:21:13 +0800</pubDate>
      <guid>https://guobingyi.github.io/blog/backtowork/</guid>
      <description>&lt;h1 id=&#34;重回工作&#34;&gt;重回工作&lt;/h1&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;是时候开始下半场了&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;一直都没有想过会有这样的人生，套用一个广告词就是，“已经开始了吗？已经结束了。”&lt;/p&gt;&#xA;&lt;p&gt;孩子们 9 月份要上幼儿园了，面临着自己要重新回到工作岗位上。可是，自己的年龄已经到了找不到工作的时期。&lt;/p&gt;&#xA;&lt;p&gt;该做点什么呢？&lt;/p&gt;&#xA;&lt;p&gt;我有时会不断的问自己？我的后半场，该如何演绎？我是否会继续写代码？我是不是像别人一样去开网约车？当然了，有无数种可能。&lt;/p&gt;&#xA;&lt;p&gt;我曾经以为我的代码水平会直线的下降，对未知感到无力感，比如说，最近的一次使用了 brew 进行升级 ffmpeg 软件，由于自己的电脑是 2015年 9 月份购买的，所以已经有许多软件都不进行支持了，可我依然那么喜欢最新的软件版本。brew 已经提示了，可我依然我行我素，导致 ffmpeg 卸载了，重新安装一个插件的时候，居然报错了，而且需要代理才能更新，我的 VPN 已经过期了。无奈啊，lux 下载小朋友们要看的视频需要 ffmpeg 合并视频，老婆有时需要分割视频，这些都不能做了。我思考了许久，正当要考虑购买 VPN 的时候，发现 ffmpeg 居然有编译好的，直接下载下来就可以用。这个想法来自于 nodejs 项目，因为我的电脑已经老到不能使用 brew 进行更新了，所以抱着试试的态度。直接使用安装包下载，安装成功后，我就开始考虑是不是ffmpeg 也可以呢。&lt;/p&gt;&#xA;&lt;p&gt;接到云舒的电话，让帮忙看一下主流后端开发框架对比：芋道（魔改牛氓）、若依、Jeesite、JeecgBoot与SmartAdmin。就这样开始了。&lt;/p&gt;&#xA;&lt;p&gt;在此之前，因为 VPN 的问题， github.com 也不可以访问了，所以自己的博客也没有继续更新了。但是，问了 trae 后，说把 DNS解析变成 8.8.8.8，噢耶，居然可以了。感谢，不封之恩。&lt;/p&gt;&#xA;&lt;p&gt;首先，既然是 java 项目，那么就下载 eclipse，像 Jetbrain 这样的IDE，电脑使用起来卡顿，所以就放弃了。eclipse 是走入 Java 殿堂的首款 IDE。工作许多年来，一直都在用，唯独有偶，熟悉。&#xA;&lt;img src=&#34;https://guobingyi.github.io/img/code/eclipse.png&#34; alt=&#34;eclipse&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;其次，都是 mysql 的项目，已经不能在使用 sqlite 了。下载了mysql-9.3.0-macos15-x86_64.tar.gz的版本，加入了系统变量。&lt;/p&gt;</description>
    </item>
    <item>
      <title>New_live</title>
      <link>https://guobingyi.github.io/blog/new_live/</link>
      <pubDate>Thu, 01 May 2025 23:00:56 +0800</pubDate>
      <guid>https://guobingyi.github.io/blog/new_live/</guid>
      <description>&lt;h1 id=&#34;新的居住地&#34;&gt;新的居住地&lt;/h1&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;即使一切都已经发生，我也习惯，不再流泪。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://guobingyi.github.io/img/xi_an.jpeg&#34; alt=&#34;西安&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;最近搬家了。其实很无奈的，自己的生活变成了如此。感到很无力。&lt;/p&gt;&#xA;&lt;p&gt;新的家是老婆一手装修的。我在忙着寻找一条新的出路，就是股票。我想通过股票来改变自己的生活状态，虽然没有想到要一夜暴富，但是也曾表现出来了贪婪，但是想到周星驰演的《上海滩赌神》上，对丁力说的，“我的最后一个愿望，就是要三个愿望“。所以，贪婪，是人类的进步动力。&lt;/p&gt;&#xA;&lt;p&gt;新的家有新的家的好处，也有坏处。但是，生活变的如此，也只能欣然的面对。&lt;/p&gt;&#xA;&lt;p&gt;问题是，现在的情况已经很原来有很多不同的地方。&lt;/p&gt;&#xA;&lt;p&gt;我很想对老婆说声谢谢，可惜所有的一切都那么的无力。我们许久没有能静静的谈一下，我们的所有谈话，都会指责对方，特别老婆所说的恨。恨我没有能帮助她，没有能按照她说想的帮助她，和她一起为这个家做点什么。我甚至都不知道如何去帮助她，我还在沉迷于自己的世界？不，不，不，我没有。&lt;/p&gt;</description>
    </item>
    <item>
      <title>某物质</title>
      <link>https://guobingyi.github.io/movie/something/</link>
      <pubDate>Thu, 21 Nov 2024 08:58:58 +0800</pubDate>
      <guid>https://guobingyi.github.io/movie/something/</guid>
      <description>&lt;h1 id=&#34;某种物质&#34;&gt;某种物质&lt;/h1&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;当你凝视深渊的时候，深渊也在凝视你。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://guobingyi.github.io/img/movie/something.webp&#34; alt=&#34;某种物质&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;推荐指数：⭐️⭐️⭐️⭐️&lt;/p&gt;&#xA;&lt;p&gt;话说，你需要什么的时候，就需要用什么来交换。电影里的女明星，为了让自己永保年轻，意外的获得了一种物质，这种药水可以将自己copy一份，成为新的自我。我不知道，虽然只是拷贝，而且没有自己的意识，图什么呢？为了让新的拷贝重新获取曾经自己未能获取的成就？那还是自己吗？最最受不了的是，新拷贝为了能多几天的时间，而使本体受损，而本体居然没有放弃，继续。当损失最小的时候，没有制止，而是继续，最终被拷贝终结，好讽刺。&lt;/p&gt;&#xA;&lt;p&gt;场面还是比较血腥的，而且尺度比较大，青春荷尔蒙。&lt;/p&gt;</description>
    </item>
    <item>
      <title>浴火之路</title>
      <link>https://guobingyi.github.io/movie/yhzl/</link>
      <pubDate>Tue, 19 Nov 2024 22:51:04 +0800</pubDate>
      <guid>https://guobingyi.github.io/movie/yhzl/</guid>
      <description>&lt;h1 id=&#34;浴火之路&#34;&gt;浴火之路&lt;/h1&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;又一部揪心的电影。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://guobingyi.github.io/img/movie/yhzl.webp&#34; alt=&#34;浴火之路&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;推荐指数：⭐️⭐️⭐️&lt;/p&gt;&#xA;&lt;p&gt;最近看到肖央的消息，发现他又出了一部电影，叫浴火之路。&lt;/p&gt;&#xA;&lt;p&gt;带着想看一看的感觉，就开始了。&lt;/p&gt;&#xA;&lt;p&gt;开始没有想到会是这样的一部电影，讲小孩被拐的故事。揪心，非常的压抑。最早看到小孩被拐的电影是刘德华演的《失孤》，很冲击的画面是刘德华问老僧，是否可以找到自己的孩子的时候，老僧回答：“找，缘起；不找，缘灭。”当时很痛心，找孩子的过程让刘德华时而看到希望，时而又失望，看着非常难受。而这部电影里却是另外的一个感受，一个爸爸了找到孩子了，但是发现孩子死了，直接跳下高速路。没有当过家长的，无法体会到，这一份揪心。所以，基本上就不适合，没有当家长的看，因为打斗啊，床戏啊，我觉得都没有什么感觉。&lt;/p&gt;&#xA;&lt;p&gt;对于人贩子，我觉得最搞笑的一幕就是被雷给劈死了。搞笑是搞笑，但是也人大家过瘾了一把。第二个就是儿子被认为是智障，最后连人贩子的老大，也很孩子一起死在了他们曾经对待来找孩子的父母的方式，搅拌机中的泥浆，将人给封死了。怎么说呢？我觉得一切的原因，都是因为有买卖，但是这个问题又无法解决。&lt;/p&gt;&#xA;&lt;p&gt;结局有好的一面，也有不好的一面。正如，所有的事情都不可能圆满，但是都从好的方面发展。&lt;/p&gt;</description>
    </item>
    <item>
      <title>飞驰人生2</title>
      <link>https://guobingyi.github.io/movie/fcrs2/</link>
      <pubDate>Sun, 02 Jun 2024 19:46:50 +0800</pubDate>
      <guid>https://guobingyi.github.io/movie/fcrs2/</guid>
      <description>&lt;h2 id=&#34;飞驰人生2&#34;&gt;飞驰人生2&lt;/h2&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;韩寒作品。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://guobingyi.github.io/img/movie/fcrs2.webp&#34; alt=&#34;飞驰人生2&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;电影给我的最大感受就是，不要留有遗憾。&lt;/p&gt;&#xA;&lt;p&gt;最近，总喜欢去做一些原来不做的事情。这样导致我总会有不一样的体验和感受。看到电脑的空间有点尴尬，所以想清理一下磁盘，可是好像没有什么可以删除的，只能删电影，准备将电脑中原来下的电影删除一些，发现都没有看过，找到了《飞驰人生2》，我以为韩寒在电影中出演，所以想看一看。&lt;/p&gt;&#xA;&lt;p&gt;电影中，没有爱情，没有太多的儿女情长，更多的是对自己的救赎。叶经理可以在比赛中持续拿奖，除了积聚了大量的优秀车手，还对比赛的举办方有着联系。对于我们普通人来说，想要成功是真的不可能的。所以，就有英雄的出现。这个社会需要英雄。&lt;/p&gt;&#xA;&lt;p&gt;电影中有几个地方给我印象深刻，第一是，当跌落神坛的张弛，和普通人一样，都是为了碎银几两。但是，当心底最初的梦想被唤醒，就不要留有遗憾。第二是，刘显德，驾照考不了，但是确实一名很棒的导航员。第三是小海，试车员，虽然父亲是厂长，但是他凭借自己的努力，实现了自己的梦想。第四是，孙宇强和记星，他们是张弛的铁三角，或许人生就是得一二知己，足以。&lt;/p&gt;&#xA;&lt;p&gt;最后，还是想说，不要留有遗憾。为国产电影点赞，这些年，越来越好看了！&lt;/p&gt;</description>
    </item>
    <item>
      <title>使用moviepy进行电影剪辑</title>
      <link>https://guobingyi.github.io/code/moviepy/</link>
      <pubDate>Thu, 11 Apr 2024 18:53:53 +0800</pubDate>
      <guid>https://guobingyi.github.io/code/moviepy/</guid>
      <description>&lt;h1 id=&#34;使用moviepy进行电影剪辑&#34;&gt;使用moviepy进行电影剪辑&lt;/h1&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;退一步，海阔天空！&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;有个执念，总想比一下到底谁最快，python/c#/go/rust/java。但是，现实告诉我，谁能快速的解决问题，就够了。&lt;/p&gt;&#xA;&lt;p&gt;最近，老婆的工作要进行视频剪辑，老师推荐了剪影，可是呢？有水印，要充VIP，我一看，就答应了帮老婆来干这个事情。满怀信心的打开PR，发现自己已经不会用了。🤣这可咋办呢？问了一下文心一言，在chatGPT3.5还没有免费的时候，文心一言还是比较好用的。文心一言告诉我有个moviepy的库，好的用一下。&lt;/p&gt;&#xA;&lt;p&gt;以下是文心一言给的代码，蛮不错。&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;from moviepy.editor import VideoFileClip  &#xA;  &#xA;# 加载视频文件  &#xA;clip = VideoFileClip(&amp;#34;my_video.mp4&amp;#34;)  &#xA;  &#xA;# 剪辑视频，从第10秒到第20秒  &#xA;subclip = clip.subclip(10, 20)  &#xA;  &#xA;# 写入剪辑后的视频文件  &#xA;subclip.write_videofile(&amp;#34;my_subclip.mp4&amp;#34;)&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;用下来，每次都要自己算一下时间，所以自己又写了一个。&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;from moviepy.editor import VideoFileClip  &#xA;  &#xA;# 加载视频文件  &#xA;video = VideoFileClip(&amp;#34;demo.mp4&amp;#34;)  &#xA;  &#xA;# 剪辑视频，设置开始和结束时间（单位为秒）  &#xA;# 这里假设我们想要剪辑从第5秒到第15秒的部分&#xA;# 16:40 ~ 21:21 &#xA;# 24:30 ~ 26:00&#xA;# 33:00 ~ 33:47&#xA;# 39:00~ 43:00&#xA;# 47:30 ~ 57:00&#xA;# 58:10 ~ 1:00:02&#xA;# 1:04:40 ~ 1:07:10&#xA;# 1:13:00 ~ 1:18:42&#xA;# 1:19:18 ~ 1:23:40&#xA;s_h = 1&#xA;s_min = 19&#xA;s_sec = 18&#xA;&#xA;e_h = 1&#xA;e_min = 23&#xA;e_sec = 40&#xA;&#xA;start_time = s_h * 60 * 60 + s_min * 60 + s_sec&#xA;end_time = e_h * 60 * 60 + e_min * 60 + e_sec&#xA;#print( &amp;#39;Start time :&amp;#39;,start_time)&#xA;#print( &amp;#39;End time :&amp;#39;,end_time)&#xA;subclip = video.subclip(start_time, end_time)  &#xA;  &#xA;# 写入剪辑后的视频到新的文件  &#xA;subclip.write_videofile(&amp;#34;output_08.mp4&amp;#34;, codec=&amp;#39;libx264&amp;#39;)&#xA;&lt;/code&gt;&lt;/pr</description>
    </item>
    <item>
      <title>Exe_sigle_file</title>
      <link>https://guobingyi.github.io/blog/exe_sigle_file/</link>
      <pubDate>Mon, 01 Apr 2024 09:52:16 +0800</pubDate>
      <guid>https://guobingyi.github.io/blog/exe_sigle_file/</guid>
      <description>&lt;h1 id=&#34;单文件部署&#34;&gt;单文件部署&lt;/h1&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;你能改变的就是你自己。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;对于Java和C#最让我感觉到比go最没有可比性的一点就是，go直接就编译成本地二进制文件了，少了保护代码而需要做的混淆操作。但是，现在Java和C#都可以了。当然，如果用mojo后，python也可以了。&lt;/p&gt;&#xA;&lt;h2 id=&#34;01java编译成可执行二进制文件&#34;&gt;01.Java编译成可执行二进制文件&lt;/h2&gt;&#xA;&lt;p&gt;Java编译成二进制的模式来源于GraalVM的操作。&lt;/p&gt;&#xA;&lt;p&gt;例子来源于&lt;a href=&#34;https://www.graalvm.org/&#34;&gt;GraalVM官网&lt;/a&gt;。&lt;/p&gt;&#xA;&lt;p&gt;一个HelloWorld的例子。&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;public class HelloWorld {&#xA;  public static void main(String[] args) {&#xA;    System.out.println(&amp;#34;Hello, World!&amp;#34;);&#xA;  }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;首先，编译java文件。&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;javac HelloWorld.java&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;其次，编程成本地二进制可执行程序。&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;native-image HelloWorld&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;最后，运行。&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;./helloworld&#xA;Hello, World!&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;02c编译成可执行二进制&#34;&gt;02.C#编译成可执行二进制&lt;/h2&gt;&#xA;&lt;p&gt;C#现在越来越流行，假以时日，或许可以和Java完全抗衡。&lt;/p&gt;&#xA;&lt;p&gt;(单从语音本身来说，c#已经超越了java,可是社区却还有很远的路要走)&lt;/p&gt;&#xA;&lt;p&gt;单文件部署对C#来说也很简单。&lt;/p&gt;&#xA;&lt;p&gt;首先，在修改项目文件csproj。&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;lt;Project Sdk=&amp;#34;Microsoft.NET.Sdk.Web&amp;#34;&amp;gt;&#xA;  &amp;lt;PropertyGroup&amp;gt;&#xA;    &amp;lt;RuntimeIdentifiers&amp;gt;osx-x64&amp;lt;/RuntimeIdentifiers&amp;gt;&#xA;    &amp;lt;PublishSingleFile&amp;gt;true&amp;lt;/PublishSingleFile&amp;gt;&#xA;    &amp;lt;SelfContained&amp;gt;true&amp;lt;/SelfContained&amp;gt;&#xA;    &amp;lt;OutputType&amp;gt;Exe&amp;lt;/OutputType&amp;gt;&#xA;  &amp;lt;/PropertyGroup&amp;gt;&#xA;&amp;lt;/Project&amp;gt;&#xA;&lt;/code&gt;&lt;/pr</description>
    </item>
    <item>
      <title>Ollama</title>
      <link>https://guobingyi.github.io/blog/ollama/</link>
      <pubDate>Sun, 24 Mar 2024 21:58:27 +0800</pubDate>
      <guid>https://guobingyi.github.io/blog/ollama/</guid>
      <description>&lt;h1 id=&#34;ollama&#34;&gt;Ollama&lt;/h1&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;ia is so close!&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;第一次接触chatGPT的时候，被注册劝退了。朋友推荐了Cursor，感觉也还不错，但是就是每月都会有所限制，并且代码质量也不很高。&lt;/p&gt;&#xA;&lt;p&gt;现在，用文心一言，感觉还不错，毕竟国产的，理解起来比较好，所以一直都在用，目前没有出现什么问题。&lt;/p&gt;&#xA;&lt;p&gt;昨天，看到了Ollama的微信号推荐，就下载来玩了玩。&lt;/p&gt;&#xA;&lt;p&gt;下载Ollama相当的简单，直接冲&lt;a href=&#34;https://ollama.com/&#34;&gt;官网&lt;/a&gt;下载。&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;https://ollama.com/&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;因为电脑比较老，所以就只能下载了一个最小的model。&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;ollama pull codellama:7b-code&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;启动服务。&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;ollama serve&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;测试服务。&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;ollama run codellama:7b-code &amp;#39;You are an expert programmer that writes simple, concise code and explanations. Write a python function to generate the nth fibonacci number.&amp;#39;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;感觉很不错，可惜不能使用中文，哈哈，是自己想多了。如果不是自己的电脑怒吼的话，或许可以玩一玩，所以再次删除了。&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;rm -rf ~/.ollama&#xA;&lt;/code&gt;&lt;/pr</description>
    </item>
    <item>
      <title>switch 更新</title>
      <link>https://guobingyi.github.io/blog/switch-%E6%9B%B4%E6%96%B0/</link>
      <pubDate>Mon, 15 Jan 2024 20:50:07 +0800</pubDate>
      <guid>https://guobingyi.github.io/blog/switch-%E6%9B%B4%E6%96%B0/</guid>
      <description>&lt;p&gt;Switch大气层升级&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;害怕会失去曾经拥有的，所以，迟迟不敢动手。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;在购买了switch后，一直都沉浸于游戏中，毕竟游戏带给自己太多的回忆。  突然发现，这样一直下去买卡的钱会让自己陷入一个无尽的循环，所以一念之间，购入了一台破解的switch，这样就可以多玩一些游戏了。想法总是好的，但是我还是购入了一些正版的游戏，毕竟喜欢。&lt;/p&gt;&#xA;&lt;p&gt;破解的switch游戏机，默认安装了大气层的1.5版本，而且有个问题就是一张卡玩一段时间总会出现不可以用的状态，必须把正在完的卡复制到不玩的卡上，我怀疑是哪里设置过，但是没有没有深究，毕竟拷贝覆盖一下就可以，所以就没有弄，现在问题来了，想玩《荒野大镖客：救赎》需要1.6.1版本的大气层，而最近有点时间。那就开干吧，晚上的教程看似很简单，我就担心的是自己主机的问题，所以就提前做好了“后悔药”，把该做的备份做好了，最坏的结果就是连主机都玩坏了，但是不做就觉得对不起自己，哈哈，这是不是程序员的“病”呀！&lt;/p&gt;&#xA;&lt;p&gt;开始准备，备份原大气层系统。&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;除以下文件夹外的所有内容copy到备份文件中。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;emuMMC&#xA;Nintendo&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;ol start=&#34;2&#34;&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;删除刚刚备份的文件。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;讲下载的&lt;a href=&#34;https://shipengliang.com/games/switch-firmware-%e5%9b%ba%e4%bb%b6%e4%b8%8b%e8%bd%bd.html&#34;&gt;最新大气层及其固件&lt;/a&gt;。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;当前我下载的大气层版本为1.6.2,固件为17.0.1。&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;ol start=&#34;4&#34;&gt;&#xA;&lt;li&gt;将大气层和固件固件文件copy到内存卡。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;ps.macOS在拷贝的过程中会产生一些系统文件，导致安装固件出问题，所以在根目录下执行以下命令。&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;find .  -name &amp;#34;._*&amp;#34; -delete&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;ol start=&#34;5&#34;&gt;&#xA;&lt;li&gt;开机后，进入相册，运行 Daybreak，选择安装的固件。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;参考：&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://shipengliang.com/games/switch-%e5%a4%a7%e6%b0%94%e5%b1%82-atmosphere-%e5%a6%82%e4%bd%95%e7%a6%bb%e7%ba%bf%e5%8d%87%e7%ba%a7%e7%b3%bb%e7%bb%9f.html&#34;&gt;https://shipengliang.com/games/switch-%e5%a4%a7%e6%b0%94%e5%b1%82-atmosphere-%e5%a6%82%e4%bd%95%e7%a6%bb%e7%ba%bf%e5%8d%87%e7%ba%a7%e7%b3%bb%e7%bb%9f.html&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://zhuanlan.zhihu.com/p/627504313&#34;&gt;https://zhuanlan.zhihu.com/p/627504313&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.gamefana.com/ns%e6%9b%b4%e6%96%b0%e5%8d%87%e7%ba%a7%e6%95%99%e7%a8%8b/&#34;&gt;https://www.gamefana.com/ns%e6%9b%b4%e6%96%b0%e5%8d%87%e7%ba%a7%e6%95%99%e7%a8%8b/&lt;/a&gt;&lt;/p&gt;&#xA;&lt;ol start=&#34;6&#34;&gt;&#xA;&lt;li&gt;重启后，使用DBI安装游戏。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;不知道是自己的机子焊的比较好，还是自己比较厉害🤣，升级成功了！又可以开心的玩耍了。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Restart_2024</title>
      <link>https://guobingyi.github.io/blog/restart_2024/</link>
      <pubDate>Sun, 07 Jan 2024 22:55:31 +0800</pubDate>
      <guid>https://guobingyi.github.io/blog/restart_2024/</guid>
      <description>&lt;h1 id=&#34;why-2024-why-today&#34;&gt;Why 2024 Why today?&lt;/h1&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;42 year old!&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;今天是自己42岁的生日，没有鲜花，没有掌声！&lt;/p&gt;&#xA;&lt;p&gt;碌碌无为的这几年，让人感到窒息！&lt;/p&gt;&#xA;&lt;p&gt;原本想撒娇的时候，才发现自己也生为人父。&lt;/p&gt;&#xA;&lt;p&gt;总感慨时间如此快的时候，才发现时间如此珍贵！&lt;/p&gt;&#xA;&lt;p&gt;总之，现在开始发现，需要重新面对。&lt;/p&gt;&#xA;&lt;p&gt;不知道从什么时候开始，我都不知道该写点什么？该如何写？&lt;/p&gt;</description>
    </item>
    <item>
      <title>think2023</title>
      <link>https://guobingyi.github.io/blog/think2023/</link>
      <pubDate>Tue, 14 Nov 2023 09:38:08 +0800</pubDate>
      <guid>https://guobingyi.github.io/blog/think2023/</guid>
      <description>&lt;h2 id=&#34;2023的思考&#34;&gt;2023的思考&lt;/h2&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;当你口袋里没有你想要的，那么你的想法就是错误的？&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;最近老喜欢看些不同观点的视频，也或许是被大数据所害。chatGPT的影响力越来越大，搞的写代码都感觉有点没有动力，不如就再等等。&lt;/p&gt;&#xA;&lt;p&gt;家里添置了model Y，原本是件非常开心的事情，可是自己的思维模式总是让自己感到困扰。我现在来一一记录：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;购买的历程&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;老婆和我都有过纠结，到底是7座的车还是5座的车。原因是7座的车可以带着全家到处去旅游，而5座的车就必须开两辆车。就目前而言，特斯拉没有7座的车，而且电车也不想考虑7座的。老人们其实都已经老了，在一次谈话中，他们其实都不想和我们做出出去外，毕竟太折腾了。思前想后，我提议就买model Y吧，这样即使全家出游，就两辆车，而且更多的时候可以带着娃多玩一玩。老婆的想法和我绝然不通，她觉得她已经放弃了房车，应该买一辆GL8的7座车，这样空间大，出行方便些。可是，随着油价的增长，房子依旧在跌，我们都在改变我们的想法。我再次和前三年的特斯拉销售联系，我们去试驾了，可是情况是只试驾了model 3，老婆对model 3的驾驶体验非常喜欢。可是对model Y的外观依旧很吐槽。为了买到自己心仪的车，我们参加了2023年上半年的车展。在车展上看了塞纳和格瑞维亚，对丰田的车真的很喜欢，可是就是价格太贵。为了真正的认识到塞纳，我们去试驾了。老婆对塞纳的空调非常吐槽，因为声音太大了，而我却很喜欢塞纳的驾驶体验，因为塞纳曾经是一个美国主播（老公是中国的，有两个宝宝）推荐的，我喜欢塞纳的空间，可是价格太贵，最低配的需要33W，落地也是35W。而且还需要进行再次进行加装，所以放弃了。而GL8的价格却是很香，25W的裸车，28W落地。唯一的缺点就是油耗比较高，并且停车也不方便。买车的事情再次被搁浅，因为房子的事情一直都没有着落。&lt;/p&gt;&#xA;&lt;p&gt;9月份的时候，房子的事情已经基本上确认了。特拉斯的销售也在逼单，而自己也非常喜欢model Y。就这样的情况下，我再次和老婆商量，老婆还是被我说服了，因为40多的人，想买就买吧～～趁着还有精力，我下单了。大姐的宝马X3，其实我也很心动，可是就是觉得油车不应该再买了，喜欢和生活，最终还得选择生活。最终订了model Y。原本按照预定时间是9月份提车，可惜钱没有到位，推迟了一个月，而刚好这个月model Y推出了小改款，将性能从6.9秒的百米加速提升到5.9。&lt;/p&gt;&#xA;&lt;ol start=&#34;2&#34;&gt;&#xA;&lt;li&gt;提车&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;提车比较搞笑，我和老婆完全没有像大家一样，去拍照，一点仪式感都没有。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;因为离家有点远，而且特斯拉的销售预约了时间，我和老婆也提前做好了准备，可是依然无法隐藏不了自己的兴奋之情，看来还是年轻了。&lt;/p&gt;&#xA;&lt;p&gt;打了一辆网约车，一路上老婆都在打电话，而我看着窗外，想着今天就可以看到自己喜欢了三年的车，心中非常欢喜。&lt;/p&gt;&#xA;&lt;p&gt;我们提前到的，我以为会等一会，想不到直接就可以提车了，而且好像已经提了好多辆了，心中有点不爽，本来就和销售说过，要早点提车，这样就可以做点其他事情，特别是还要带娃。交了身份证，就让“员工”带着我去办理了。第一个通道是进行保险确认，我在他说了app上提前购买了，就走一走流程，给了点礼包。第二站便是打印临时牌照，不知道为什么？这个员工说他们代理办牌照的人很快，自己办理很麻烦，给人的感觉就是不交待办费，我们是做不了的，我心情有点不爽。“员工”开始给我们推销车膜，我这个时候就知道了这个员工是3M膜的推销人员，我不想贴，因为我买了白色的车就是想啥都不弄，这样比较环保。可是，老婆这时说为什么不贴呢？我没有反驳，我知道是我没有提前和她说一些事项，还是我们沟通不对。我提出了先看车，车是那么帅，哈哈～～，“员工”上车给我讲解操作，我有点蒙。这时特斯拉的员工终于到啦，他示意他来讲解的时候我就知道了，简单的介绍，然后将手机绑定，然后告诉我们可以出发啦～～老婆看时间又点晚，让他们让我们充一下电，我们吃个早饭，销售不让，结果3M膜的推销人员让了。让我非常感激，可是我真的不想贴膜。&lt;/p&gt;&#xA;&lt;p&gt;吃完饭，我们去提车，结果在旁边提车的人把我的车门给打开了，我很郁闷。我们开车准备出发的时候，我老婆又被3M膜的销售去洗脑了，我解决不贴，上了个厕所，拿了瓶水走人。但是，老婆心里就一直想贴膜了。太想一天搞定了，原本还看了那里可以上牌，但是想390元可以搞定上牌，我和老婆还是纠结了一会。导航到上牌的地方，发现没有人，而且发现好像自己搞不定一样，老婆心想自己弄，但是我却一直想今天搞定，所以妥协了，让人家代办了。说实话，如果不是想一天搞定，其实自己办妥妥的可以省下270元的。但是，毕竟孩子小，没有那么多时间耗。能用钱来节省时间，那还是不错的。&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;大致说一下上牌的流程，就是一个代办点，特斯拉的人员进行帮你操作12123，进行选牌，拍车身照，然后等代办点打印行车证，然后车牌邮寄。&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;我和老婆因为要去接孩子，所以催促了几次，原本以为要结束了，想不到代办点的网络出现了问题，无法打印，结果只能等，等我特斯拉的代办人员居然忘记给我身份证，害我回到车，又重新跑一趟，想到好事多磨，也就算了，毕竟车的事情搞定了！&lt;/p&gt;&#xA;&lt;ol start=&#34;3&#34;&gt;&#xA;&lt;li&gt;&amp;ldquo;装修&amp;quot;车&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;说特斯拉是毛坯房，我想说，一点没错，特别是脚垫都没有。虽然特斯拉Model Y 送了脚垫，但是像没有送一样。幸好我买了，这一点是真的值。以下是我买的配件：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;脚垫 161.00元&lt;/p&gt;&#xA;&lt;p&gt;必须。原厂赠送的没法用，必须加一个。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;车窗膜和车衣 6980.00元&lt;/p&gt;&#xA;&lt;p&gt;我可以说是智商税吗？原厂的漆除了黑色，其他的都不错。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;座椅下风口包含和后排空调保护罩 25.00元&lt;/p&gt;</description>
    </item>
    <item>
      <title>Update_python</title>
      <link>https://guobingyi.github.io/code/update_python/</link>
      <pubDate>Wed, 04 Oct 2023 21:34:43 +0800</pubDate>
      <guid>https://guobingyi.github.io/code/update_python/</guid>
      <description>&lt;h2 id=&#34;python更新记录&#34;&gt;Python更新记录&lt;/h2&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;知之为知之，不知为不知。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;从python3.10.0到3.12.0已经更新了许多版本，我原来的习惯都是用venv的模式加pyenv来进行开发的。现在，更新至3.12突然发现自己每次使用一个项目就要创建一个venv的模式有点占用空间了。没有转变过来，如果开发新项目或者项目彼此之间没有太多连接的情况下，或许venv的模式是不错的选择，可是，对于个人项目而言，又过于太严谨化了。什么都要和自己匹配才是最好的呢？&lt;/p&gt;&#xA;&lt;p&gt;由于自己的项目过多的使用venv模式，导致每使用一个项目就要切换到不同的venv中，所以速度慢，而且需要记住的东西较多，反而把自己搞累了。现在想把项目统一到一个地方，这样就不那么累了，启动项目，开始工作。&lt;/p&gt;&#xA;&lt;p&gt;迁移的第一步从将pyenv迁移到扩展卡，毕竟128G的主力盘不能浪费。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;注：扩展卡就780M，感觉可以先把电影看掉一些在搞这个工作了。&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;开始搞起，因为macOS下没有Command + x，那么就使用mv命名吧。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;mv .pyenv /Volumes/Transcend/Project/python_code/pyenv_home&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;ol start=&#34;2&#34;&gt;&#xA;&lt;li&gt;加入配置命令：&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;export PYENV_ROOT=/Volumes/Transcend/Project/python_code/pyenv_home/.pyenv&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;ol start=&#34;3&#34;&gt;&#xA;&lt;li&gt;Done.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;安装python3.12.0报错：&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;pyenv install 3.12.0&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;报错原因：&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;BUILD FAILED (OS X 12.7 using python-build 20180424)&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;解决步骤：&lt;/p&gt;&#xA;&lt;p&gt;1.删除老的CommandLineTools&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;sudo rm -rf /Library/Developer/CommandLineTools&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;2.重新安装Xcode Command line tools&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;xcode-select --install&#xA;&lt;/code&gt;&lt;/pr</description>
    </item>
    <item>
      <title>Hello_mojo</title>
      <link>https://guobingyi.github.io/code/hello_mojo/</link>
      <pubDate>Sun, 24 Sep 2023 13:39:14 +0800</pubDate>
      <guid>https://guobingyi.github.io/code/hello_mojo/</guid>
      <description>&lt;h1 id=&#34;hellomojo&#34;&gt;Hello,mojo&lt;/h1&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;尽信书，不如无书！&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://guobingyi.github.io/img/code/mojo-dev.jpg&#34; alt=&#34;mojo in code&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;最近mojo进入我的视眼，因为官网宣传比python快68000倍。我抱着怀疑的态度，想尝试一下，毕竟最近领悟了“人生苦短，我用python”的理念。&lt;/p&gt;&#xA;&lt;p&gt;第一时间订阅了mojo SDK的下载通知，在2023年9月7日迎来了第一版本的SDK下载，非常兴奋的去下载页面，都没有来得及仔细阅读，就把下载命令拷贝在终端，像rust语言一样的简单，可是报错了，发现这个版本的SDK只支持在Ubuntu上运行，被搞得难受极了，心了有了无数匹马在奔腾。好吧，既然这样就仔细遇到阅读了安装手册，说可以使用docker来弥补现在的这个版本，好吧，既然这样就安装docker了。可是，万万没有想到，docker居然会出现那么严重的问题，我的主盘128G空间剩余20G，连个docker都安装不了，赶紧腾出了30G的趋势卡来安装，docker这个混蛋居然把所有空间占满了，还启动报错，F**K。连续安装了几次后，果断放弃了。看着mojo的文档说马上会推出macOS的SDK，心想就这样吧～～&lt;/p&gt;&#xA;&lt;p&gt;2023年9月21日，mojo推出了v0.3.0版本，我认真仔细的读了变更日志，没有推出macOS的SDK，心里不爽，不是说coming soon吗？好吧，我等不了了，既然docker用不了，那有没有替代品呢？找到了podman。我是来安装mojo的，想不到吧？我去安装了podman来安装Ubuntu了，呵呵。看了podman的介绍，还好和docker比较相似，用法上没有太多的难点。&lt;/p&gt;&#xA;&lt;h2 id=&#34;1-安装podman&#34;&gt;1. 安装podman&lt;/h2&gt;&#xA;&lt;h3 id=&#34;11-macos上的神器-brew&#34;&gt;1.1 macOS上的神器 brew&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;brew install podman&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;12-初始化podman&#34;&gt;1.2 初始化podman&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;podman machine init&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;13-启动podman&#34;&gt;1.3 启动podman&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;podman machine start&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;14-查找ubuntu&#34;&gt;1.4 查找Ubuntu&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;podman search docker.io/ubuntu&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;15-安装启动ubuntu&#34;&gt;1.5 安装启动Ubuntu&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;podman run -it docker.io/library/ubuntu&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;16-进入到podman虚拟机&#34;&gt;1.6 进入到podman虚拟机&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;podman machine ssh&#xA;&lt;/code&gt;&lt;/pr</description>
    </item>
    <item>
      <title>The_best_language</title>
      <link>https://guobingyi.github.io/code/the_best_language/</link>
      <pubDate>Thu, 24 Aug 2023 12:42:21 +0800</pubDate>
      <guid>https://guobingyi.github.io/code/the_best_language/</guid>
      <description>&lt;h1 id=&#34;最好的编程语言&#34;&gt;最好的编程语言&lt;/h1&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;海象说是时候谈谈了。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h2 id=&#34;0x00-缘起&#34;&gt;0x00 缘起&lt;/h2&gt;&#xA;&lt;p&gt;最初第一次认识电脑，是同学带自己去玩游戏，那个时候街机已经不流行了，流行的是电脑游戏。看到电脑的样子感觉很高级，不知道这个东西到底能做什么，只知道可以玩好玩的游戏。😳&lt;/p&gt;&#xA;&lt;p&gt;慢慢的，不知道是天意还是命运，被没有填报志愿的计算机学院录取。第一天就被系主任的话迷住，用c语言来改变世界。自从认识了c语言后就开始鄙视任何语言，php/python/js/html是第一批被鄙视的语言，因为那个时候觉得这样的语言就是给非计算机人是用的。开始喜欢那种有Power的语言，所以第一c语言，第二c++语言。可是，那个时候，除了从书本上学习到知识外都很少从互联网学习知识，看到书本上的语法，例子，真的是无聊到极点。那个时候比较流行做管理系统，所以看到了Delphi的身影。可惜，Delphi的语法和c的语法有点不同，相对c#的语法要好些。所以，更多的学习了c#，可是怎么用呢？还是没有一个明确的思路。直到买了一本Visual Becial.net的书，按照书中的例子来写点小例子，如记事本。后来，在图书馆里看到了Java语言，书中说这个语言要改变世界，因为编译一次，到处运行。还不知道什么叫夸平台，因为只知道世界上只有Windows。&lt;/p&gt;&#xA;&lt;p&gt;凭借着对程序的热爱，开始找工作，到处都是Java程序员的招聘，而自己的文凭又不是那么强势，所以只能硬着头皮考了Java程序员认证。也凭着一点点运气被一家公司录取，开始了程序员之旅。第一家公司使用vb6和Delphi进行系统开发，那个时候还是比较开心的，因为是自己喜欢的语言，开发比较有动力。后来，互联网强势来袭，C#的asp.net和Java的Sevlet开始抗争。平台开始转移到Linux下，C#的优势没有了，全部都Java的天下。最后到移动端，也是Java的天下，微软的势力被缩减。&lt;/p&gt;&#xA;&lt;p&gt;原来工作的时候，是公司使用什么技术，你就得用什么技术，或者说你选择技术，来为公司谋利。那么在技术选型上就得考虑许多问题，比如平台，Windons的服务器比Linxu的服务器贵，而且技术单一。比如语言，go语言可以和Java语言一样高效，可是没有Java的生态圈好。python语言可以很快开发出原型，可是性能问题让大家都放弃。而且开发人员的层次不一样，所以不能使用上手慢的语言，比如rust。&lt;/p&gt;&#xA;&lt;p&gt;后来，没有工作的限制，自己当成爱好来写代码的时候，就不一样了。什么简单，就什么来。慢慢明白了python的格言，“人生苦短，我用python。”&lt;/p&gt;&#xA;&lt;p&gt;最近，突发奇想，把自己写的下载视频python代码，用不同语言来实现一遍，看看自己以前的语言还熟悉吗？&lt;/p&gt;&#xA;&lt;h2 id=&#34;0x01-go语言&#34;&gt;0x01 go语言&lt;/h2&gt;&#xA;&lt;p&gt;go语言是工作后最喜欢的语言，没有之一。为什么呢？&lt;/p&gt;&#xA;&lt;h3 id=&#34;第一简单高效&#34;&gt;第一，简单，高效&lt;/h3&gt;&#xA;&lt;p&gt;go语言的语法非常简单，几句语言就可以开发一个文件服务器。在使用的过程中，除了老忘记语句结束不需要;外，基本都能很平顺的写出代码。&lt;/p&gt;&#xA;&lt;h3 id=&#34;第二跨平台编译&#34;&gt;第二，跨平台编译&lt;/h3&gt;&#xA;&lt;p&gt;可以在macOS上编译成在Windows或者Linux上的程序，你说开心不？&lt;/p&gt;&#xA;&lt;h3 id=&#34;第三google出品&#34;&gt;第三，Google出品&lt;/h3&gt;&#xA;&lt;p&gt;一般大厂出品的东西，安全/性能都非常出色，并且保证了持续的发展。&lt;/p&gt;&#xA;&lt;h3 id=&#34;结论&#34;&gt;结论&lt;/h3&gt;&#xA;&lt;p&gt;如果在追求性能，快速实现的基础上go是非常好的选择，但是和python相比，少了许多库和非常好的生态圈。&lt;/p&gt;&#xA;&lt;h2 id=&#34;0x02-rust语言&#34;&gt;0x02 rust语言&lt;/h2&gt;&#xA;&lt;p&gt;和go语言相比，rust语言的确学习起来要难些。但是它的用途却是提供高性能，无垃圾回收，所以对比而言，这个用来做核心功能应该不错。目前，还是没有学通。&lt;/p&gt;&#xA;&lt;h2 id=&#34;0x03-c&#34;&gt;0x03 C#&lt;/h2&gt;&#xA;&lt;p&gt;曾经最喜欢的语言之一，跨平台后一直都舍不得uninstall。&lt;/p&gt;&#xA;&lt;h2 id=&#34;0x04-java&#34;&gt;0x04 Java&lt;/h2&gt;&#xA;&lt;p&gt;吃饭的语言，自从学会了后，一直都用Java在公司进行开发，你说它的作用大不大？&lt;/p&gt;&#xA;&lt;h2 id=&#34;0x05-python&#34;&gt;0x05 python&lt;/h2&gt;&#xA;&lt;p&gt;在工作中碰到几次，没有上心。没有工作后，特别喜欢使用。&lt;/p&gt;&#xA;&lt;h2 id=&#34;0x06-开始&#34;&gt;0x06 开始&lt;/h2&gt;&#xA;&lt;p&gt;最近使用自己写的python脚本下载m3u8格式的视频，基本上做点事情回来视频便下载好了，非常方便。在魔兽世界里，有句话说：“我的朋友，时间就是金钱！”。使用python脚本的时候，就觉得速度上是不是可以提速一点，所以想用go语言来改写一下，Cursor也用上了，不得不说gpt的确帮了许多忙。&lt;/p&gt;&#xA;&lt;h3 id=&#34;python语言&#34;&gt;python语言&lt;/h3&gt;&#xA;&lt;p&gt;python语言简单，第三方的库比较丰富。想到就可以做到的语言，恐怕只有python吧~~。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Howtousebarcode</title>
      <link>https://guobingyi.github.io/code/howtousebarcode/</link>
      <pubDate>Sat, 29 Jul 2023 16:18:49 +0800</pubDate>
      <guid>https://guobingyi.github.io/code/howtousebarcode/</guid>
      <description>&lt;h1 id=&#34;如何读取照片中的条码信息&#34;&gt;如何读取照片中的条码信息&lt;/h1&gt;&#xA;&lt;p&gt;最近考虑到如何输入图书信息到系统中，发现了条码信息的重要性，所以想使用手机自带的功能来使用。&lt;/p&gt;&#xA;&lt;p&gt;服务器端使用 C# 和 Python 来使用验证上传的图片。&lt;/p&gt;&#xA;&lt;h2 id=&#34;choice1python-获取条码信息&#34;&gt;Choice1：Python 获取条码信息&lt;/h2&gt;&#xA;&lt;p&gt;相对而言 Python 的库比较多，使用起来比较方便。&lt;/p&gt;&#xA;&lt;h3 id=&#34;1-安装-zbar&#34;&gt;1. 安装 zbar&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;brew install zbar&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;依赖性：Fetching dependencies for zbar: jbig2dec, libidn, ghostscript, libde265, shared-mime-info, libheif, liblqr, libomp, libraw and imagemagick&lt;/p&gt;&#xA;&lt;h3 id=&#34;2-安装-pyzbar&#34;&gt;2. 安装 pyzbar&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;pip install pyzbar&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;3-安装-pillow&#34;&gt;3. 安装 Pillow&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;pip install pillow&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;4-test-code&#34;&gt;4. Test Code&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;from pyzbar.pyzbar import decode&#xA;from PIL import Image&#xA;&#xA;bar_result = decode(Image.open(&amp;#39;book1.jpg&amp;#39;))&#xA;&#xA;if len(barresult) &amp;gt; 0 :&#xA;    print(&amp;#34;find barcode:&amp;#34; + barresult[0].data.decode())&#xA;else:&#xA;    print(&amp;#34;can&amp;#39;t find barcode!&amp;#34;)&#xA;&lt;/code&gt;&lt;/pr</description>
    </item>
    <item>
      <title>Ntfs</title>
      <link>https://guobingyi.github.io/mac/ntfs/</link>
      <pubDate>Wed, 12 Jul 2023 17:10:51 +0800</pubDate>
      <guid>https://guobingyi.github.io/mac/ntfs/</guid>
      <description>&lt;h1 id=&#34;mac下挂载windows下的硬盘&#34;&gt;Mac下挂载Windows下的硬盘&lt;/h1&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;变化，变化。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;电脑已经8年了。&lt;/p&gt;&#xA;&lt;p&gt;而自己使用时间的越来约来少，或许三个宝让自己慢慢的认清了现实。&lt;/p&gt;&#xA;&lt;p&gt;突然使用电脑的时候，发现&lt;a href=&#34;https://mounty.app&#34;&gt;Mounty&lt;/a&gt;已经不能实现挂载硬盘了。提示需要NTFS-3G，而自己离开地球很久了。思路变成了去百度问一问，却忘记了原来的思路是去官网看看。哎，退化了。&lt;/p&gt;&#xA;&lt;p&gt;根据官网的提示，很快就解决了问题，但是自己却用百度去寻找问题，最终根据很难的样子，其实只要找到根源，问题就解决了。&lt;/p&gt;&#xA;&lt;p&gt;我使用了&lt;a href=&#34;https://brew.sh/&#34;&gt;brew&lt;/a&gt;来安装mac上的软件，免费比什么都重要。&lt;/p&gt;&#xA;&lt;p&gt;1.安装macFUSE&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;brew install --cask macfuse&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;2.安装 ntfs-3g-mac&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;brew install ntfs-3g-mac&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;3.重启电脑后，设置安全性与隐私，允许签名为：“Benjamin Fleischer”的App。&lt;/p&gt;&#xA;&lt;p&gt;挂载移动硬盘后成功，并且可以删除原来在Mounty上不能删除的软件。（原来使用Mounty的时候，可以增加文件，却不可以删除，删除会死机重启😓）&lt;/p&gt;</description>
    </item>
    <item>
      <title>TheLastOfUS</title>
      <link>https://guobingyi.github.io/movie/thelastofus/</link>
      <pubDate>Wed, 05 Apr 2023 15:23:27 +0800</pubDate>
      <guid>https://guobingyi.github.io/movie/thelastofus/</guid>
      <description>&lt;h1 id=&#34;最后的生还者&#34;&gt;最后的生还者&lt;/h1&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;万事皆有结果。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://guobingyi.github.io/img/movie/TheLastOfUS.webp&#34; alt=&#34;最后的生还者&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;推荐指数：⭐️⭐️⭐️⭐️&lt;/p&gt;&#xA;&lt;p&gt;曾几何时，自己喜欢上了后现代的生存电影。&lt;/p&gt;&#xA;&lt;p&gt;Joel和Ellie的主线故事，配上了Bill和Frank的支线故事，让这部美剧非常精彩。当看到人们被一种叫做蛇虫草菌感染的，感到非常困惑。缘由是地球变暖，真菌有的生活环境。而这种真菌可以控制寄生体，进行攻击，然后再次寄生。有几个怪，居然是头上顶着个蘑菇，咬，可以理解，但是把头给拉掉了，我觉得就是电影的一种气氛衬托吧～～&lt;/p&gt;&#xA;&lt;p&gt;美剧中最大的一点争议就是男的和男的好，女的和女的好，让这个原本就混乱的时代，更加混乱。虽然我不喜欢，但是好像也没有什么对错。&lt;/p&gt;&#xA;&lt;p&gt;后现代的生存电影，都告诉我们，可怕的不是怪物，是人，人才是最可怕的。当看到没有食物吃人的时候，我就知道，这个社区要完了。人的很多思想被扭曲，已经不在做为一个人的存在。Joel对待人的方式就很简单粗暴，Killed。在Henry失去弟弟后，最后自杀，也告诉我们那个时代，生活的意义是什么。当最后的希望被打破后，那么死亡或许就是一种解脱。&lt;/p&gt;&#xA;&lt;p&gt;从行尸走肉到最后的生还者我都看到了现代社会真的很脆弱，最惨的是家庭，如果没有像Bill一样的思想，那么最终就是一堆白骨。&lt;/p&gt;&#xA;&lt;p&gt;看完后，只是会更加珍惜现在的生活，并且会对生活多一些思考。&lt;/p&gt;</description>
    </item>
    <item>
      <title>2023_plan</title>
      <link>https://guobingyi.github.io/blog/2023_plan/</link>
      <pubDate>Tue, 14 Feb 2023 10:30:43 +0800</pubDate>
      <guid>https://guobingyi.github.io/blog/2023_plan/</guid>
      <description>&lt;h1 id=&#34;2023-计划&#34;&gt;2023 计划&lt;/h1&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;时间过得真快，感觉不抓紧，什么事情就这样过去了。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;不知不觉中，2023就到来了，去年在忙碌中寻找一条出路，现在看来一切都那么的自然，过着过着日子就这样了。&lt;/p&gt;&#xA;&lt;p&gt;不去想为什么会这样？只是知道生活不能就这个。&lt;/p&gt;&#xA;&lt;p&gt;原本以为在2023年可以开始iSO的开发计划，最后才发现生活并没有这么简单，自己要做的事情其实是生活好，在去考虑其他的问题。而现在最需要做的就是带好娃，把自己的身体调整好。其他，就顺其自然吧～～&lt;/p&gt;&#xA;&lt;p&gt;或许生活就是这个样子，不可以任性，也不可以随意挥霍。&lt;/p&gt;&#xA;&lt;p&gt;最近看《种群》的时候，感悟到人要有所追求，才能让生活过的有意义，而浑浑噩噩的生活只会让自己变得盲目，不知道生活到底是为了什么？&lt;/p&gt;&#xA;&lt;p&gt;原来会每年都做一个计划，而最近的两年真的是太忙碌了，来不及去思考，去想今年到底算完成了计划吗？我的计划又是什么？总在焦虑中度过，而没有对自己的生活有所期待。&lt;/p&gt;&#xA;&lt;p&gt;今年或许会好许多，毕竟孩子一天一天的长大。正如歌曲里唱的那样，“草木会发芽，孩子会长大”，一切都会好的。&lt;/p&gt;&#xA;&lt;p&gt;有时会被周围带节奏，不知道什么是正确的，什么又是错误的。但是总会有一个声音告诉自己，“做一个善良的人，一切都可以改变的“。所以不强求，不焦虑，过好自己的每一天。&lt;/p&gt;&#xA;&lt;p&gt;会有许多的想法，但是却又在不经意间把自己的想法搁浅。比如想去开发iSO的App，却发现梦想和现实的差距是那么遥远，但是却那么近。&lt;/p&gt;&#xA;&lt;p&gt;或许，生活中没有计划，却又像有计划。我们的计划自己整理，按照约定去执行，外来的计划由外部决定，我们只能去遵守就好。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Visual_studio_code</title>
      <link>https://guobingyi.github.io/blog/visual_studio_code/</link>
      <pubDate>Mon, 28 Nov 2022 17:01:05 +0800</pubDate>
      <guid>https://guobingyi.github.io/blog/visual_studio_code/</guid>
      <description>&lt;h1 id=&#34;visual-studio-code-优化记录&#34;&gt;Visual Studio Code 优化记录&lt;/h1&gt;&#xA;&lt;p&gt;因为Visual Studio Code以及成为了我电脑上的主力IDE，所有的语都能很好的支持，所有我提升了她的地位。&lt;/p&gt;&#xA;&lt;p&gt;但是，在中文输入的时候总会出现卡顿的情况，今天查阅了资料，在最后的时候还是调整的很好。&lt;/p&gt;&#xA;&lt;p&gt;最主要的体验就是书写中文的时候不会卡出英文字母了，现在就把优化的步骤记录一下：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;更新Visual studio code&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;升级到最新版本的vs code 。这个我的版本就是最新的，所以这个对我无效。&lt;/p&gt;&#xA;&lt;ol start=&#34;2&#34;&gt;&#xA;&lt;li&gt;检查插件&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;把不常用，质量不高(20+以下)插件删除。&lt;/p&gt;&#xA;&lt;p&gt;检查启动时的插件&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Command + Shift + P &#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;键入：&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Developer: Show Running Extensions&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;查看耗时的插件，然后根据自己的情况进行删除或者禁用。&lt;/p&gt;&#xA;&lt;p&gt;注意：如果耗时超过1000毫秒，那么需要好好检查一下。&lt;/p&gt;&#xA;&lt;ol start=&#34;3&#34;&gt;&#xA;&lt;li&gt;主题插件&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;最好把所有的主题插件删除，如果有必要的话。&lt;/p&gt;&#xA;&lt;ol start=&#34;4&#34;&gt;&#xA;&lt;li&gt;重装&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;这个建议，我觉得应该好使，毕竟多年的Windows用户经验告诉我，重装可以解决很多未知的问题，问题是苹果上删除可不那么简单，不是在应用里删除就结束的，还有许多文件需要删除，这个埋个坑，因为经过上面的优化后，我的没有出现问题了。&lt;/p&gt;&#xA;&lt;p&gt;苹果下的vs code 相关路径：&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;~/.code&#xA;/Users/guoby/Library/Caches/vscode-cpptools&#xA;/Users/guoby/Library/Application Support/Code&#xA;&lt;/code&gt;&lt;/pr</description>
    </item>
    <item>
      <title>Helix</title>
      <link>https://guobingyi.github.io/blog/helix/</link>
      <pubDate>Mon, 28 Nov 2022 14:39:47 +0800</pubDate>
      <guid>https://guobingyi.github.io/blog/helix/</guid>
      <description>&lt;h1 id=&#34;helix&#34;&gt;Helix&lt;/h1&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;任何的IDE都不如自己用起来舒服重要。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://guobingyi.github.io/img/Helix.png&#34; alt=&#34;Helix&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;认识Helix是在找一款vala语言好用的IDE，找到了GNOME Builder，发现macOS不能使用，但是在工具发现一款叫Helid的IDE，没有见过，所以好奇点开了。官网地址是：https://helix-editor.com。居然是Rust写的，在&lt;a href=&#34;https://github.com/helix-editor/helix&#34;&gt;github&lt;/a&gt;有16.6k,所以直接下载编译。&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;git clone https://github.com/helix-editor/helix&#xA;cd helix&#xA;cargo install --path helix-term&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;编译过程中还是出现了很多问题，但是最终编译通过了。这个是值得庆幸的，因为很多都编译不过去，直接被我pass了。&lt;/p&gt;&#xA;&lt;p&gt;因为，磁盘空间问题😓，所以在拷贝的时候用了短拷贝。&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;ln -s $PWD/runtime ~/.config/helix/runtime&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;不要偷懒把$PWD去掉，因为ln使用的是全路径，去掉后找不到。&lt;/p&gt;&#xA;&lt;p&gt;这样结果编译，安装，配置后，hx可以使用了。&lt;/p&gt;&#xA;&lt;p&gt;当然了，作为苹果用户可以直接用brew进行安装，但是如果你不喜欢用Rust那么,brew作为编译项也会把Rust给你安装了。&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;brew install helix&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;官网支持的语言很多，但是目前想用来写一写vala，发现还是没有代码提示，这样就尴尬了。不过，go语言的代码提示就很好，终不能像vscode一样包罗万象。但是，最近使用vscode发现，在输入中文的时候老会给我加几个字母或者输入有问题，卡顿吗？还是其他的缘故，暂时不知道。这样就让我更加激发了要自己定义自己的IDE了，emacs将会是最好的选择。为了保障打字的时候不卡顿，或者说卡顿就直接用emacs代替好了。&lt;/p&gt;&#xA;&lt;p&gt;就是写个markdown的文档，都会出现vs code使用了大量能耗。&lt;/p&gt;&#xA;&lt;p&gt;vs code你到底做了什么？让我那么卡？&lt;/p&gt;&#xA;&lt;p&gt;跑题了，Helix总的来说，还是让人眼前一亮的，毕竟在控制端使用，蛮方便的，hx 文件名就可以直接使用了，而且语法高亮，类vim的快捷键。但是，或许还年轻有许多可以加强的地方。在此买个坑，以后在有机会学习一下吧。&lt;/p&gt;&#xA;&lt;p&gt;话说，那么多的IDE，习惯了一种模式就继续下去，因为都可以有很多的替代方案，就目前要解决的问题最重要，不要为了IDE而写代码，也不要为了代码而找IDE，解决问题的关键时刻不要忘记，不然会迷失在无数的IDE和无数的语言中。最终，什么都会个Hello,World!&lt;/p&gt;</description>
    </item>
    <item>
      <title>Restart</title>
      <link>https://guobingyi.github.io/emacs/restart/</link>
      <pubDate>Thu, 24 Nov 2022 23:13:50 +0800</pubDate>
      <guid>https://guobingyi.github.io/emacs/restart/</guid>
      <description>&lt;h1 id=&#34;重新开始emacs之旅&#34;&gt;重新开始Emacs之旅&lt;/h1&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;变化真的很快&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h2 id=&#34;0x00-为什么还是要选择emacs&#34;&gt;0x00 为什么还是要选择Emacs&lt;/h2&gt;&#xA;&lt;p&gt;原本以为会放弃这个IDE，因为真的不好学呀。不好学的原因在于用惯了vscode的模式，简单方便，各种插件容易安装，最最重要的是各种问题不会那么难解决，而且有非常多的资源。可，emacs却真的不一样，一个准备的开始都那么复杂。melpa.org的资源无法访问到，导致下载的Spacemacs下载插件卡死，这种感觉就想换电脑，不要受电池不足的这个鸟气，可是，电脑其他都很好，而且没有钱😊。所以耐住性子，继续折腾，毕竟自己也喜欢折腾嘛~~。开始查阅资料，为什么会卡？结论就是melpa.org在国内访问有问题，那如何解决呢？&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;使用代理服务器。&lt;/li&gt;&#xA;&lt;li&gt;emacs自己设置代理。&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;我选择了第二种，在init.el中加入代理配置：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-lisp&#34; data-lang=&#34;lisp&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;setq&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;url-proxy-services&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   &lt;span class=&#34;o&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;no_proxy&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;^\\(localhost\\|10.*\\)&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;     &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;http&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;192.168.1.6:2020&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;     &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;https&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;192.168.1.6:2020&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)))&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pr</description>
    </item>
    <item>
      <title>Ada</title>
      <link>https://guobingyi.github.io/code/ada/</link>
      <pubDate>Thu, 17 Nov 2022 21:13:48 +0800</pubDate>
      <guid>https://guobingyi.github.io/code/ada/</guid>
      <description>&lt;h1 id=&#34;ada&#34;&gt;Ada&lt;/h1&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://guobingyi.github.io/img/code/ada.png&#34; alt=&#34;ada&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;被Ada的名字所吸引，来到了Ada Programming的世界。在&lt;a href=&#34;https://en.wikibooks.org/wiki/Ada_Programming&#34;&gt;wiki&lt;/a&gt;上描述，Ada是一种适合所有程序员使用的语言。但是，我查阅资料后，发现Ada最开始是美国军方为了整理在军队中使用太多的语言而创建的一种语言。知乎上对此提及的也很少，说在波音飞机中使用到该语言，而我从学习Python的过程中了解了次语言便开始一路逛奔过来。&lt;/p&gt;&#xA;&lt;p&gt;要怪就得怪我太发散了，什么东西都喜欢弄个清楚，搞个明白。最终，才逐渐明白，很多语言都是基于C或者C++的。要想彻底的搞清楚，最终还是逃脱不了C和C++，宿命吧～～&lt;/p&gt;&#xA;&lt;p&gt;话说Python中所说的：“人生苦短，我用Python。”可是，对与我来说就是想学习一些不一样的东西，我就喜欢在程序的世界里。所以，写代码的目的不是为了逃避，而是为了满足自己。&lt;/p&gt;&#xA;&lt;p&gt;或许是年龄的问题，记忆的东西已经不如从前了，在此就记录一下自己跟进的进度，等再次要学习的时候而不是抓狂，再次从头开始。&lt;/p&gt;&#xA;&lt;p&gt;我选择的是&lt;a href=&#34;https://www.adacore.com/&#34;&gt;AdaCore&lt;/a&gt;，说SPARK可以和Rust一样编写可靠的代码，广告害人呢！到官网下载，只能选择GNAT Community，软件版本许可的问题。也可以想到为什么使用的人少了，毕竟选择的太多啦。苹果电脑只支持到2020，只能选择&lt;a href=&#34;https://community.download.adacore.com/v1/aefa0616b9476874823a7974d3dd969ac13dfe3a?filename=gnat-2020-20200818-x86_64-darwin-bin.dmg&amp;amp;rand=787&#34;&gt;下载&lt;/a&gt;。下载之后，说好的IDE也没有包括，导致自己纠结好久要不要自己编译一下。可是想到自己的128G的硬盘，想算啦。命令行不是也可以吗？想不到后面也是坑加坑。&lt;/p&gt;&#xA;&lt;p&gt;默认安装路径为：&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;/opt/GNAT/2020&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;安装之后需要手工加入路径：&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;export ADA_PATH=/Users/guoby/opt/GNAT/2020/bin&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;开始编写第一个ada程序：&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;with Ada.Text_IO;&#xA;use Ada.Text_IO;&#xA;procedure Greet is&#xA;begin&#xA;    -- Print &amp;#34;Hello, World!&amp;#34; to the screen&#xA;    Put_Line (&amp;#34;Hello, World!&amp;#34;);&#xA;    Put_Line (&amp;#34;你好，世界!*2&amp;#34;);&#xA;    Put_Line(&amp;#34;ok?&amp;#34;)&#xA;end Greet;&#xA;&lt;/code&gt;&lt;/pr</description>
    </item>
    <item>
      <title>See you again Delphi</title>
      <link>https://guobingyi.github.io/blog/see-you-again-delphi/</link>
      <pubDate>Wed, 09 Nov 2022 10:38:42 +0800</pubDate>
      <guid>https://guobingyi.github.io/blog/see-you-again-delphi/</guid>
      <description>&lt;h1 id=&#34;再次遇到你-delphi&#34;&gt;再次遇到你 Delphi&lt;/h1&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;第一份工作，最喜欢的IDE&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://guobingyi.github.io/img/code/delphi.png&#34; alt=&#34;delphi&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;最近在回忆些事情，同时也在学习python语言，但是就在这个时候，我在寻找一个省电的文本编辑器的时候，无意间发现了Delphi的替代工具lazarus。lazarus,源自《圣经》中耶稣让已死去的拉撒路复活的故事。&lt;a href=&#34;https://www.lazarus-ide.org/&#34;&gt;lazarus官网&lt;/a&gt;有非常详细的资料，对于我来说，真的是太高兴了。&lt;/p&gt;&#xA;&lt;p&gt;原本，一直都期望在换了苹果笔记本后，可以继续写一写原来的代码，可以不为了工作而去写一写代码。现在，这些愿望都快要实现了，感谢大牛们的持续努力。微软的dotnet跨平台后，C#语言在macOS下也可以编译执行，现在连Delphi也可以玩一玩了，真开心，像极了黑暗破坏神的重制版。当然了，pascal语言一直都在，只不过我没有关注了。现在，可以在macOS下写一写pascal语言，而且和当初使用Delphi的感觉是那么相似。&lt;/p&gt;&#xA;&lt;p&gt;曾经在怀念的时候，去过Delphi的官网看过，但是由于需要授权，被成功劝退了。现在突然有这样的一个工具，我非常欣喜，可以在macOS下写和Delphi一样的语言，倍感亲切。第一时间下载下来，满怀期待。&lt;/p&gt;&#xA;&lt;p&gt;在下载中发现sourceforge.net下载很慢，我第一时间想到迅雷，可是最近的迅雷都要会员才能加速。无奈之下问了问百度，有网友说在下载的时候重新选择一下镜像，结果速度飞快。非常不喜欢被迅雷玩弄的感觉，但是却不能自己写一个？我想或许可以考虑一下了。&lt;/p&gt;&#xA;&lt;p&gt;下载有三个文件：&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;fpc-3.2.2.intelarm64-macosx.dmg&#xA;fpc-src-3.2.2-20210709-macosx.dmg&#xA;Lazarus-2.2.4-0-x86_64-macosx.pkg&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;安装顺序和上面的顺序一致，即可。也可以参阅&lt;a href=&#34;https://wiki.freepascal.org/Installing_Lazarus/zh_CN#.E5.9C.A8Mac_OS_X.E4.B8.8B.E5.AE.89.E8.A3.85_Lazarus&#34;&gt;官网文档&lt;/a&gt;。&lt;/p&gt;&#xA;&lt;p&gt;因为使用gdb进行调试，而苹果电脑却不给普通用户使用，可以加sudo来操作，可是lazarus没有地方调试，所以呢去问百度，最后找到了gdb签名的办法，可是我这里行不通，在最后关头，想到了官网查询文档，结果还真有。官网的做法是使用lldb替代gdb。详细说明在&lt;a href=&#34;https://wiki.freepascal.org/GDB_Debugger_Tips#macOS&#34;&gt;这里&lt;/a&gt;。&lt;/p&gt;&#xA;&lt;p&gt;最终如愿以偿，在macOS上运行了lazarus。当然了，现在还有其他的工作要做，先把python学习一下，我这个跳来跳去的也不是个办法，先一个一个解决吧！在看到lazarus之前，我居然把多年前用到的netbean下载下来，看到可以拖拉的Swing控件，我笑了，原来Java也可以这样操作～～。&lt;/p&gt;&#xA;&lt;p&gt;ps.2023-07-04&lt;/p&gt;&#xA;&lt;p&gt;玩转了一段时间，发现毕竟还是老了，现在的软件开发越来越便捷，更多的库和开发模式，都已经不在适应原来的模式，而自己也在不断的断舍离，python和java已经足够解决自己的问题，而在不断的学习新语言中也发现自己现在真正喜欢的语言。如果有开发需要，也会安装上需要的语言，所以，暂时删除了。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://wiki.freepascal.org/Uninstalling_Lazarus_on_macOS&#34;&gt;删除地址&lt;/a&gt;,按照删除脚本完全可以删除。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Quitsomking</title>
      <link>https://guobingyi.github.io/blog/quitsomking/</link>
      <pubDate>Sat, 08 Oct 2022 21:56:37 +0800</pubDate>
      <guid>https://guobingyi.github.io/blog/quitsomking/</guid>
      <description>&lt;h2 id=&#34;戒烟&#34;&gt;戒烟&lt;/h2&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;海象说：“是时候改变了！”&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://guobingyi.github.io/img/yan.jpeg&#34; alt=&#34;云&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;不知道自己戒烟了多少次，每次都有理由重新吸起来。难道烟就真的那么有吸引力吗？我想不是。而是自己为吸而找的理由，最多的理由是她陪伴自己的时间比较多，也是自己的时间。那么，现在是什么理由让我戒掉呢？我想，是身体告诉我的。最近的一次身体不适是肾结石中的石头自己掉下来，在疼痛的那个晚上，我想到了人在生病的时候是没有尊严的。毕竟，疼的时候只有自己知道，也只有自己知道舒服的时候是什么样的状态，那个时候不想抽烟，即使抽了，身体也诚实的告诉你，她并不能为你改变什么，甚至让你更加难受～～。&lt;/p&gt;&#xA;&lt;p&gt;慢慢的，我开始去感受身体给我信号，我才发现身体已经不像以前那样，逐渐的开始走下坡路。抽烟对于我来说是一种习惯，当开心的时候来一只，当难过的时候来一只。每次抽烟的时候好像都有一种解脱的感觉，每次都被赋予了不一样的使命。逐渐&#xA;我开始讨厌这种感觉，但是又离不开这种感觉。因为，生活上的改变让自己一下子无法适应，也让自己无法安心。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Autotest</title>
      <link>https://guobingyi.github.io/code/autotest/</link>
      <pubDate>Mon, 03 Oct 2022 15:12:08 +0800</pubDate>
      <guid>https://guobingyi.github.io/code/autotest/</guid>
      <description>&lt;h2 id=&#34;自动化测试&#34;&gt;自动化测试&lt;/h2&gt;</description>
    </item>
    <item>
      <title>1day</title>
      <link>https://guobingyi.github.io/100day/1day/</link>
      <pubDate>Sat, 20 Aug 2022 14:20:30 +0800</pubDate>
      <guid>https://guobingyi.github.io/100day/1day/</guid>
      <description>&lt;h2 id=&#34;第一天&#34;&gt;第一天&lt;/h2&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;“Programming is an art. Don&amp;rsquo;t spend all your time sharpening your pencil when you should be drawing.” PAUL HUDSON&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;开始的速度还不错，或许是因为学过编程的缘故，也或许原来就一直想学习，有过铺垫。一般按照实际一天5节的速度，所以先把基础部分学完，在此做一个标记，将前14天的内容补充如下：&lt;/p&gt;&#xA;&lt;h3 id=&#34;day-1-to-day-14&#34;&gt;Day 1 to Day 14&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;code here&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;day15&#34;&gt;Day15&lt;/h3&gt;&#xA;&lt;p&gt;从这天开始，已实际的项目介绍SwiftUI。&lt;/p&gt;&#xA;&lt;h4 id=&#34;swiftui控件不能超过10个超过后用group来避免这个限制&#34;&gt;SwiftUI控件不能超过10个，超过后用Group来避免这个限制。&lt;/h4&gt;&#xA;&lt;h3 id=&#34;day16&#34;&gt;Day16&lt;/h3&gt;&#xA;&lt;p&gt;不知道什么情况，从刚刚开始学习后，发现需要补充一些知识，而这些知识都源自于苹果的官网文档。&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;The Objective-C Programming Language 语言参考&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;https://developer.apple.com/library/archive/documentation/Cocoa/Conceptual/ObjectiveC/Introduction/introObjectiveC.html#//apple_ref/doc/uid/TP30001163&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;ol start=&#34;2&#34;&gt;&#xA;&lt;li&gt;Cocoa Fundamentals Guide&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;https://developer.apple.com/library/archive/documentation/Cocoa/Conceptual/CocoaFundamentals/Introduction/Introduction.html#//apple_ref/doc/uid/TP40002974&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;ol start=&#34;3&#34;&gt;&#xA;&lt;li&gt;Apple 设计资源&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;https://developer.apple.com/cn/design/resources/&#xA;&lt;/code&gt;&lt;/pr</description>
    </item>
    <item>
      <title>Become_an_iOS_developer_in_2022</title>
      <link>https://guobingyi.github.io/blog/become_an_ios_developer_in_2022/</link>
      <pubDate>Sat, 20 Aug 2022 11:18:06 +0800</pubDate>
      <guid>https://guobingyi.github.io/blog/become_an_ios_developer_in_2022/</guid>
      <description>&lt;h1 id=&#34;在2022年成为一个苹果开发人员&#34;&gt;在2022年成为一个苹果开发人员&lt;/h1&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;一切都不是空穴来风，我已经蓄谋已久。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://guobingyi.github.io/img/coding-man-1.jpg&#34; alt=&#34;hackingwithswift&#34;&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;缘起&#34;&gt;缘起&lt;/h2&gt;&#xA;&lt;p&gt;因为一切都是那么自然，我糊里糊涂的上了计算机的大学。为了曾经的梦想，我选择了做一名程序员。在这个行业里待了许久，曾经的梦想也被现实打败，我不得不为了生活，而做出选择。&lt;/p&gt;&#xA;&lt;p&gt;调整了一段时间，做出了一个选择，生了二胎，上天的恩赐，双胞胎。在疫情期间，我不断的问自己，我的梦想是什么？&lt;/p&gt;&#xA;&lt;p&gt;老婆经常问我，我到底想干什么？我不知道，直到最近，我想清楚了，我到底要干什么？&lt;/p&gt;&#xA;&lt;p&gt;想做一个自由职业者，那么最近的目标是什么？我想，是做一名苹果开发者。&lt;/p&gt;&#xA;&lt;p&gt;学习，生活，带来给我的是开发技能的不断提升，有了1万小时的学习，我知道，我对我目前所掌握的技能有信心。&lt;/p&gt;&#xA;&lt;p&gt;可是，原来是为了生活不得不把时间放在工作上，而工作上的技能却又让我知道，我得花时间来学习苹果开发。终于在最后的一份工作中，可以使用了苹果电脑。那个时候，是幸福的，因为离自己的梦想越来越近。&lt;/p&gt;&#xA;&lt;p&gt;后来，生活又让我不得不离开，我的生活中没有了电脑。那个时候，我也错误的觉得，我是幸福的。&lt;/p&gt;&#xA;&lt;p&gt;最后，我从梦中醒来，我知道我需要什么。&lt;/p&gt;&#xA;&lt;h2 id=&#34;开始&#34;&gt;开始&lt;/h2&gt;&#xA;&lt;p&gt;从拥有了苹果笔记本后，到现在7年的时间，断断续续的学习，都没有今天那么透彻的领悟。&lt;/p&gt;&#xA;&lt;p&gt;刚刚开始，被苹果的文档搞的非常崩溃，因为没有对比就没有伤害。和微软的文档对比起来，真的是，让我这么看呢？&lt;/p&gt;&#xA;&lt;p&gt;原来一直以为微软，Oracle，Google更新的非常快，现在看看苹果，我真是好天真。这货一年两次的速度，是恒定不变的呀。从我认识swift开始，到现在的swiftUI，我都经历了什么？&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;开始使用的拖拉方式编程，到现在的定义编程，真的，越来越方便多了。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;一直在看&lt;a href=&#34;https://www.youtube.com/watch?v=3lahkdHEhW8&amp;amp;t=163s&#34;&gt;白胡子老师的课程&lt;/a&gt;,到现在都没有听完🤦‍♂️。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;至今都没有写出个可以拿的出手的东西，android起码还写了个动物的叫声给宝贝玩一下。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;现在，有了自己的时间，并且swiftUI的到来，是时候学习起来了。&lt;/p&gt;&#xA;&lt;p&gt;读完&lt;a href=&#34;https://www.hackingwithswift.com/articles/230/how-to-become-an-ios-developer&#34;&gt;如何在2021成为一个苹果开发者&lt;/a&gt;这篇文章让我信心大增，读完之后对作者非常崇拜，目前就跟随&lt;a href=&#34;https://www.hackingwithswift.com/about&#34;&gt;他&lt;/a&gt;学习，希望在100天之后，技能有所精进。我也会开一个栏目，专门来记录这100天的成果。&lt;/p&gt;</description>
    </item>
    <item>
      <title>少儿编程</title>
      <link>https://guobingyi.github.io/blog/%E5%B0%91%E5%84%BF%E7%BC%96%E7%A8%8B/</link>
      <pubDate>Wed, 29 Jun 2022 21:33:34 +0800</pubDate>
      <guid>https://guobingyi.github.io/blog/%E5%B0%91%E5%84%BF%E7%BC%96%E7%A8%8B/</guid>
      <description>&lt;h2 id=&#34;少儿编程&#34;&gt;少儿编程&lt;/h2&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;连乔布斯的话都引用进来了，每个人都应该学会编程。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;不可否认，编程是好，但是不致于这样。好比，你觉得肉吃得香，不能让素食者也这样认为吧，不强人所难。&lt;/p&gt;&#xA;&lt;p&gt;少儿编程，玩玩还行，别入戏太深！&lt;/p&gt;&#xA;&lt;p&gt;&lt;em&gt;&lt;strong&gt;以下是培训的内容，大概做了个笔记：&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;培训主要内容：&#xA;&#xA;1.自我观念设限&#xA;&#xA;自信孩子永远在找方法，解决问题，达成目标。&#xA;&#xA;父母的语言是孩子一生的魔咒。&#xA;&#xA;打开孩子限制性概念的方法：&#xA;扩大孩子的优势&#xA;放大孩子的优点&#xA;&#xA;你鼓励什么，就会收获什么。&#xA;&#xA;源头：逻辑思维能力和动手能力。（如何去培养？）&#xA;一、做家务&#xA;爱动手的孩子，&#xA;学会爱家人。&#xA;黎明即起，洒扫庭除。&#xA;&#xA;小学阶段两大重点：&#xA;一、培养良好的习惯&#xA;二、提升逻辑思维能力&#xA;&#xA;逻辑思维能力是智力的核心。&#xA;&#xA;1.分解能力（表现）&#xA;例子：鸡兔同笼&#xA;方法：少儿编程。&#xA;为什么要学编程？&#xA;一、时代发展需求&#xA;&#xA;二、国际政策的支持&#xA;&#xA;三、真的对孩子好&#xA;（1）动画式的游戏学习方法&#xA;（2）从玩游戏变成戒游戏？&#xA;&#xA;2.总结归纳&#xA;&#xA;3.抽象能力&#xA;&#xA;4.算法能力&#xA;&#xA;-----------家长们的神回复-----------&#xA;&#xA;少儿编程？核桃编程10节课 感恩有你 9.9 &#xA;100个名额，10000个家长！&#xA;&#xA;家长很有执行力，成功抢到了课程！&#xA;&#xA;不看广告，看疗效！&#xA;&#xA;助教老师赶紧上链接，怎么9.9的课买不到？不要999，不要99，只要9.9，赶紧上链接。&#xA;&#xA;成功在百忙之中，看了一场直播带货课，孩子学会了用手机如何抢9.9的课程。&#xA;&#xA;卖课的老师非常拼呀！&#xA;&#xA;讲课5分钟，卖课半小时，厉害！！！&#xA;&lt;/code&gt;&lt;/pr</description>
    </item>
    <item>
      <title>如何安装新系统</title>
      <link>https://guobingyi.github.io/blog/%E5%A6%82%E4%BD%95%E5%AE%89%E8%A3%85%E6%96%B0%E7%B3%BB%E7%BB%9F/</link>
      <pubDate>Tue, 21 Jun 2022 17:45:08 +0800</pubDate>
      <guid>https://guobingyi.github.io/blog/%E5%A6%82%E4%BD%95%E5%AE%89%E8%A3%85%E6%96%B0%E7%B3%BB%E7%BB%9F/</guid>
      <description>&lt;h2 id=&#34;如何安装新系统&#34;&gt;如何安装新系统&lt;/h2&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;貌似，学习计算机的，都得会安装操作系统？&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;现在安装操作系统容易多了，网上一搜，一大片安装操作系统的方法，如大白菜，深度，老挑毛等，只要准备一个U盘，再找一个ghost的操作系统，直接安装就好了。当然，硬件不能出问题，如果出现了问题还真不行。不会处理硬件上的问题，是一个痛。&lt;/p&gt;&#xA;&lt;p&gt;现在不是讲如何安装操作系统的，而是对自己安装操作系统的一个回顾。&lt;/p&gt;&#xA;&lt;p&gt;2006年毕业，到现在自己安装了多少次操作系统，或许都已经忘的差不多了，但是总有一些记忆挥之不去。那就是，你是学习计算机的，你就会安装操作系统。不可否认，我们学习计算机的，会安装操作系统，但是我们不是电脑城里的电脑工作人员，他们的主要工作就是安装操作系统，提供电脑的各种疑难杂症，进行处理。我每次介绍自己的时候，我说我是程序员，我做软件开发。但是，对方都会认为我就是维修电脑，安装操作系统的人，可以想象，他们遇到的人，就是电脑城里的系统维护人员。所以，电脑出现了问题，想到有这样的一个朋友，或者认识的人，他们都会找到你，让你帮他们修理电脑，准确的说，更多的就是安装操作系统，因为硬件出现了问题，我真的就搞不定了。一次两次之后，他们的电脑出现了问题，让你帮忙修理，而且还会推荐给他们的朋友，这样一来，你就真的成为了系统维护人员了。但是，我的工作性质不在这里，所以遇到了比安装操作系统更难的问题时，比如硬件出现了问题，我搞不定，他们就说你的技术不行，恩，是的，在他们的评价机制里，这个”不行“。&lt;/p&gt;&#xA;&lt;p&gt;后来，我不接这样的工作了，并不是我矫情，而是我觉得出力不讨好的事情，不做了。或许是年龄大了，也或许是圈子广了，不屑通过这样的方式来推广自己了。&lt;/p&gt;&#xA;&lt;p&gt;现在，用macOS后，什么操作系统，就更不会安装了。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Arduino</title>
      <link>https://guobingyi.github.io/code/arduino/</link>
      <pubDate>Wed, 27 Oct 2021 16:39:15 +0800</pubDate>
      <guid>https://guobingyi.github.io/code/arduino/</guid>
      <description>&lt;h3 id=&#34;0x00-初识arduino&#34;&gt;0x00 初识Arduino&lt;/h3&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;原来的梦想就是能自己DIY做些东西。&#xA;原来看的电影里总是老外在地下室捣鼓一下，就发明了各种个样的东西!&#xA;后来自己学了计算机，终于可以大展身手的时候，才发现，自己能做的仅仅数据的处理工作，输入，输出，太没劲～～&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;我自己比较喜欢倒腾，但是就是会受限与自己熟悉的方面。比如，我特别喜欢去看一些编程语言，然后用它们来对比，如何快速的完成项目。python,ruby,go,java,dotnet core等等。当然了，我所谓的项目就是自己熟悉的领域，Web编程或者命令行，桌面等等。&lt;/p&gt;&#xA;&lt;p&gt;由于关注dotnet core的跨平台，所以去了解了一下asp.net的现状，发现这货现在的开发效率是真的高太多了，几个命令行就可以做出一个基本的原型。抱着兴奋的态度想要推荐给周围的人的时候，发现别人说在玩单片机，反而给我搞蒙了，啥，这么牛，推荐来看看～～&lt;/p&gt;&#xA;&lt;p&gt;Arduino第一次映入眼帘，是个什么东西呀？幸好有Mac版本的，不然让我用那台Thinkpad x230的话，我还是比较不爽的，速度太慢，Windows的操作感受真不想回去。&lt;/p&gt;&#xA;&lt;p&gt;我的想法还是比较保守的，先百度，当然了能google更好。再去B站看看视频，当然了youtube上的资源更全些。刚开始发现，Arduino的IDE还不错，毕竟还是有点样子的。更何况，操作起来也挺方便～～。听了一会，发现需要个什么开发板，我去，还需要点硬件的投资嘛，好，按照视频的推荐，去买了一个。然后，小白告诉我有很多东西的，推荐了许多来看看，发现有个套装，219的价格，我去，忍了，买。（当然了，买了之后，有后悔，但是也有庆幸～～，后面聊）&lt;/p&gt;&#xA;&lt;p&gt;板子是三天后到的，在这个空档期，把asp.net的开发教程走了一遍，毕竟都学习了嘛～～&lt;/p&gt;&#xA;&lt;p&gt;拿到板子开始学习了，很兴奋，可以学习了。发现，板子就可以用个LED的的闪烁，完了。:(&lt;/p&gt;&#xA;&lt;p&gt;还好有了套装，按照套装做了个双色的LED实验，老师在介绍的时候，忘记说为什么要这样接，好像是书上有，当时是硬着头皮直接和老师的一样接，OK，成功了～～ 但是一点也不喜悦，因为那些线为什么要这样接，不知道，对，真的一点都知道？！@@#@#@，整个人都不好了，难道每个线都这样记，那没有乐趣嘛。这个时候，还好听了一个台湾老师的讲课，才明白～～，面包版的线路，为什么要这样接，正负，信号，插脚。这样兴趣才提高了一点点。&lt;/p&gt;&#xA;&lt;p&gt;开始对Arduino重新有了一个认识，就是可以通过编程的方式，把代码写入开发版中，让代码控制信号。而信号可以在不同的模块中使用，如射线的接收与发射，在通过Wi-Fi模块进行控制，便成了物联网。真的是这样的吗？&lt;/p&gt;&#xA;&lt;p&gt;小白送来了Wi-Fi模块和射线的接收发送模块，而我为了验证一下学习成果，买了门禁卡的模块，想自己试试，从而让自己不需要每年都找物管刷卡，或者买卡。&lt;/p&gt;&#xA;&lt;p&gt;其实，最让人兴奋的是看着这些小小的模块，把曾经的想法一一实现了，那就是最大的乐趣。看到电子产品或者有电子模块的东西，都是由最简陋的电子模块实现的，现在看什么都是模块的组装～～&lt;/p&gt;&#xA;&lt;h3 id=&#34;0x01-该从哪里入手呢&#34;&gt;0x01 该从哪里入手呢？&lt;/h3&gt;&#xA;&lt;p&gt;其实，我自己都不知道怎么入手的。&lt;/p&gt;&#xA;&lt;p&gt;但是，入手前问问自己喜不喜欢就可以了。喜欢，就投入，不喜欢，还说什么～～&lt;/p&gt;&#xA;&lt;p&gt;提前准备的是看一看Arduino的介绍，可以用来干什么，有没有Get到自己的兴趣所在，如果有，那么继续&amp;hellip;&amp;hellip;&lt;/p&gt;&#xA;&lt;p&gt;虽然说买个套装贼贵，但是没人指导，这个是最好的选择。为什么这样说呢？套装中有个开发版，有几个模块，面包版，电线，LED灯，电阻等等，为你做实验提供了基本的条件。照着提供的视频学习，基本上不会出现怪异的问题，提高学习兴趣。没有指导，又特别想学，推荐买个套装，贵就贵吧，毕竟入门了是吧～～&lt;/p&gt;&#xA;&lt;p&gt;但是，如果有人指导，当然是要什么买什么，价格便宜。适合资金紧张，又想学的人。&lt;/p&gt;&#xA;&lt;p&gt;当然了，无论哪种选择，都能学到东西。难道，不是吗？最合适的比喻就是组装台式机和品牌台式机的差别。（苹果电脑除外）&lt;/p&gt;&#xA;&lt;p&gt;手里有了硬件上的支持，就可以开始动手。&lt;/p&gt;&#xA;&lt;p&gt;Let&amp;rsquo;s go!&lt;/p&gt;&#xA;&lt;h3 id=&#34;0x02-下载-arduino-ide&#34;&gt;0x02 下载 Arduino IDE&lt;/h3&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.arduino.cc/&#34;&gt;官网&lt;/a&gt;下载Arduino的IDE。如果不知道去那里下载，那么在点&lt;a href=&#34;https://www.arduino.cc/en/software&#34;&gt;Software下载&lt;/a&gt;。还不知道怎么弄，那么还得去&lt;a href=&#34;https://search.bilibili.com/all?keyword=arduino&#34;&gt;B站&lt;/a&gt;去看看基础课程吧。毕竟，学习还是要多看看，是吧？&lt;/p&gt;&#xA;&lt;h3 id=&#34;0x03-你好arduino&#34;&gt;0x03 你好，Arduino！&lt;/h3&gt;&#xA;&lt;p&gt;我记得，任何一门语言都会对着世界说，你好！可惜，如果在Arduino上使用的话，你还得买个显示屏模块，算了，我们用LED对世界说你好吧～～&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;void setup()&#xA;{&#xA;  //定义输出&#xA;  pinMode(LED_BUILTIN, OUTPUT);&#xA;}&#xA;void loop()&#xA;{&#xA;  digitalWrite(LED_BUILTIN, HIGH); &#xA;  delay(2000);                    &#xA;  digitalWrite(LED_BUILTIN, LOW);  &#xA;  delay(2000);                   &#xA;}&#xA;&lt;/code&gt;&lt;/pr</description>
    </item>
    <item>
      <title>Otheridea</title>
      <link>https://guobingyi.github.io/blog/otheridea/</link>
      <pubDate>Thu, 16 Sep 2021 20:31:23 +0800</pubDate>
      <guid>https://guobingyi.github.io/blog/otheridea/</guid>
      <description>&lt;h2 id=&#34;杂感一篇&#34;&gt;杂感一篇&lt;/h2&gt;&#xA;&lt;pre&gt;&lt;code&gt;最终被别人的引导所折服，原来自己的学生生涯是这样度过的。别人在玩的时候，我在玩。别人在玩的时候，我依然再玩。我居然玩不够。而我也因此要吃吃的苦。我补习三年，最终到一个三线城市读完本科。找到一家公司，从最底层的小工开始奋斗。历经13年，最终到房子被占告终。我13年吃尽了别人未曾经历的苦，看惯了别人的冷嘲热讽，依旧奋斗。最终落下病根，成为了一名糖尿病患者。我后悔吗？没有。至少现在如此。生活总会教会你成长，也会让你有所得失。&#xA;&#xA;我该恨当初的自己吗？或许该，也或许不该。漫长的人生可以是一辈子，也可以是短暂的生命终结。看到有些人在耗费自己的人生，也看到有些人在诠释自己的人生。可悲的是，耗费人生的有很长的时间，诠释人生的却只有少量的时间。这难到又有对与错之分吗？每每想到这些，都会想到自己的渺小与无奈。与其这样，不如那样，什么才是对的呢？无对错之分！唯独坚守自己的信念，告诉自己，顺势而为。&#xA;&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>Howtoleanenglish</title>
      <link>https://guobingyi.github.io/blog/howtoleanenglish/</link>
      <pubDate>Tue, 03 Aug 2021 14:56:49 +0800</pubDate>
      <guid>https://guobingyi.github.io/blog/howtoleanenglish/</guid>
      <description>&lt;h3 id=&#34;how-to-learn-english&#34;&gt;How to Learn English&lt;/h3&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;以其在不断的纠结中学习，不如从现在开始。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;本文摘自youtube上的学习计划，&lt;a href=&#34;https://www.youtube.com/watch?v=5-T6Xqlh6BU&#34;&gt;原视频&lt;/a&gt;在这里。&lt;/p&gt;&#xA;&lt;p&gt;You won&amp;rsquo;t of course use your entire study time each day just focusing on one thing, but you will spend the majority of time each day focusing on one aspect of learning English.&lt;/p&gt;&#xA;&lt;p&gt;✅Here is the plan:&lt;/p&gt;&#xA;&lt;p&gt;THINGS YOU WILL NEED:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;1 hour per day (30 minutes will work as well).&lt;/li&gt;&#xA;&lt;li&gt;a notebook and a pen to write down new vocabulary each day.&lt;/li&gt;&#xA;&lt;li&gt;an English song.&lt;/li&gt;&#xA;&lt;li&gt;an English a book.&lt;/li&gt;&#xA;&lt;li&gt;an English TV show.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;MONDAYS (Spend 30-40 minutes Reading)&lt;/p&gt;</description>
    </item>
    <item>
      <title>The Tomorrow War</title>
      <link>https://guobingyi.github.io/movie/thetomorrowwar/</link>
      <pubDate>Tue, 06 Jul 2021 14:40:12 +0800</pubDate>
      <guid>https://guobingyi.github.io/movie/thetomorrowwar/</guid>
      <description>&lt;h2 id=&#34;明日之战&#34;&gt;明日之战&lt;/h2&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;过瘾，真的很过瘾！&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://guobingyi.github.io/img/movie/The_Tomorrow_War.webp&#34; alt=&#34;明日之战&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;推荐指数：⭐️⭐️⭐️⭐️⭐️&lt;/p&gt;&#xA;&lt;p&gt;2021第二部让人感觉不错的电影，的确，许久了，都没有一部科幻和灾难片让我这么的兴奋。想一口气看完，却又省下来看的感觉！&lt;/p&gt;&#xA;&lt;p&gt;时间跳跃的方式对战未来生物，最终通过找到外星人的地方搞定。看似很简单的情节，但是仔细看，还是有许多让人感到兴奋的地方。比如，军队打完了，招普通人进行参战，战斗力可想而知，但是，人都被打完了呀～那怎么办呢？最终，贫民上，上之前看一下你多久挂，这样你也就可以放松的去了。很多东西都不能细想，看看画面还是很不错的。题别是刻画的外星物种，战斗力彪悍啊。单兵作战非常厉害，但是如果集团作战呢？感觉未来都是单兵作战？算了，过瘾就好。故事还是不错的，或许因为是电影没有时间说那么清楚。比看的《第八天之夜》要轻松些，NetFlix也开始出的有点不靠谱的。&lt;/p&gt;</description>
    </item>
    <item>
      <title>NuevoOrden</title>
      <link>https://guobingyi.github.io/movie/nuevoorden/</link>
      <pubDate>Wed, 16 Jun 2021 18:50:54 +0800</pubDate>
      <guid>https://guobingyi.github.io/movie/nuevoorden/</guid>
      <description>&lt;h2 id=&#34;新秩序&#34;&gt;新秩序&lt;/h2&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;真实的，过于让人害怕！&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://guobingyi.github.io/img/movie/Nuevo_orden.jpg&#34; alt=&#34;新秩序&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;推荐指数：⭐️⭐️⭐️⭐️⭐️&lt;/p&gt;&#xA;&lt;p&gt;2021看过非常精彩的一部，可以说目前最精彩的一部。或许，很久没有这样的感受，还记得原来说最害怕的鬼片就是鬼怎么都打不死，并且是好人都死了。现在，看来，这部片子又重新刷新了我的世界观。&lt;/p&gt;&#xA;&lt;p&gt;为什么？我想看完以后，你或许和我一样，对生活，对人又有了不一样的思考。故事的开篇很平淡，但是熬过之后便开始扣人心弦，步步逆转，根本抓不到导演的意图，但却让人大呼过瘾，原来这个才是真实的。想起原来的一部电影里说的：“你想要的结局，都是别人给你的。“真正的结局，或许比现实更加残酷。电影中很接近我们的现实，很有可能就会发生，但是，故事里的人物体现的很好。如果什么都能猜到，那么又会是另外的体验。我喜欢猜不到的体验，我喜欢不一样的体验。&lt;/p&gt;&#xA;&lt;p&gt;人性原来是那么的可怕，原来人都不那么的简单，最终谁都不能相信。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Rust by Example</title>
      <link>https://guobingyi.github.io/code/rustbyexample/</link>
      <pubDate>Tue, 15 Jun 2021 17:48:43 +0800</pubDate>
      <guid>https://guobingyi.github.io/code/rustbyexample/</guid>
      <description>&lt;h1 id=&#34;heading&#34;&gt;&lt;/h1&gt;</description>
    </item>
    <item>
      <title>LearnRust</title>
      <link>https://guobingyi.github.io/code/learnrust/</link>
      <pubDate>Sat, 29 May 2021 11:20:30 +0800</pubDate>
      <guid>https://guobingyi.github.io/code/learnrust/</guid>
      <description>&lt;h1 id=&#34;rust-学习笔记&#34;&gt;Rust 学习笔记&lt;/h1&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;自从在工作是使用了Go语言后，就不断的打破原来的模式，想什么都用Go来实现，可惜有些东西，特别是Windows下的窗口程序，就无能为力了，其他的好像都可以试一试。因为关注Go，所以Node的作者想重新写Node的时候，选择了Go，最后居然换成了Rust。这不得不让我对这门语言有了新的看法，特别是微软和Google都要推Rust的时候，我放弃了我原来对这门语言的偏见，重新、认真的学习一遍，让我看看到底是什么让它受到那么多人的关注。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;&#xA;&lt;p&gt;系统级别的语言，可以和C/C++抗衡？目标就是为了取代C++。&lt;/p&gt;&#xA;&lt;h2 id=&#34;介绍&#34;&gt;介绍&lt;/h2&gt;&#xA;&lt;p&gt;Rust语言能够编写速度更快，更加可靠的软件。&lt;/p&gt;&#xA;&lt;p&gt;学习笔记为1.52.1版本，如果你来晚了，最好参考&#xA;&lt;a href=&#34;https://doc.rust-lang.org/book/&#34;&gt;最新文档&lt;/a&gt; 来进行学习。你懂的～～&lt;/p&gt;&#xA;&lt;h2 id=&#34;0x01-开始&#34;&gt;0x01 开始&lt;/h2&gt;&#xA;&lt;h3 id=&#34;1目标&#34;&gt;1.目标&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;安装&lt;/li&gt;&#xA;&lt;li&gt;写个输出hello world的程序&lt;/li&gt;&#xA;&lt;li&gt;使用cargo工具来构建系统&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;2-安装&#34;&gt;2 安装&lt;/h3&gt;&#xA;&lt;h4 id=&#34;21-安装&#34;&gt;2.1 安装&lt;/h4&gt;&#xA;&lt;p&gt;其实在苹果电脑上，能用brew安装的，我一般都会使用。可惜，Rust推荐的最佳方式，并不是。😊&lt;/p&gt;&#xA;&lt;p&gt;所以，使用Rust的安装方式，最佳。&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ curl --proto &amp;#39;=https&amp;#39; --tlsv1.2 https://sh.rustup.rs -sSf | sh&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;安装成功后，将在命令端输出：&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Rust is installed now. Great!&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;22-更新&#34;&gt;2.2 更新&lt;/h4&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ rustup update&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;23-删除&#34;&gt;2.3 删除&lt;/h4&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ rustup self uninstall&#xA;&lt;/code&gt;&lt;/pr</description>
    </item>
    <item>
      <title>Downloadtools</title>
      <link>https://guobingyi.github.io/mac/downloadtools/</link>
      <pubDate>Sat, 01 May 2021 09:56:21 +0800</pubDate>
      <guid>https://guobingyi.github.io/mac/downloadtools/</guid>
      <description>&lt;h2 id=&#34;macos下的下载工具&#34;&gt;macOS下的下载工具&lt;/h2&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;问君能有几多愁,恰似一江春水向东流。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;我也不知道最近我都干了什么，为什么会这样干？&lt;/p&gt;&#xA;&lt;p&gt;我喜欢看电影，特别喜欢下载电影观看，但是问题来了，迅雷的对版权问题的态度（应版权方要求,文件无法下载），我无法搞定，毕竟迅雷是我的首先下载工具，那么怎么办呢？运气好呢，找到了新的资源，没有被迅雷查询到；要不就是等，等到可以下载。&lt;/p&gt;&#xA;&lt;p&gt;我曾经在网上查询，如何替代迅雷，尝试了FDM，Aria2。FDM下载一般的速度真的不可直视，不断使用不断放弃，根本没有成功下载过一个资源，所以，再也不用了。Aria2自己编译后，尝试过下载，因为下载一直没有速度，果断放弃了，根本玩不转。&lt;/p&gt;&#xA;&lt;p&gt;这次，因为想看一下日本的神剧《半泽直树》，发现迅雷根本下不了，但是种子是有的，看看了网上的各种说法，说什么可以放弃迅雷的文章，其实，你懂的，看看就好，不要当真。迅雷可以下载的时候，速度比任何的工具都强，没有什么好反驳的。这次抱着试一试的态度，用brew安装了aria2,虽然想去编译，但是失败了，就简单点吧，直接安装不香？找了个资源，准备下载，居然可以用了，速度在10kb~30kb左右，回到了十年前。但是，有总比没有好吧，既然可以用，就查阅了下资料，说要配置bt-tracker，这样速度会快些，好吧，我依照网上的文章找到了所谓bt服务的资源地址：&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;https://github.com/ngosang/trackerslist&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;添加各种资源后，速度依旧，感觉没啥用呀？又添加了以下的配置和dht.dat文件。&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;enable-dht=true&#xA;&#xA;bt-enable-lpd=true&#xA;&#xA;enable-peer-exchange=true&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;一个小时过后，没有速度，一个700M的速度，居然下了4个小时，并且在98%的时候，我放弃了。虽然我害怕出现各种问题，但是，我依旧关闭了。&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;aria2c 下载地址（有特殊符号时，用&amp;#34;&amp;#34;括起来）&#xA;&#xA;例如：&#xA;&#xA;aria2c &amp;#34;magnet:?xt=urn:btih:F184B4803EC3A5DDE5CFAAEC687B013D4386F206“&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;第二天，赶了个早，继续下载，发现速度到100kb左右了，耐着性子，重新找了个下载软件 &lt;strong&gt;Folx&lt;/strong&gt;。免费版本的，刚刚开始的速度都在20kb左右，但是可以同时下载3个，所以就60kb了。在aria2下载玩第一文件后，我开始用 Flox来下载第二季，aria2来下载第一季，想让两个软件对比以下。aria2也支持多文件下载,把文件到文本中，每个文件一行。例如：&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;magnet:?xt=urn:btih:F184B4803EC3A5DDE5CFAAEC687B013D4386F206&#xA;magnet:?xt=urn:btih:F184B4803EC3A5DDE5CFAAEC687B013D4386F207&#xA;magnet:?xt=urn:btih:F184B4803EC3A5DDE5CFAAEC687B013D4386F208&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;使用以下命令进行下载：&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;aria2c -c --input-file=download.txt&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;令我震惊的是第三天的速度，他们都达到了1M的速度，设置 Folx最快的时候到5M。两个软件在后面的表现让我非常震惊，居然可以和迅雷一样的速度了。&lt;/p&gt;&#xA;&lt;p&gt;所以，可以用迅雷就用，不可以还是可以用aria2和Folx来代替的。最终，我留下了它们。&lt;/p&gt;</description>
    </item>
    <item>
      <title>The Blind Side</title>
      <link>https://guobingyi.github.io/movie/the-blind-side/</link>
      <pubDate>Wed, 10 Mar 2021 19:16:28 +0800</pubDate>
      <guid>https://guobingyi.github.io/movie/the-blind-side/</guid>
      <description>&lt;h2 id=&#34;弱点&#34;&gt;弱点&lt;/h2&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;不以善小而不为,不以恶小而为之。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://guobingyi.github.io/img/movie/TheBlindSide.webp&#34; alt=&#34;弱点&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;不知道为什么，自从手机内存不够后，微信又开通了视频频道后，我比较喜欢刷视频，因为这样总感觉到时间过得快些。不小心刷到了这部电影《弱点》，感觉还不错，所以第一时间下载了电影，准备和老婆一起看一下，可惜最后还是我自己先看了。&lt;/p&gt;&#xA;&lt;p&gt;故事的开始就让人挺揪心的，黑人的题材，基督徒的学习，真人故事改编，但是却让我感受到什么叫做大爱无疆。或许，不论什么人，能够接受一个黑人，并且还要留宿一晚，我觉得都得很大的心理能量。但是这个女主人做到了，有钱，并且非常又爱心，当然，这个爱心都是在她一步一步的去做，慢慢获得的。别的不说，她首先从帮助别人那里获得力量，而家人又从她身上获得力量。就这样，把爱进行传递。改写了我对有钱人的认识，我一直都以为有钱人会过得小心翼翼，但是女主家没有。他们家也参加各种体育活动，并且过的很正常，并不炫徘。难道说大家都很有钱，并不是这样的，比如像迈克这样的人都生活在这个校园里。他们家真的太有钱了，男主继承了好几个街道的餐馆，开着宝马X5，女主好像也是大户人家，开着宝马7系。住着独栋别墅。这样的生活，在路边看到一个男孩就带回家给他住一晚，并且这个男的是黑人，我震惊了。所以，有时候又不得不相信，好人有好报。我以为只有物质条件到一定的高度才会这样做，但是同样是个修理工人，却帮助迈克找到了这所学校，从此给迈克带来了好运。但是他们家庭却因为迈克的到来而不得不做出选择。也或许，像女主一样的才可以这样简单的处理这样的问题，并直接将高度提高到，是什么样的心态去帮助迈克。我像就是送人玫瑰，手留余香的道理吧。她给予迈克的同时，自己也得到了滋养，当然，我觉得最主要的是她的孩子为此也将变得更加优秀，所以富不到三代的说法，在他们那里就不存在了。因为，他们的家族里都以这种模式下去，怎么可能去落幕呢？太启发人了。这样，不断的从好的方面发展下去。可惜，我有时候听到的，就是因为做个好人，却搭上了性命，这个又是什么呢？或许，如女主一样，还得需要智慧吧！&lt;/p&gt;&#xA;&lt;p&gt;感人，感悟。看完后，心情舒适。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Photoshop</title>
      <link>https://guobingyi.github.io/blog/photoshop/</link>
      <pubDate>Tue, 09 Mar 2021 08:45:40 +0800</pubDate>
      <guid>https://guobingyi.github.io/blog/photoshop/</guid>
      <description>&lt;h2 id=&#34;photoshop-学习记录&#34;&gt;photoshop 学习记录&lt;/h2&gt;&#xA;&lt;h3 id=&#34;1-mac如何禁止adobe-creative-cloud开机自启&#34;&gt;1. mac如何禁止adobe creative cloud开机自启?&lt;/h3&gt;&#xA;&lt;p&gt;打开终端，禁止开机自启：&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;launchctl unload -w /Library/LaunchAgents/com.adobe.AdobeCreativeCloud.plist&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;恢复自启：&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;launchctl load -w /Library/LaunchAgents/com.adobe.AdobeCreativeCloud.plist&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;2-常用快捷键&#34;&gt;2. 常用快捷键&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Command + D 取消选择模块&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;[ （右括号）用来改变大小，变小，如画笔的大小&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;]（左括号）用来改变大小，变大，如画笔的大小&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;option 键用来改变相对的作用，如放大，缩小等。&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;F12 图像恢复，所有的更改都变为zero&#xA;&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>2021start</title>
      <link>https://guobingyi.github.io/blog/2021start/</link>
      <pubDate>Mon, 01 Mar 2021 10:09:53 +0800</pubDate>
      <guid>https://guobingyi.github.io/blog/2021start/</guid>
      <description>&lt;h2 id=&#34;2021-开始&#34;&gt;2021 开始&lt;/h2&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;2020过去了，2021来了。我准备好了。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;新的一年，新的开始。&lt;/p&gt;&#xA;&lt;p&gt;我或许从未想过自己会接触一个不熟悉的行业，我也从未想过要自己的主业变成了副业。但是，真的就这样发生了。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Learn Asp.net Core</title>
      <link>https://guobingyi.github.io/code/learnasp.net/</link>
      <pubDate>Tue, 26 Jan 2021 09:34:14 +0800</pubDate>
      <guid>https://guobingyi.github.io/code/learnasp.net/</guid>
      <description>&lt;h2 id=&#34;学习aspnet-core&#34;&gt;学习Asp.net Core&lt;/h2&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;开始了，就不要放弃。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;每次想去学习一点程序设计的知识，都被老婆叫停，说我已经不需要通过写代码来改变生活了。可惜，我就是喜欢程序代码，骨子里已经埋藏了许久，现在终于可以按照自己的想法来写点东西，或者可以想怎么玩就怎么玩了。工作期间，除了要去完成工作上的事宜，其他的时间还要对新技术进行预演，了解每个语言的特性。每次都是对一门语言有了认识后，就没机会深入了。&lt;/p&gt;</description>
    </item>
    <item>
      <title>怀念 Delphi</title>
      <link>https://guobingyi.github.io/blog/%E6%80%80%E5%BF%B5-delphi/</link>
      <pubDate>Wed, 13 Jan 2021 16:45:23 +0800</pubDate>
      <guid>https://guobingyi.github.io/blog/%E6%80%80%E5%BF%B5-delphi/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;Delphi 由美国Borland（宝兰）公司于1995年开发。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;最早使用Delphi的时候是小多告诉我的，那个时候他们在进行毕业论文的编写。我对Delphi的第一感受是全英文的界面，感觉好复杂的样子。那个时候我还在使用VB6，感觉这个IDE太好用了，而且市面上的书，大多数都是介绍VB6和Delphi的。而我选择了VB6，因为姜老师让我和他一起做开发的时候，我们都用VB6。所以，相当长的时间里，我都是用VB6来进行开发，到毕业的时候，终于使用上了VB.net。&lt;/p&gt;&#xA;&lt;p&gt;感觉生活总在开玩笑一样，为了毕业能找到一份工作，我大四的上学期开始为准备找工作而准备。我去了一家叫金峰的公司，他们使用Java开发，并且要求大学英语四级。而我呢？第一，大学没有考过四级；第二，我只是简单的学过Java。结果可想而知，所以，我在爱因森报了Java的程序员考试。当我拿到证书的时候，再去找工作的时候，我找到的工作是使用VB6和Delphi开发客运系统。&lt;/p&gt;&#xA;&lt;p&gt;VB6相对还比较熟悉，但是Delphi就相对有点生疏。还好，面试工作顺利过关，并且接受了下周去出差的工作。慢慢的，熟悉起Delphi的开发工作，IDE使用的黄色字体，给人感觉写代码就像很有成就感。那个时候的网络资源并不如现在那么丰富，很多资料都必须问前辈，或者读书。那个时候，前辈们相对知道的也少，很多时候都需要自己去验证。但是，更多的时候却是一个人读书，看前人的代码来编写。&lt;/p&gt;&#xA;&lt;p&gt;最初，因为工作的缘故，先熟悉VB6的代码，因为有过经验，所以相对上手快些，但是后面却发现VB6的代码开始苦涩，并且非常不易维护，很多漂亮的界面都是在Delphi下完成的，那个时候还不知道什么优化代码，只是知道界面漂亮，功能完整就可以了。逐渐的开始去修改Delphi的代码，才发现很多的模块化概念被补了上来，买了刘艺的一些Delphi书籍，每次出差都背着去，反而每次都没有读几页，那个时候，就是熟悉业务，修改功能，部署，培训。突然会一下子觉得自己不是程序员，而是维护人员，这个坎，在数年后才能够释怀。&lt;/p&gt;&#xA;&lt;p&gt;或许是第一次踏入工作，所以会对工作中使用到的IDE特别怀念，也因为Delphi那个时候的风靡，才会让自己对程序工作那么入迷。也许自己走的路和别人都不一样，自己从开始就抱着要写一辈子的代码，在程序的路上走得更远。所以，不断的去尝试，也不断的去改变。&lt;/p&gt;&#xA;&lt;p&gt;那个时候，写Delphi的时候要安装各种第三方的包，而我也在和向工的指导下完成了安装工作，也因为这个事被领导表扬过。但是，自己的学校问题，还是让自己没有能主导去开发一个项目，都在外围协助。每当打开Delphi的IDE后，金色的字体，每写一段代码都让人感觉像金子一样精贵。经验不足，每次都不去看原来的代码，总要去看新的，总要去尝试别的语言，总想学习很多的知识，所以基础总感觉不牢固。也因为这样，辞去第一份工作去找工作的时候，那个易佳的老大说我是个什么都会点，但是什么都不精的时候，我很郁闷。我也因为那个漂亮的前台姐姐想留下来好好干一番事业，可惜，在电梯间遇到了昨天来面试的人，说这个老板不讲信誉，今天让他来上班的，可是今天让他回家等通知。易佳的老大说要带我去广州，做房地产的项目，说他带的弟子不踏实，总以为什么都会了，让我低调的学习做事。结果这么一出，我又去面试了第二家公司，一凡。那个时候，终于学会了用VB.NET，当然对C#也有所了解。你知道的，Delphi的总设计师（Anders Hejlsberg），去为微软，开发了C#来对抗Java。我很记得是刘华面试的我，他找了一台电脑让我写一个GURD的Asp.net的页面，可惜IIS怎么也部署不起来，老刘自己也搞不定，然后就让我写伪代码，然后讲给他听。或许因为自己的摸索，终于顺利过关。在上班的第一天，收到了易佳老大的电话，让我去他公司，他很赏识我，可惜我已经在这边了，我想了想，拒接了。&lt;/p&gt;&#xA;&lt;p&gt;Delphi是一个时代的产物，很多时候都会想起她，然后安装起来玩一下，后来，Borland公司把Delphi买了后，我就再也没有安装起来玩过，也因为从Windows平台转到Mac平台。&lt;/p&gt;&#xA;&lt;p&gt;我是幸运的，一直以来都是在Windows平台开发，最后的这份工作让我能使用Mac电脑来做开发。只是，最近突然怀念起以前来，想到了Delphi，想到了那个初入程序的年轻人。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Howtocode</title>
      <link>https://guobingyi.github.io/blog/howtocode/</link>
      <pubDate>Fri, 08 Jan 2021 19:49:38 +0800</pubDate>
      <guid>https://guobingyi.github.io/blog/howtocode/</guid>
      <description>&lt;h2 id=&#34;初学者如何学编程&#34;&gt;初学者如何学编程&lt;/h2&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;我感觉不论是有编程经验的人，还是没有的新人，都可以受益。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h3 id=&#34;0x00-前言&#34;&gt;0x00 前言&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;我的建议是可以先随便找一门喜欢的语言学起，从第一天学习就开始做一些简单的小项目来边干边学。举个例子，可以学习python处理数据或者抓取网页，或者学swiftUI写iphone app等等，都可以。然后边学慢慢的，你可以考虑把本科的计算机课程的书借来或者买到，特别是算法，编译原理，数据库，TCP/IP详解之类的书，自己慢慢看起来。不用着急一开始看不明白，书是可以一遍一遍的看的。高二的知识水平其实也够了。想从事这个行业或者喜欢这个爱好，就要学习一辈子。早学晚学都可以，那就开始动起来吧！我不想列太细节的步骤，我的建议永远是做东西。在做东西的过程中你会慢慢理解你的不足，但是成体系的东西你也要看，就是大学课程之类的。最好让你的需求来推动你学习，而不是先学了一堆屠龙之术，不知道怎么运用。&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;上面的话是从一个大神那里摘抄过来的，大致看了一下，还是被其中的一些方法和思想所打动，毕竟自己很多时候都是这样过来的，也利用了一些方法。但是，还是存在一些漏洞，或者说，这个并不适合初学者，而是适合有一定经验的人，再重新审视自己的时候，比较适合。我觉得对于初学者来说，还是反而有难度了。&lt;/p&gt;&#xA;&lt;h3 id=&#34;0x01-为什么&#34;&gt;0x01 为什么？&lt;/h3&gt;&#xA;&lt;p&gt;既然是初学者，那么如何选择自己喜欢的语言？什么语言又是适合自己的？&lt;/p&gt;&#xA;&lt;p&gt;为什么会成为初学者，应该是抱有目的来的？有的是为了找一份工作，有的是爱好，有的是从一门语言转到另外的一门语言。这些都可以成为初学者。&lt;/p&gt;&#xA;&lt;h4 id=&#34;工作的人&#34;&gt;工作的人&lt;/h4&gt;&#xA;&lt;p&gt;致力于将编程成为工作的人，其实刚刚开始还是有选择的，但是为什么到了最后却没有选择。原因很简单，在选择公司的时候，就限制了所选择的语言，当然了，有人抬杠说，如果一方面精通了，在其他方面也精通，不排除这样的可能，但是大部分人都得承认自己是个平凡的人，那就做平凡的事。更何况，做为面试官，并不会因为你的某一方面突出而破格录入你，项目上是需要能够直接上手工作的，一般不会储备人才。&lt;/p&gt;&#xA;&lt;p&gt;做为将编程做为工作的人，目标必须是明确的。此时就应该知道各大厂商需要什么样的人，然后定位到自己想到达到的目标。对于高考的人，都知道报考志愿一样。唯一庆幸的是，编程入门后是可以改的，而且改变的速度也很快。前提是，你得入门了，并在此摸爬滚打好几年。我记得我们英语老师曾经说过，他也可以让所有人立马学会英语，那就是只交大家“How are you?&amp;quot;,如同编程中的&amp;quot;Hello,world!&amp;quot;。唯独编程比英语中的这个相对难多了，此话怎讲？编程需要的环境，这个环境的搭建让很多人止步？举个例子，如果说你编写的是.Net代码，但是你购买了苹果电脑，那么你要使用的很多功能就会受限。所以，很多时候，必须三思后行是有原因的。&lt;/p&gt;&#xA;&lt;h4 id=&#34;爱好者&#34;&gt;爱好者&lt;/h4&gt;&#xA;&lt;p&gt;这个爱好者就不好说了，既然爱好，那么编程就不会太困难了，毕竟现在的网络资源已经足够使用了，什么不会就搜索，找到相关代码后直接拿来编译，成功优化，失败继续找。这时候就有选择的学习，比如什么简单又可以快速的见效，就学什么？&lt;/p&gt;&#xA;&lt;h4 id=&#34;工作经验者&#34;&gt;工作经验者&lt;/h4&gt;&#xA;&lt;p&gt;对于新的语言都是初学者，如果要转变一种语言，我觉得可以从自己的需求来学习，解决自己需求的时候，对语言本身也就理解的差不多了。&lt;/p&gt;&#xA;&lt;h3 id=&#34;0x02-对于初学者选择语言的意见&#34;&gt;0x02 对于初学者选择语言的意见&lt;/h3&gt;&#xA;&lt;p&gt;对于工作为目的的就不需要继续了，毕竟公司需要什么就学习什么就好。而对于真正的初学者来说，找到符合当前自己喜欢的来说，那就是定位，要往哪个方面发展。&lt;/p&gt;&#xA;&lt;h4 id=&#34;java&#34;&gt;Java&lt;/h4&gt;&#xA;&lt;p&gt;对于编程的人都知道，这门语言的地位，跨平台的优越性打造了庞大的第三方支持。环境的搭建相对简单，IDE也非常丰富。最最最主要的是网络上的资源比较丰富，搜索基本可以找到答案。想起我刚刚编程的时候，使用Delphi要搜索点资源基本上没有。大部分的知识都是从前辈或者书本上找到，现在的网络资源真的太好了。&lt;/p&gt;&#xA;&lt;h4 id=&#34;net&#34;&gt;.Net&lt;/h4&gt;&#xA;&lt;p&gt;微软平台的语言，IDE是最出色的，让你拖拉控件就能开发出非常强大的应用。缺点就是平台问题。当然，.net core出来后，对跨平台已经成为了现实，可惜有很多的东西没有能很好的实现。&lt;/p&gt;&#xA;&lt;h4 id=&#34;python&#34;&gt;Python&lt;/h4&gt;&#xA;&lt;p&gt;这个语言已经被吹的无所不能，或许也真的无所不能，可是，有些应用，还需要其他语言的支撑，更多的是大厂的支持才行。&lt;/p&gt;&#xA;&lt;h4 id=&#34;go&#34;&gt;Go&lt;/h4&gt;&#xA;&lt;p&gt;Go语言相对上面的语言要年轻些，也有一个好爸爸Google，对于服务器端是强项，但是也是因为年轻，很多的第三方还不成熟。&lt;/p&gt;&#xA;&lt;h4 id=&#34;c&#34;&gt;C++&lt;/h4&gt;&#xA;&lt;p&gt;很多人说C++是C的超集，但是我想说，已经可以说算另外的一门语言了。在游戏，服务器端，都是非常棒的体验。&lt;/p&gt;&#xA;&lt;h4 id=&#34;c-1&#34;&gt;C&lt;/h4&gt;&#xA;&lt;p&gt;C语言非常出色，一直都保持着非常大的用户量，毕竟操作系统都是用它编写的。&lt;/p&gt;&#xA;&lt;h3 id=&#34;0x03-如何需求推动学习&#34;&gt;0x03 如何需求推动学习&lt;/h3&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;物有本末,事有终始,知所先后,则近道矣。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Tenet</title>
      <link>https://guobingyi.github.io/movie/tenet/</link>
      <pubDate>Sun, 06 Dec 2020 16:56:13 +0800</pubDate>
      <guid>https://guobingyi.github.io/movie/tenet/</guid>
      <description>&lt;h2 id=&#34;信条&#34;&gt;信条&lt;/h2&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;其实，并不喜欢这样的电影，看着累。&#xA;&lt;img src=&#34;https://guobingyi.github.io/img/movie/Tenet.webp&#34; alt=&#34;信条&#34;&gt;&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;信条这部电影算是最近看的有点辛苦的，毕竟时间逆转还是比较新的概念。但是从演员和制片方来说，都比较不错。因为最近都没有怎么看电影，更多的时间还是放到了家里的事。&lt;/p&gt;&#xA;&lt;p&gt;电影的概念比较新，这个是原来从未看过的情节。想起网络上有个段子，说如何30天精通C++一样，就是通过30年的努力，回到过去30天后，干掉自己，然后说自己30天精通了C++。当然，我也知道，这个是不可能的，而电影却像倒带一样的体验。不知道是新的概念打动了我，还是最近的电影荒。可是，在电影的下载网站中对这个电影可是标红，推荐的。我却觉得一般，比较太多的铺垫，生怕观众看不懂一样，很多时候都是草草收场，讲的不深，却留下了很多的疑点，和自己原来的知识体系网完全不一样，难到说这个就是科幻电影的精彩之处吗？&lt;/p&gt;</description>
    </item>
    <item>
      <title>Mosul</title>
      <link>https://guobingyi.github.io/movie/mosul/</link>
      <pubDate>Mon, 30 Nov 2020 08:30:12 +0800</pubDate>
      <guid>https://guobingyi.github.io/movie/mosul/</guid>
      <description>&lt;h2 id=&#34;血战摩苏尔&#34;&gt;血战摩苏尔&lt;/h2&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;真实的，才是好电影。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://guobingyi.github.io/img/movie/mosul.webp&#34; alt=&#34;血战摩苏尔&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;推荐指数：⭐️⭐️⭐️⭐️&lt;/p&gt;&#xA;&lt;p&gt;一直以来我都被斩首的视频困扰，毕竟那么多年了，还不能忘记。我记得是大学的时候，不小心看到的，那个时候真的记得非常恐怖。虽然电影中再次看到，但是真实的视频无法忘却。我那个时候就对恐怖组织非常痛恨，痛恨他们对生命的无视。&lt;/p&gt;&#xA;&lt;p&gt;电影是 &lt;strong&gt;网飞(Netflix)&lt;/strong&gt; 公司拍摄的，质量过硬，从开始就一直让人喘不过气来。我感觉我看电影的习惯都是从开头开始的，如果开头就让人感觉有意思，那么到后面也会是过瘾的。或许也是因为年龄和时间的问题，我越来越挑剔，并不像原来一样，只要有电影就看。也或许是刚刚开始，我就拉着大致过了一下，所以觉得这个电影可以看。&lt;/p&gt;&#xA;&lt;p&gt;如果没有看到的就不要继续了，看完再来，我开始介绍剧情了。当然，是我看懂的剧情。电影开头，警察和悍匪展开了枪战，悍匪很快占据上风，年轻的小警察都快要投降的时候，特种兵S.W.A.T到了。我那个时候还是有点鄙视这种投降的人的，但是生死关头，投降，或许是人生存的本性。毕竟，后头他说他才刚刚参加警队。警察和战士毕竟还是有差距的，警察面对的是坏人，战士面对的是敌人。如果看到整个城市的全貌，我真的怀疑警察这个时候的作用，但是太混乱了，真的，以至于我看完后补了补当时的历史，才发现是真的混乱。尼尼微的特种部队的任务是被调走到安全地带，可惜部队的队员有很多人的家人留在了摩苏尔。队长带领着大家来到这个地方，他们的家园。刚刚在路上遇到小孩的时候，我居然有种以为队长有私心把小孩骗走的感觉，毕竟看过些电影，有些人就是训练小孩子作为战士的。真的，害怕。还好队长把小孩送给人收养，那个时候，真的很感动。片中，队长不断的收拾垃圾，让垃圾归类，我知道队长是一个有问题的人，他是一名教师，很厉害的侦查老师，而本片中第一个解救的人的老师。故事相对比较单薄，没有过多的铺垫，更多的是人性的刻画。比如，特种兵面对投降的敌人，都是直接消灭。很讽刺的刻画了刚刚小警察要投降的画面。小警察也从一个菜鸟很快的成长为一名合格的特种兵。&lt;/p&gt;&#xA;&lt;p&gt;如果说原来看伊拉克的战争是别国人的视角，那么这部片子就是自己人的视角。我有时候真的很难搞懂，为什么都已经步入现代社会了，为什么受苦受难的还是老百姓。或许，这个问题将一直存在。&lt;/p&gt;</description>
    </item>
    <item>
      <title>new start life</title>
      <link>https://guobingyi.github.io/blog/new-start-life/</link>
      <pubDate>Tue, 24 Nov 2020 17:05:59 +0800</pubDate>
      <guid>https://guobingyi.github.io/blog/new-start-life/</guid>
      <description>&lt;h2 id=&#34;新的开始新的征途&#34;&gt;新的开始，新的征途&lt;/h2&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;谁知能活多少天，舒服一天是一天。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://guobingyi.github.io/img/movie/ad-astra.webp&#34; alt=&#34;星际探索&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>极恶非道</title>
      <link>https://guobingyi.github.io/movie/outrage/</link>
      <pubDate>Wed, 21 Oct 2020 11:21:52 +0800</pubDate>
      <guid>https://guobingyi.github.io/movie/outrage/</guid>
      <description>&lt;h2 id=&#34;极恶非道-1-3&#34;&gt;极恶非道 1-3&lt;/h2&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;yakuza&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://guobingyi.github.io/img/movie/outrage.jpg&#34; alt=&#34;极恶非道1-3&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;三部一口气看完，感觉不错，起码不会为了剧情在继续等待几年，这或许是好多人都想等待，到最后的终章在一睹为快吧！&lt;/p&gt;&#xA;&lt;p&gt;或许是奔着北野武来的，也或许是网上看到推荐说讲日本黑帮的，但是看完之后，总给人不一样的体验，就是黑帮之间的争斗太血腥了。第一部，大佬们开会吃饭，讨论一个问题，只要级别不一致，对上级的尊重是非常高的，当然，如果要干掉上级也不会心慈手软。和原来看的黑帮所为的道义根本没有可言，只要有钱，什么都可以搞定，当然，背叛也可以，但是，老大都不喜欢背叛的人。我也不知道，为什么老大总要这样来糊弄小弟，到最后也被小弟给做了，第一部的感觉好乱，正如影片中所说的一样，全员恶人。第二部，有点像第一部的复仇，但是，警察的形象实在太真实，所以被领饭盒了。我想，如果社会中存在的话，那么所谓的黑社会也太恐怖了。这仅仅只是讲述了内部的战斗，如果是对外的战斗，那是不是更加恐怖呢？第三部，算是一个总结，终于结束了，出来混，迟早要还的。的确，有不一样的体验感受，过瘾的同时，也在思考，社会发展实在太快了，真的已经到了讲钱的时代。不在是打打杀杀的时代了，我想，也应该文明一点了，但是，还是非常血腥。比较，黑社会的方式就是那么粗暴。&lt;/p&gt;&#xA;&lt;p&gt;每部都有非常出色的演员，我感觉男性的演员在这里体现的非常棒，都是重量级的人物！&lt;/p&gt;</description>
    </item>
    <item>
      <title>The Skeleton Key</title>
      <link>https://guobingyi.github.io/movie/the-skeleton-key/</link>
      <pubDate>Thu, 15 Oct 2020 20:55:59 +0800</pubDate>
      <guid>https://guobingyi.github.io/movie/the-skeleton-key/</guid>
      <description>&lt;h2 id=&#34;万能钥匙&#34;&gt;万能钥匙&lt;/h2&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;好久没有看到这样的结局了&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://guobingyi.github.io/img/movie/TheSkeletonKey.webp&#34; alt=&#34;万能钥匙&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;第一次看完没有看懂到底要表达什么，赶紧去豆瓣上读了读广大观众的看法。越读就越来越明白了。&lt;/p&gt;&#xA;&lt;p&gt;整部电影的气氛营造的非常出色，女主角是一个临终关怀的护士。由于和父亲闹矛盾，所以，在父亲病逝的时候，没有能在父亲身边，感到非常遗憾。在看的时候，需要关注没一个细节，因为每个细节都对整部电影起了非常重要的线索。正所谓，细思恐极。其实，最近也看了些电影，都是总觉得，必须是经典才有比较记录下来。所以，这部电影就是。&lt;/p&gt;&#xA;&lt;p&gt;以前看过一部电影(鬼追人3)，讲述一个老人将人带入灵车，然后不管人们怎么反抗，都逃不出魔手，结局也是老人将逃离的人装如了灵车，那个时候感觉太恐怖了。因为，一般的电影都是好人战胜坏人，皆大欢喜，但是这个结果有点令人感到不一样。我所说的，这个也是，所以又回顾了一下这种心情。&lt;/p&gt;&#xA;&lt;p&gt;以前，美国电影的怪物属于都会被打死的结果，灵异的很少，我想应该是文化不同导致的，但是现在许多的电影也开始灵异起来。也算是为了迎合不同人的需求，也为了转变吧。&lt;/p&gt;&#xA;&lt;p&gt;总之，这个电影给人的感觉不错，看过可以放松一下心情，同时也了解了一下异土风情。气氛的营造的确不错，好奇害死猫，这话被体现的淋漓尽致。&lt;/p&gt;&#xA;&lt;p&gt;完。&lt;/p&gt;</description>
    </item>
    <item>
      <title>良医第一季</title>
      <link>https://guobingyi.github.io/movie/gooddoctors1/</link>
      <pubDate>Thu, 17 Sep 2020 11:04:53 +0800</pubDate>
      <guid>https://guobingyi.github.io/movie/gooddoctors1/</guid>
      <description>&lt;h2 id=&#34;良医第一季&#34;&gt;良医第一季&lt;/h2&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;这样的美剧是心灵的碰撞。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://guobingyi.github.io/img/movie/gooddoctor1.webp&#34; alt=&#34;良医第一季&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;因为游戏的原因，我又好久没有追美剧了。也因为迷恋着把字写好，而不断买笔的我。我知道，我病了，并且不轻。&lt;/p&gt;&#xA;&lt;p&gt;不知道什么时候，谁推荐的这个美剧，我看了非常喜欢，但是由于和孩子在一起，因为晚上要玩游戏，因为要写字，因为要和老婆吵架，所以没有能一口气看完。今天，原本是一个人在家的，但是老婆说她去办公室工作了，让我自己考虑去不去，我觉得我一个在家还不是做这样的事情，而老到工作室或许又不一样的感受。&lt;/p&gt;&#xA;&lt;p&gt;我是对的，我都没有仔细去思考我们到底怎么了？我就是去看良医了。最后的三集非常精彩，每个人物刻画的很真实。我不想评判什么，我也不想为任何的选择而去评论。我知道，没有什么选择是有对错之分的。只有敬畏生命，对爱的人说出真实的感受。&lt;/p&gt;&#xA;&lt;p&gt;“你是我的全部，我爱你，我也爱你，我更爱你！”&lt;/p&gt;&#xA;&lt;p&gt;我期待第二季的精彩，同时也为第一季的结束而感到非常欣慰，所以我觉得，这样的美剧我怎么会排斥呢？&lt;/p&gt;</description>
    </item>
    <item>
      <title>TheMazeRunner</title>
      <link>https://guobingyi.github.io/movie/themazerunner/</link>
      <pubDate>Fri, 10 Jul 2020 17:01:18 +0800</pubDate>
      <guid>https://guobingyi.github.io/movie/themazerunner/</guid>
      <description>&lt;h2 id=&#34;移动迷宫&#34;&gt;移动迷宫&lt;/h2&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;突然对新的一种观念所打破。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://guobingyi.github.io/img/movie/TheMazeRunner.webp&#34; alt=&#34;移动迷宫&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;好久没有看过让自己感觉到喜欢的电影了。当下载了《移动迷宫3：死亡解药》后，感觉这个非常适合自己的口味，所以把《移动迷宫1-2》都下载了来看来，搞笑的是我看到第三部的时候，不清楚为什么Thomas要打Gally一拳的时候，我停下来，从第一部开始看。没有让我失望，每一部都非常精彩，只不过最后的时候，让我非常能够理解一句评语，男猪脚成功摧毁了文明时间，来到一个小岛开始原始生活。或许，大家都忽略了电影中女博士说的，病毒已经通过空气传播，每个人都逃脱不了被感染的命运。这个才是重点，为什么他们为了救一个人，而牺牲了那么多的人。其实，这些人已经被感染了。当然，狂客的首领自己去引爆炸弹，摧毁大门，让其他人冲进去。这个难道就是所谓的没有压迫，就没有反抗吗？知识量有点大，有些东西或许细思恐极吧！&lt;/p&gt;&#xA;&lt;p&gt;第一部刚刚开始有点无厘头，男猪脚被送到迷宫，采取了回忆法记述当时的情况。但是，对于，原本就是生活在现代社会的人，去一个原始的生活状态下生活，我可以理解为末世吧。为了搞清楚迷宫，这些青年人做出了努力，可惜还是男猪脚来了才出现了最关键的转机。很多东西都来不及叙述，可以理解，毕竟电影要控制时间，可我感觉很多时候或许是为了紧凑感。怪物的出现，居然是人类自己制造的，我当时还是对为什么要训练这些年轻人一脸蒙B。好吧，世界出现了问题，他们通过寻找迷宫来找到答案，如果不是末世题材的，我感觉还是让人不能细品。&lt;/p&gt;&#xA;&lt;p&gt;第二部开始是以为被好人救了，最后发现还是在WCKD控制，好吧，我从第三部开看第二部就纳闷了，为什么要那么多小孩进行提取血清，而最终起作用的只有Thomas的血清才起作用，那么可以理解为其他的仅仅只是抑制，而Thomas的才是完全解决吧！从那么多的人在女博士的面前获取答案的时候，才发现WCKD其实仅仅只是末世里的一个集团而已，还是很多。那么这个局就太大了&amp;hellip;&amp;hellip;&lt;/p&gt;&#xA;&lt;p&gt;第三部的感觉是，其实华丽的风光下面，危机重重。我非常觉得可惜，那么好的建筑，那么好的防御，却被轻松的打破，看似坚不可摧，其实是轻松容易。&lt;/p&gt;&#xA;&lt;p&gt;好吧，末世的片子真的不错，可以从人性上来看到许多问题，也可以看到未来我们的世界会是个什么样子，当然，最主要的是可以看到了大片的样子。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Xcode</title>
      <link>https://guobingyi.github.io/mac/xcode/</link>
      <pubDate>Thu, 18 Jun 2020 18:41:19 +0800</pubDate>
      <guid>https://guobingyi.github.io/mac/xcode/</guid>
      <description>&lt;h2 id=&#34;xcode&#34;&gt;Xcode&lt;/h2&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;对于自己不熟悉的东西，永远都不要装的很明白。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;Xcode已经在电脑里好长一段时间了，因为曾经想通过编写Xcode来做一个自由职业者，可惜，都没有勇气去好好学习，因为对苹果的开发，实在无法体会。&lt;/p&gt;&#xA;&lt;p&gt;最近迷恋上了adobe的软件，发现Xcode已经占用了17GB的空间了，对于我这个128G的电脑的确是一个很大的挑战。原来删除过，发现会报错。&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;usr/local/Cellar/go/1.14.3/libexec/pkg/tool/darwin_amd64/link: running clang failed: exit status 1&#xA;xcrun: error: active developer path (&amp;#34;/Applications/Xcode.app/Contents/Developer&amp;#34;) does not exist&#xA;Use `sudo xcode-select --switch path/to/Xcode.app` to specify the Xcode that you wish to use for command line developer tools, or use `xcode-select --install` to install the standalone command line developer tools.&#xA;See `man xcode-select` for more details.&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;因为go语言是最后的留念，所以在没有看清错误代码之后，直接就又安装回去了，这次不同，对空间的要求有点高。所以，想看一下是否真的离开不了Xcode。使用以下的代码进行修改。&lt;/p&gt;&#xA;&lt;p&gt;(ps.好好对我使用HHKB键盘的声音有很大意见，所以键盘声音也成为了以后的一个考察对象了，静音才行哦。而且，我发现我最近买的鼠标M336，虽然是蓝牙的，说明书上也说静音，可以我感觉还是有声音。)&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;sudo xcode-select -r&#xA;sudo xcode-select --switch /Library/Developer/CommandLineTools&#xA;xcode-select -p&#xA;&lt;/code&gt;&lt;/pr</description>
    </item>
    <item>
      <title>Mymac</title>
      <link>https://guobingyi.github.io/mac/mymac/</link>
      <pubDate>Sun, 26 Apr 2020 14:38:37 +0800</pubDate>
      <guid>https://guobingyi.github.io/mac/mymac/</guid>
      <description>&lt;h3 id=&#34;我的笔记本&#34;&gt;我的笔记本&lt;/h3&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;第一句话居然想到的是：“土豪随意！”&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;因为工作原因，电脑是我的生产力。所以在电脑的使用频率非常高，可以说就是伴随着一天8个多小时都是在使用电脑，目前有所不同，是由于可以不用电脑来吃饭了。&lt;/p&gt;&#xA;&lt;p&gt;闲来无事，清理一下笔记本的屏幕发现，掉漆了😫！在悲痛中思考该如何处理，在网上找到帖子说可以免费换屏，抱着对资本主义国家的信任，拨打了400，预约了天才吧的客服。第二天，去了后被告知在保外，不能免费换。原因是由于我的电脑买的实在太早了？说是2015年6月购买的。我记得我买的是8/9月吧。或许，这个代理商已经提前注册了？不应该。算了，一气之下，买了张膜。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://guobingyi.github.io/img/mymac.png&#34; alt=&#34;电脑信息&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://guobingyi.github.io/img/mymac01.jpeg&#34; alt=&#34;掉漆的&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://guobingyi.github.io/img/mymac02.JPG&#34; alt=&#34;贴膜后&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;害怕膜把屏幕弄得更花，所以在整个过程中，可以说是小心翼翼。结果，还是出了点小插曲，忘记撕掉摄像头的一块膜，结果，苹果电脑使用摄像头来感应亮度，整个屏幕灰蒙蒙的。又硬着头皮撕下了膜，还好，基本上完成了。&lt;/p&gt;&#xA;&lt;p&gt;原来总说贴膜就想穿着袜子洗脚一样，不舒服，在这次的掉漆事件中才发现，如果你认真的保护一下，苹果的东西还是蛮耐用的。就如我现在的iPhone7 Plus一样，除了内存小点，其他真没毛病。如果有毛病也是电池的损耗，这，真的也没有办法。用个充电宝也就搞定了。所以呀，我太大意了，对于苹果产品，总抱有非常大的信心，可是任何物品都有一个寿命，不能说好就什么问题都没有。也是对物品的另外一层思考吧。&lt;/p&gt;&#xA;&lt;p&gt;现在的问题是电池问题，屏幕和键盘目前保护的已经好了，电池这个真不好说，那天出现了开不了机，也只能借助网络买块电池自己换了。当然，帮老婆买的手机电池真没有办法换，难度系数有点高，电脑的相对要好一点的是不需要用吸盘把屏幕吸出来。&lt;/p&gt;&#xA;&lt;p&gt;总的来说，苹果的产品质量不错！不容置疑，但是加上防护手段，或许能多用一些时日。当然，正如第一句话一样，土豪就直接换新了，何须等到出现这些问题。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Backfile</title>
      <link>https://guobingyi.github.io/blog/backfile/</link>
      <pubDate>Fri, 03 Apr 2020 14:46:31 +0800</pubDate>
      <guid>https://guobingyi.github.io/blog/backfile/</guid>
      <description>&lt;h2 id=&#34;文件恢复&#34;&gt;文件恢复&lt;/h2&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;狡兔三窟，不是没有道理的。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://guobingyi.github.io/file/%E5%B7%B2%E6%8D%9F%E5%9D%8F%E4%BF%AE%E5%A4%8D.command&#34;&gt;已损坏修复命令&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://guobingyi.github.io/file/Do_Your_Data_Recovery_7.5.dmg&#34;&gt;Do Your Data Recovery_7.5.dmg&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;最近郁闷的事情不少，当想到要把照片统一放到一个移动硬盘后，就开始后悔了，真正的问题在于这个硬盘坏了，而这个硬盘是买的最贵，口碑最好的西部数据。&lt;/p&gt;&#xA;&lt;p&gt;我原来都不曾买过，用过西部数据，但是当要把照片统一存放的时候，我选择了西部数据，因为口碑好，传说中的安全，可是在短短的不到一个月后，居然不能用了，我怀疑是不是电脑升级导致的，还傻傻等待新一轮的升级能解决这个问题。那么问题来了，相片需要备份，可是没有升级，对，没有升级。所以，我改变了策略，看一看是什么导致这个原因的，搜索的结果让我大跌眼镜，西部数据的硬盘怎么都出现了这样的问题，原本是奔着去找Mac Pro升级导致硬盘读取不了的，可是找到的都是西部数据硬盘丢数据的，郁闷了。&lt;/p&gt;&#xA;&lt;p&gt;好吧，我承认这段时间里断断续续的用电脑，没有上心，可是等到要用到照片的时候，我就郁闷了，发现所有的照片都在这个识别不了的硬盘里。我不得不继续查询解决方案，把硬盘放到windows下识别，发现win7下的驱动安装出现问题，我的天。我继续在Mac下寻求解决办法，找到了西部数据驱动里的磁盘安全工具和扫描坏道工具。安全工具可以对硬盘上锁，我理解为硬盘没有问题；扫描坏道工具，全盘扫描没有问题，在此让我感觉到磁盘真的没有问题。但是就是读不出来，我找到一篇文章说，点开系统报告&amp;ndash;&amp;gt;硬件&amp;ndash;&amp;gt;USB，能看到自己的硬盘后，打开fander(访达)，等就一个字，看硬盘的存储数据，说系统要重新读取硬盘数据，巴拉巴拉，我等了4个多小时，感觉没有戏了，下定决心看能不能恢复数据吧，这样等下去就Over了。所以就有了文章开头的软件，&lt;strong&gt;Do Your Data Recovery&lt;/strong&gt;这个软件，实在太给力了。她读出了我的硬盘，最，最，最重要的是，数据也能找到了，所以感慨非常深。&lt;/p&gt;&#xA;&lt;h3 id=&#34;重要数据要有备份&#34;&gt;重要数据要有备份&lt;/h3&gt;&#xA;&lt;p&gt;为什么这样说？重要的数据，会伴随一生，丢失了会非常心疼，所以除了基础的硬盘保存后，最好的是在云上有备份，所以先看看github是否能满足需求，如果不行，还是得用七牛吧。&lt;/p&gt;&#xA;&lt;h3 id=&#34;盗版软件&#34;&gt;盗版软件&lt;/h3&gt;&#xA;&lt;p&gt;我非常想支持正版，但是支持正版的渠道很难，我不得不承认这是一个借口，但是在这个时代，或者这个环境，盗版比正版更容易得到，我不知道是该高兴还是难过！&lt;/p&gt;&#xA;&lt;h3 id=&#34;不要依赖已网络&#34;&gt;不要依赖已网络&lt;/h3&gt;&#xA;&lt;p&gt;从这个事情上来看，虽然网络上有很多知识，很多乐于助人的人，但是问题的解决还是得自己的判断，做出选择。原来的经验就是不论什么代码先拷贝下来看行不行，不行再试，完全失去了自己思考的时间，虽然大部分能google到，但是真正到核心的地方，还是得自己做。所以，任何事情发生前，先自己考虑一番，在使用网络，网络太容易迷失了。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://guobingyi.github.io/img/lostdata.jpeg&#34; alt=&#34;Lost Data&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>和孩子一起学习-弟子规</title>
      <link>https://guobingyi.github.io/blog/%E5%92%8C%E5%AD%A9%E5%AD%90%E4%B8%80%E8%B5%B7%E5%AD%A6%E4%B9%A0-%E5%BC%9F%E5%AD%90%E8%A7%84/</link>
      <pubDate>Tue, 03 Mar 2020 13:09:16 +0800</pubDate>
      <guid>https://guobingyi.github.io/blog/%E5%92%8C%E5%AD%A9%E5%AD%90%E4%B8%80%E8%B5%B7%E5%AD%A6%E4%B9%A0-%E5%BC%9F%E5%AD%90%E8%A7%84/</guid>
      <description>&lt;h2 id=&#34;和孩子一起学习系列-弟子规&#34;&gt;和孩子一起学习系列-弟子规&lt;/h2&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;转自&lt;a href=&#34;http://www.dizigui.cn/yj.asp&#34;&gt;弟子规公益网&lt;/a&gt;。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h3 id=&#34;弟子规易解&#34;&gt;弟子规易解&lt;/h3&gt;&#xA;&lt;p&gt;【概述】《弟子规》原名《训蒙文》，为清朝康熙年间秀才李毓秀所作。其内容采用《论语·学而篇》第六条“弟子入则孝，出则弟，谨而信，泛爱众，而亲仁，行有余力，则以学文”及朱熹《小学》中的文义，以三字一句，两句一韵编纂而成。这个《小学》是《三字经》中“唯学者，必有初，小学终，至四书”的《小学》，专门教导做人做事，洒扫应对，进退之礼和做人首要以“孝”为本。但这本书距离我们有数百年，内容当中有些用词与现在社会状况差距较大，所以清朝李毓秀重新以《小学》中的重点为基础待人接物、求学等应有的礼仪与规范，特别讲求家庭教育与生活教育。后经清朝贾存仁修订改编，编成1080个字的《弟子规》，是启蒙养正、教育子弟“敦伦尽分、闲邪存诚”，养成忠厚家风的最佳读物。&lt;/p&gt;&#xA;&lt;h3 id=&#34;总-叙&#34;&gt;总 叙&lt;/h3&gt;&#xA;&lt;p&gt;弟子规 圣人训 首孝弟 次谨信 泛爱众 而亲仁 有余力 则学文&lt;/p&gt;&#xA;&lt;p&gt;【易解】《弟子规》这本书，是依据至圣先师孔子的教诲而编成的生活规范。首先在日常生活中，要做到孝顺父母，友爱兄弟姐妹。其次在一切日常生活言语行为中要小心谨慎，要讲信用。和大众相处时要平等博爱，并且亲近有仁德的人，向他学习，这些都是很重要非做不可的事，如果做了之后，还有多余的时间精力，就应该好好的学习六艺等其他有益的学问。&lt;/p&gt;&#xA;&lt;h3 id=&#34;入则孝&#34;&gt;入则孝&lt;/h3&gt;&#xA;&lt;h4 id=&#34;父母呼-应勿缓-父母命-行勿懒&#34;&gt;父母呼 应勿缓 父母命 行勿懒&lt;/h4&gt;&#xA;&lt;h4 id=&#34;父母教-须敬听-父母责-须顺承&#34;&gt;父母教 须敬听 父母责 须顺承&lt;/h4&gt;&#xA;&lt;p&gt;【易解】父母呼唤，应及时回答，不要慢吞吞的很久才应答，父母有事交代，要立刻动身去做，不可拖延或推辞偷懒。父母教导我们做人处事的道理，是为了我们好，应该恭敬的聆听。做错了事，父母责备教诫时，应当虚心接受，不可强词夺理，使父母亲生气、伤心。&lt;/p&gt;&#xA;&lt;p&gt;（君子闻过则喜，小人闻过则怒。）&lt;/p&gt;&#xA;&lt;h4 id=&#34;冬则温-夏则凊-晨则省-昏则定&#34;&gt;冬则温 夏则凊 晨则省 昏则定&lt;/h4&gt;&#xA;&lt;h4 id=&#34;出必告-反必面-居有常-业无变&#34;&gt;出必告 反必面 居有常 业无变&lt;/h4&gt;&#xA;&lt;p&gt;【易解】侍奉父母要用心体贴，在二十四孝故事里，九岁的黄香，为了让父亲安心睡眠，夏天睡前会帮父亲把床铺扇凉，冬天寒冷时会为父亲温暖被窝，实在值得我们学习。早晨起床之后，应该先探望父母，并向父母请安问好。下午回家之后，要将今天在外的情况告诉父母，向父母报平安，使老人家放心。外出离家时，须告诉父母要到那里去，回家后还要当面禀报父母，让父母安心。平时生活起居，要保持正常有规律，做事有常规，不要任意改变，以免父母忧虑。&lt;/p&gt;&#xA;&lt;h4 id=&#34;事虽小-勿擅为-苟擅为-子道亏&#34;&gt;事虽小 勿擅为 苟擅为 子道亏&lt;/h4&gt;&#xA;&lt;h4 id=&#34;物虽小-勿私藏-苟私藏-亲心伤&#34;&gt;物虽小 勿私藏 苟私藏 亲心伤&lt;/h4&gt;&#xA;&lt;p&gt;【易解】 纵然是小事，也不要任性，擅自作主，而不向父母禀告。如果任性而为，容易出错，就有损为人子女的本分，因此让父母担心，是不孝的行为。公物虽小，也不可以私自收藏占为己有。如果私藏，品德就有缺失，父母亲知道了一定很伤心。&lt;/p&gt;&#xA;&lt;p&gt;【故事】刘备教子&#xA;三国的时候，刘备临终时对儿子刘禅不放心，除了把他托付给丞相诸葛亮，还给刘禅留下了一封信来教育他。信中说：“勿以恶小而为之，勿以善小而不为。惟贤惟德，能服于人。”这就是说，不要认为小的坏事就可以胡作非为，不要认为小的好事就可以不做；只有品德良好才能让人信服。后来，刘禅在诸葛亮的辅佐下，蜀国没有出现大的失误。诸葛亮死后，刘禅开始宠信宦官，逐渐放纵自己，最终蜀国被曹魏灭掉，刘禅也成了俘虏。&lt;/p&gt;&#xA;&lt;p&gt;【故事】一个玩笑 抱憾终身&#xA;有这样一个真实的故事：在学校课间休息的时候，一个同学在他的同桌要坐下的时候，把椅子挪开了，结果这个同学坐在地上，脊椎摔断，终身瘫痪。一个玩笑导致这样的后果，双方家庭都抱憾终身！受伤的同学将在床上躺一辈子，很苦。他的父母就更苦，孩子养了这么大，突然变成残废，父母比他还难受，还要伺候他，每天看到他都要偷偷地流泪。我们想一想关心你的人往往何止父母双亲，所以一个人的过失，有时会给多少人带来痛苦！造成大错无法弥补，而开玩笑同学的家庭也要承担沉重的经济负担和良心的谴责。所以，任何对人身安全有损害和危害到社会的不良行为，我们是绝对不能做的，见到时也要极力劝止。&lt;/p&gt;</description>
    </item>
    <item>
      <title>效率还是折腾</title>
      <link>https://guobingyi.github.io/blog/%E6%95%88%E7%8E%87%E8%BF%98%E6%98%AF%E6%8A%98%E8%85%BE/</link>
      <pubDate>Sun, 01 Mar 2020 16:35:30 +0800</pubDate>
      <guid>https://guobingyi.github.io/blog/%E6%95%88%E7%8E%87%E8%BF%98%E6%98%AF%E6%8A%98%E8%85%BE/</guid>
      <description>&lt;h2 id=&#34;效率还是折腾&#34;&gt;效率还是折腾&lt;/h2&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;不能安心的写代码，还能干什么？&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;不知道为什么，当要认真的去写点代码的时候，总会被杂七杂八的事情打扰，或许习惯了一种工作模式后，就很难去改变。&lt;/p&gt;&#xA;&lt;p&gt;事情的原委是这样的，我开始用go写代码的时候，发现原来在VS Code下使用&lt;a href=&#34;https://github.com/Microsoft/vscode-go&#34;&gt;GO的插件&lt;/a&gt;非常好用，配合使用&lt;a href=&#34;https://github.com/codota/tabnine-vscode&#34;&gt;TabNine&lt;/a&gt;写代码真的会飞。结果，插件告诉我没能更新gopls，需要更新后才能进行代码提示，so，我去更新gopls，这个我知道是必须翻墙才能更新的，而google已经在github上有镜像，目前不能翻墙只能依赖github才能更新，郁闷的是在镜像下使用了mod模式，使用go build命令都会报以下错误：&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;go: github.com/sergi/go-diff@v1.0.0: Get &amp;#34;https://proxy.golang.org/github.com/sergi/go-diff/@v/v1.0.0.mod&amp;#34;: dial tcp [2404:6800:4008:802::2011]:443: i/o timeout&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;原来即使使用了镜像，模块的加入还是去找golang.org去了，那怎么办呢？居然有镜像就不怕，不就是用模块的思路去解决好了，修改go.mod文件。&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;module golang.org/x/tools&#xA;&#xA;go 1.11&#xA;&#xA;replace (&#xA;&#x9;golang.org/x/net =&amp;gt; github.com/golang/net latest&#xA;&#x9;golang.org/x/mod =&amp;gt; github.com/golang/mod latest&#xA;&#x9;golang.org/x/sync =&amp;gt; github.com/golang/sync latest&#xA;&#x9;golang.org/x/xerrors =&amp;gt; github.com/golang/xerrors latest&#xA;)&#xA;require (&#xA;&#x9;golang.org/x/mod v0.1.1-0.20191105210325-c90efee705ee&#xA;&#x9;golang.org/x/net v0.0.0-20190620200207-3b0461eec859&#xA;&#x9;golang.org/x/sync v0.0.0-20190423024810-112230192c58&#xA;&#x9;golang.org/x/xerrors v0.0.0-20191011141410-1b5146add898&#xA;)&#xA;&lt;/code&gt;&lt;/pr</description>
    </item>
    <item>
      <title>Cppdirdemo</title>
      <link>https://guobingyi.github.io/code/cppdirdemo/</link>
      <pubDate>Sat, 29 Feb 2020 17:23:06 +0800</pubDate>
      <guid>https://guobingyi.github.io/code/cppdirdemo/</guid>
      <description>&lt;h2 id=&#34;make构建c项目&#34;&gt;Make构建C++项目&lt;/h2&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;使用VS Code编写代码的时候，总报错“Makefile:4: *** missing separator.  Stop.”，换成Emacs后就搞定了，发现Tab的格式有问题，或许emacs才是最好的选择，写C++。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h3 id=&#34;1创建目录point&#34;&gt;1.创建目录Point&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;mkdir Point&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;2-创建头文件pointh&#34;&gt;2. 创建头文件point.h&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;vim point.h&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;内容如下：&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;class point{&#xA;private:&#xA;        int x;&#xA;        int y;&#xA;public:&#xA;        point(int a,int b):x(a),y(b){}&#xA;        void print();&#xA;        ~point(){}&#xA;};&#xA;&lt;/code&gt;&lt;/pr</description>
    </item>
    <item>
      <title>程序目录结构</title>
      <link>https://guobingyi.github.io/code/programdir/</link>
      <pubDate>Sat, 29 Feb 2020 16:10:22 +0800</pubDate>
      <guid>https://guobingyi.github.io/code/programdir/</guid>
      <description>&lt;h2 id=&#34;软件项目的目录结构和文件结构&#34;&gt;软件项目的目录结构和文件结构&lt;/h2&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;孙悟空对师傅说，“我想要学72变！”。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;graph LR&#xA;程序目录结构--&amp;gt;Include&#xA;程序目录结构--&amp;gt;Source&#xA;程序目录结构--&amp;gt;Resource&#xA;程序目录结构--&amp;gt;Shared&#xA;程序目录结构--&amp;gt;Debug&#xA;程序目录结构--&amp;gt;Release&#xA;程序目录结构--&amp;gt;Bin&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;include&#34;&gt;Include&lt;/h3&gt;&#xA;&lt;p&gt;Include目录下用于存放应用程序的头文件集合，也就是.h文件集合，在这个目录下面还可以根据需要划分子目录。&lt;/p&gt;&#xA;&lt;h3 id=&#34;source&#34;&gt;Source&lt;/h3&gt;&#xA;&lt;p&gt;Source目录用于存放应用程序的源代码文件集合，也就是.c或者.cpp文件集合，在这个目录下也可以根据需要进行划分子目录。&lt;/p&gt;&#xA;&lt;h3 id=&#34;resource&#34;&gt;Resource&lt;/h3&gt;&#xA;&lt;p&gt;Resource目录用于存放应用程序的一些资源文件，比如图片、视频、音频、对话框、图标以及光标等等，同样也可以划分几个子目录，便于管理。&lt;/p&gt;&#xA;&lt;h3 id=&#34;shared&#34;&gt;Shared&lt;/h3&gt;&#xA;&lt;p&gt;Shared目录用于存放应用程序的一些共享文件。&lt;/p&gt;&#xA;&lt;h3 id=&#34;debug&#34;&gt;Debug&lt;/h3&gt;&#xA;&lt;p&gt;Debug目录用于存放应用程序进行调试时的调试版本产生的中间文件。&lt;/p&gt;&#xA;&lt;h3 id=&#34;release&#34;&gt;Release&lt;/h3&gt;&#xA;&lt;p&gt;Release目录用于存放应用程序进行发布时的发布版本产生的中间文件。&lt;/p&gt;&#xA;&lt;h3 id=&#34;bin&#34;&gt;Bin&lt;/h3&gt;&#xA;&lt;p&gt;Bin目录用于存放自己创建的lib文件或dll文件。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;注意绝对路径和相对路径的概念以及使用；&lt;/li&gt;&#xA;&lt;li&gt;注意区分编译时的相对路径和运行时的相对路径的概念。&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>iTerm2分屏切换</title>
      <link>https://guobingyi.github.io/mac/iterm2/</link>
      <pubDate>Sat, 29 Feb 2020 15:15:45 +0800</pubDate>
      <guid>https://guobingyi.github.io/mac/iterm2/</guid>
      <description>&lt;h2 id=&#34;iterm2分屏切换&#34;&gt;iTerm2分屏切换&lt;/h2&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;积极的蝙蝠心态，活到老，学到老。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h3 id=&#34;1-新建窗口&#34;&gt;1. 新建窗口&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;command + t&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;2-垂直分屏&#34;&gt;2. 垂直分屏&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;command + d&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;3-水平分屏&#34;&gt;3. 水平分屏&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;command + shift + d&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;4-在最近使用的分屏直接切换&#34;&gt;4. 在最近使用的分屏直接切换&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;command + ]  OR command + [&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;5-切换到指定位置的分屏&#34;&gt;5. 切换到指定位置的分屏&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;command + alt + 方向键&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;6-切换标签页&#34;&gt;6. 切换标签页&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;command + 数字&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;7-按方向切换标签页&#34;&gt;7. 按方向切换标签页&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;command + 方向键&#xA;&lt;/code&gt;&lt;/pr</description>
    </item>
    <item>
      <title>生成CA证书</title>
      <link>https://guobingyi.github.io/code/createca/</link>
      <pubDate>Thu, 27 Feb 2020 17:08:12 +0800</pubDate>
      <guid>https://guobingyi.github.io/code/createca/</guid>
      <description>&lt;h2 id=&#34;生成ca证书&#34;&gt;生成CA证书&lt;/h2&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;https的数据传输加密已经正是成为了标准。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;在使用Web运用的时候，为了避免明文传输，加入https协议是比较明智的，毕竟投入量也是最小的。&lt;/p&gt;&#xA;&lt;p&gt;ps.使用iTerm2的时候，输入密码报错，而使用mac自带的终端就成功，为什么？怀疑iTerm2在保存密码吗？&lt;/p&gt;&#xA;&lt;h3 id=&#34;1-创建根证书密钥文件rootkey&#34;&gt;1. 创建根证书密钥文件root.key&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;openssl genrsa -des3 -out root.key&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;2-创建根证书的申请文件rootcsr&#34;&gt;2. 创建根证书的申请文件root.csr&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;openssl req -new -key root.key -out root.csr&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;3-创建一个自当前日期起为期十年的根证书rootcrt&#34;&gt;3. 创建一个自当前日期起为期十年的根证书root.crt&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;openssl x509 -req -days 3650 -sha1 -extensions v3_ca -signkey root.key -in root.req -out root.crt&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;4-创建服务器证书密钥serverkey&#34;&gt;4. 创建服务器证书密钥server.key&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;openssl genrsa –des3 -out server.key 2048&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;5-创建服务器证书的申请文件servercsr&#34;&gt;5. 创建服务器证书的申请文件server.csr&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;openssl req -new -key server.key -out server.csr&#xA;&lt;/code&gt;&lt;/pr</description>
    </item>
    <item>
      <title>Csharp</title>
      <link>https://guobingyi.github.io/code/csharp/</link>
      <pubDate>Thu, 06 Feb 2020 19:37:59 +0800</pubDate>
      <guid>https://guobingyi.github.io/code/csharp/</guid>
      <description>&lt;h2 id=&#34;c&#34;&gt;C#&lt;/h2&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;C#的学习有太多的情怀，比如pascal。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;一直都在不断的换语言来学习，来弥补学习上的懒惰。&lt;/p&gt;&#xA;&lt;p&gt;不知道是什么原因，我突然对每种语言都热衷起来，对我原来写的那篇博客打脸，或者说也不能算是打脸，而是不同时期的不同思考罢了。 😊&lt;/p&gt;&#xA;&lt;p&gt;第一份工作是冲着Java的Sun认证去的，发现是vb和Delphi开发的项目。而在此之前，大学毕业的时候看到老九用C#写代码，老高就让我好好学习一下，而我的那台老电脑还存着第一本书是介绍C#的。说明在最早的时候，我认识到的是C#，而不是Java。&lt;/p&gt;&#xA;&lt;p&gt;刚刚毕业的时候，学习一门技术的时候，都是去书店里找书。或者准确的说，互联网的发展没有像现在一样。需要学习什么，都需要从书本上去看，然后在实践。现在不同了，需要什么样的知识，直接到官网看文档。不能说是能力提升了，还是知识的获取变得更轻松了。也难怪最近几年的技术类书几乎都没有买了，因为官网上的文档已经非常全面，而且都非常规范。原来的模式是买书，实践，向师傅请教，然后思考，最后才到看文档。现在的模式是文档，实践，文档，google就基本能完成了。现在的模式拉锯了师傅之间的距离，师傅层面上知道的是经验问题，而经验也会由于技术的发展而落后，或者失效。所以，从这个层面上来说，如果不学习，那么很快就会被超越。&lt;/p&gt;&#xA;&lt;p&gt;学习语言的目的是什么？我想就是用该语言快速的完成任务。更好听的是实现自己的思想。生活在这个时代太幸福了，不需要一来就学习汇编语言，有非常多的高级语言供我们选择。现阶段我比较喜欢的go，打动我的是真正的跨平台。python，ruby吧，你要装运行环境，Java呢，虚拟机要装，C#要安装dotnet-sdk。Rust准备看一下。扯远了，学习的目的还是有所需求。比如，公司的项目就是该语言开发的，你要继续开发；公司的项目需要重新搭建，你需要进行评估。总之，学习带着目的来和不带目的来，学习的效果是不一样的。&lt;/p&gt;&#xA;&lt;p&gt;最近，突发奇想，把所学的语言都重新认真的看一遍，因为不是有时间嘛，把时间浪费在有意义的事情上，多好。而最先被看到的是C#，那种熟悉的感觉依稀记得。所以直接安装了。&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;brew cask install dotnet-sdk &#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;安装完看了一下版本，都3.1.101了，发展速度，好快。&lt;/p&gt;&#xA;&lt;p&gt;快速的搭建了一个hello world项目。&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;dotnet new console --name Hello&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;ps. 创建项目很快就Restore succeeded. 但是为什么终端还是需要等1分钟左右，我怀疑还在下载什么东西，怪我网速慢咯。&lt;/p&gt;&#xA;&lt;p&gt;执行项目。&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt; cd Hello&#xA; dotnet run&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;这样一个hello,world就打印在终端了，嗯，是非常速度的。&lt;/p&gt;&#xA;&lt;p&gt;接着就可以用你喜欢的IDE打开项目，开始慢慢品味了。&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;code -r Hello&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;最小的完整代码片段：&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;using System;&#xA;&#xA;namespace Hello&#xA;{&#xA;    class Program&#xA;    {&#xA;        static void Main(string[] args)&#xA;        {&#xA;            Console.WriteLine(&amp;#34;Hello World!&amp;#34;);&#xA;        }&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pr</description>
    </item>
    <item>
      <title>Notimeplay</title>
      <link>https://guobingyi.github.io/blog/notimeplay/</link>
      <pubDate>Sun, 02 Feb 2020 15:45:05 +0800</pubDate>
      <guid>https://guobingyi.github.io/blog/notimeplay/</guid>
      <description>&lt;h2 id=&#34;没有时间玩&#34;&gt;没有时间玩&lt;/h2&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;玩物丧志？&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;曾几何时，我也会为了玩而发愁？或许好多时候都在为此而发愁吧，上学的时候，为了玩三国志，必须要先把作业做完；上班的时候，必须要把工作做完；在家的时候，必须要把家务做完。或许，跟多的时候，都在为游戏而发愁，我什么时候可以有自己的时间呢？然后，开始思考，如何快速的做完作业，如何快速的做完工作，如何快速的做完家务。这样就可以玩了，但是发现不管怎么快速，时间总也不够玩。在游戏里，时间过的真快，感觉都没有怎么玩就要睡觉了，然后有时会为了玩而熬夜。而熬夜却是最危险的事情，它会让寿命减短。这样做又是否值得呢？日出而作，日落而息。自然规律不能破坏，不然，面临的问题会非常严重，如癌症。得出结论后，是不是觉得熬夜不值得呢？是的，非常不值得。我记得有一次，在身体不适的时候，玩游戏也不能解除这样的痛苦，当然抽烟更是难受。玩游戏与抽烟，虽然不能说一样，但是有的时候会让你快乐，但是如果熬夜玩游戏，却会要命。抽烟同样是这个道理。&lt;/p&gt;&#xA;&lt;p&gt;明白了这些，熬夜去游戏是会付出代价的，苍天会饶过谁？抽烟也是。算了这笔帐后，发现，如果想玩，就得健康的玩，不然都是亏的。&lt;/p&gt;&#xA;&lt;p&gt;从今天开始，是时候改变了。&lt;/p&gt;</description>
    </item>
    <item>
      <title>ProxySet</title>
      <link>https://guobingyi.github.io/code/proxyset/</link>
      <pubDate>Thu, 30 Jan 2020 11:05:10 +0800</pubDate>
      <guid>https://guobingyi.github.io/code/proxyset/</guid>
      <description>&lt;h2 id=&#34;mac下代理设置&#34;&gt;Mac下代理设置&lt;/h2&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;采菊东篱下，悠然见南山。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;一直都在网络上找Mac下的代理设置，因为使用了VPN。但是，查找的资料一直都没有能说清楚，直到昨天，终于看到了&lt;a href=&#34;https://dmorgan.info/posts/mac-network-proxy-terminal/&#34;&gt;这篇文章&lt;/a&gt;，把我近几个月来的烦恼都解决了。不知道能不能查阅到，所以我贴了大部分内容。&lt;/p&gt;&#xA;&lt;h3 id=&#34;在终端下访问系统代理&#34;&gt;在终端下访问系统代理&lt;/h3&gt;&#xA;&lt;p&gt;&lt;strong&gt;scutil&lt;/strong&gt;命令管理系统配置参数，通过 &lt;strong&gt;&amp;ndash;proxy&lt;/strong&gt;参数来显示系统代理信息。&lt;/p&gt;&#xA;&lt;p&gt;未配置代理情况：&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ scutil --proxy&#xA;&amp;lt;dictionary&amp;gt; {&#xA;  FTPPassive : 1&#xA;  HTTPEnable : 0&#xA;  HTTPSEnable : 0&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;配置代理的情况：&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ scutil --proxy&#xA;&amp;lt;dictionary&amp;gt; {&#xA;  ExcludeSimpleHostnames : 1&#xA;  FTPEnable : 0&#xA;  FTPPassive : 1&#xA;  GopherEnable : 0&#xA;  HTTPEnable : 1&#xA;  HTTPPort : 49199&#xA;  HTTPProxy : localhost&#xA;  HTTPSEnable : 1&#xA;  HTTPSPort : 49199&#xA;  HTTPSProxy : localhost&#xA;  ProxyAutoConfigEnable : 0&#xA;  ProxyAutoDiscoveryEnable : 0&#xA;  RTSPEnable : 0&#xA;  SOCKSEnable : 0&#xA;}&#xA;&lt;/code&gt;&lt;/pr</description>
    </item>
    <item>
      <title>Hhreadbooklist</title>
      <link>https://guobingyi.github.io/book/hhreadbooklist/</link>
      <pubDate>Tue, 28 Jan 2020 11:14:49 +0800</pubDate>
      <guid>https://guobingyi.github.io/book/hhreadbooklist/</guid>
      <description>&lt;h2 id=&#34;好好阅读列表&#34;&gt;好好阅读列表&lt;/h2&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;记录好好阅读信息。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;2020年1月28日，好好已经完成以下书的阅读：&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;书名&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;备注&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;图片&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;《飞吧，红头发》&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;《愿望的实现》&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;《七色花》&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;《金波作品选》&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;《大头儿子和小头爸爸 甜密密的森林》&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;《神笔马良》&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;</description>
    </item>
    <item>
      <title>Changelife</title>
      <link>https://guobingyi.github.io/blog/changelife/</link>
      <pubDate>Sat, 25 Jan 2020 20:58:10 +0800</pubDate>
      <guid>https://guobingyi.github.io/blog/changelife/</guid>
      <description>&lt;h2 id=&#34;改变生活&#34;&gt;改变生活&lt;/h2&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;最害怕的事情就是习惯。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;自从不需要为了生活奔波后，就不知道了该怎么生活，或者说不知道现在该如何生活。原来，只要上班就可以了，现在不上班了却不知道干什么了？好讽刺。&lt;/p&gt;&#xA;&lt;p&gt;今天听到老婆说好好非常期待和我一起去爬石头的日子，现在回想起来已经好多年了，在她上幼儿园的时候，现在呢？已经二年级的下学期了。时间真不会为谁而停留，也不会你后悔就可以。其实，我不明白的就是为什么老婆总说我，说我不要在孩子面前玩游戏，现在我终于知道了。原来父亲的这个角色不是谁都可以替代的，每个人都有自己的角色。这些年来，我真的是缺少的这个角色的时间。最忙的时候，加班总早上出来，孩子还在睡觉，到晚上回家的时候孩子已经睡了，太多太多的时间都是这样过的，而当时却是没有选择。现在，有选择了，而我却又过着原来的生活，总想让孩子早点睡觉，这样我就可以打游戏了。我很多时候都是这样的态度，如果当天没有能玩游戏却感受到缺失了什么。所以，难道是游戏让我获得的东西是什么呢？任天堂的Switch我也买了，也玩了荒野之息，也感受到了大师么的杰作，可是为什么我还是不满足呢？还要去玩王者荣耀，还是每天都觉得什么都缺失呢？我想或多或少，是我自己没有认识到生活，自己应有的生活态度。&lt;/p&gt;&#xA;&lt;p&gt;好了，现在终于被老婆点破了，我这个缺失的父亲角色。我终于也开窍，原来我需要的是什么？培养孩子是一件伟大的事情，可惜我小的时候，父母都没有能很好的陪我，因为时间一下子到了我可以自己玩的时候了，我喜欢单机的游戏是因为我可以沉迷到里面，什么都可以不用管？什么都可以不用想，可是，现在的这个时候，我才发现原来一直让自己困扰的东西是原来没有的。难道，我失去的东西，让自己的孩子也同样失去吗？我不想这样，所以，我需要改变。或许，原来也同样说过同样的问题，可惜没有开窍，没有能这么深入的思考。只是，我觉得今天晚上，原本我都觉得我太郁闷了，什么事情都要说？为什么什么事情都是我的错？我难道在大年初一的时候玩一下游戏都是错的吗？我为什么那么难？现在，想同了，想明白了。原来我的任务，我的责任在此之前是不清晰的。我的生活方式是不正确的，我为什么会这样，就是因为我还没有适应这样的生活。所以，接下来就是改变。改变自己原来的生活方式，改变对生活的态度。先自己的健康问题要解决，然后就是家的责任，我能够做到。&lt;/p&gt;</description>
    </item>
    <item>
      <title>6UnderGround</title>
      <link>https://guobingyi.github.io/movie/under-ground/</link>
      <pubDate>Thu, 09 Jan 2020 16:17:25 +0800</pubDate>
      <guid>https://guobingyi.github.io/movie/under-ground/</guid>
      <description>&lt;h2 id=&#34;鬼影特攻&#34;&gt;鬼影特攻&lt;/h2&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;瑞恩·雷诺兹，说起来你应该不知道，但是说《死侍》，你应该就知道了。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://guobingyi.github.io/img/movie/6underground.webp&#34; alt=&#34;鬼影特攻&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;电影从剧情上来说，一般一般，每个队员都有一个代号，Zero One Two Three Four Five Six Seven。不知道为什么，就介绍了男队员和男主角的身份，女队员都没有介绍，不知道是不是我看的是第6部，毕竟我第一次看。所以，抱着这个态度去百度了一下，发现真的就只有这一部呀，那么难道是埋下伏笔，还有后续？不管怎么说，剧情还是有点拖沓，想多介绍的地方却没有，想快速的说明却又一直拖沓。这部片子就是给我这样的感觉，特效，武打，颜值，或许都不算什么。女的不怎么好看，男的不怎么帅，武打呢，哎，那个谁你过来一下。&lt;/p&gt;&#xA;&lt;p&gt;但是如果是从消遣的看，还是不错的，可以看到喷气飞机，高级商务机。豪车，豪宅，高科技。影片塑造了一个原本可以在全球获得最高财富的人，却把自己死了，做一个鬼魂，来处理政府不能处理的事情。而影片中的故事从土耳其的内政开始，先反应了战争所带来的痛苦和悲惨。给我印象最深的是，本国人居然轰炸自己人，而且炸就炸了，还使用了毒气，太TMD的恐怖了，炸不死你，还不毒死你，就是说一定要搞死你。而不是军队对军队，而是军队对医护救疗难民。只能说，战争真的恐怖，不是闹着玩的，希望和平一直到老，哈利路亚！&lt;/p&gt;&#xA;&lt;p&gt;男猪脚感觉就是一个救世主，非常符合欧美国家的电影，主角光环，什么都懂，上能制作高科技武器，下能徒手对付高级保镖。牛逼呀，什么都厉害，完全是无懈可击。Two，没有怎么介绍，就是一个女杀手，枪法精湛，武艺高超。当然，最好看的还是那对眼睛，蓝色呀。Three，全职杀手，我感觉是他母亲非常不喜欢他，感觉他做的事情非常可怕。当然，电影也说出了他为什么金盆洗手，是由于他一次执行任务，杀了没有母亲的孩子的父亲，我去，好绕。一下子感觉人生不应该这样。Five，是一个女生，医疗兵。感觉也没有什么特色呀，就做一下客场。Six，开场飚了一趟车就挂了，但是一般都是人都有自我保护能力，但是为什么他要开的让自己挂，而不是主角呢？Seven，就厉害了，前三角洲队员，原来用狙击枪的，现在什么都用的麻利。后面，Three和Two居然有一腿了。哎，什么都是导演说了算。最最最，让我受不了的是，弟弟为了政权，让哥哥被乱拳打死，太不合乎常理了。当然，剧情嘛，就是好人营救世界，坏人灭亡。非常符合人性的需求。&lt;/p&gt;&#xA;&lt;p&gt;怎么说呢？如果来者不拒的话，那还是可以看看的，如果觉得浪费时间的话，那还是算了，毕竟这样的片子还是多的。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Happywork</title>
      <link>https://guobingyi.github.io/blog/happywork/</link>
      <pubDate>Sun, 05 Jan 2020 17:29:30 +0800</pubDate>
      <guid>https://guobingyi.github.io/blog/happywork/</guid>
      <description>&lt;h2 id=&#34;如何快乐的工作&#34;&gt;如何快乐的工作&lt;/h2&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;如果，你做的事是噩梦，那么不如放手。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;好久没有一家人活动了，我终于放下游戏，放下心中的小打算，走出去，听了一场“演唱会”。&lt;/p&gt;&#xA;&lt;p&gt;“演唱会”是一个留德的钢琴师回昆明，举行的一场表演。用贝多芬250年来做契机的，来表达对贝多芬这位伟人的思念。不知道为什么？我真的从来不怎么喜欢音乐，但是却非常认真的听下来。我觉得感动我的不仅仅是音乐，而是这位演奏者的专注打动我了。我看到了一位对音乐热爱，并且对自己的技艺非常精湛的人感动。我不由想到了自己，自己对程序的热爱，是什么样的热爱？是激情过后的苍白，还是当初为了养家糊口而不得已的选择，我想或许都有吧，但是从骨子里我是真的热爱，并从这位演奏者身上看到了技艺的力量。一种让人全身心的投入，一种为之奋斗的感觉，对，就是一种自我实现，但又让人感动的状态。&lt;/p&gt;&#xA;&lt;p&gt;寻寻觅觅中，走到了现在，而却对自己真正想要得到的东西而感到迷茫，什么是自己需要的？什么是自己喜欢的？自己想做什么？在老婆不断的建议中，我也在不断的尝试，可是昨天晚上，又让我知道了自己真正需要的是什么，对程序，我写代码的时候可以忘却自己，能从代码中获得不一样的感觉，不论是为了什么，在这个过程中我获得了自我。&lt;/p&gt;&#xA;&lt;p&gt;我，一直以来，自己家的电器/电脑/手机，出现了什么问题，我都能自己解决，当然也包括了朋友的。在这个过程中我通过学习，通过自己的积累，能很好的处理这些问题。我一直都喜欢这种状态，也非常享受解决问题的过程。从种种方面来说，我喜欢的东西，或许我能从做的事情上来感受到快乐。但是，人不可能脱离这个社会，该学会的东西还是得学会。而我，却想做一个艺人，投入到自己喜欢的东西上面就是一生。突然想到了emasc这个软件，说一生都不够用，来学习她。我想，我就喜欢这样的事情。&lt;/p&gt;&#xA;&lt;p&gt;原来一直都喜欢用VS Code，因为太方便了，什么东西都可以不用想，直接拿来就可以用，插件非常方便，直观。也是在一瞬间才发现，就是因为这样，我们对细节的了解都依托在了IDE上。缺少了对细节的关注，缺少了折腾的心，原本时间就是那么多，为什么还要去依托IDE。我想从今天起，我还是回归到Emasc上，虽然她是那么古老，需要自己动手的东西那么多，可是我却感到踏实。但是却又另外的一个声音在告诉我，人生苦短，为什么不用最好的东西来节省精力，把时间都花在需要关注的地方。我的思想在“打架”了。到底谁会赢呢？到底什么才是对的？&lt;/p&gt;&#xA;&lt;p&gt;其实，真的没有对错，或许在不同的时期，没有选择就是最好的，是否有必要一定要得出一个结论呢？&lt;/p&gt;</description>
    </item>
    <item>
      <title>Ad Astra</title>
      <link>https://guobingyi.github.io/movie/ad-astra/</link>
      <pubDate>Thu, 26 Dec 2019 17:28:35 +0800</pubDate>
      <guid>https://guobingyi.github.io/movie/ad-astra/</guid>
      <description>&lt;h2 id=&#34;星际探索&#34;&gt;星际探索&lt;/h2&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;布拉德·皮特，我喜欢的男影星之一。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://guobingyi.github.io/img/movie/ad-astra.webp&#34; alt=&#34;星际探索&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;间隔1年之久，皮特终于出新片了，他的每部片子我都喜欢，毕竟演技实在太好了。&lt;/p&gt;&#xA;&lt;p&gt;这部片子是分两段时间看完的，毕竟没有那么完整的时间来看，人到中年，你懂的。&lt;/p&gt;&#xA;&lt;p&gt;我不知道，第一部分的感觉还不错，浩瀚无垠的宇宙，人们对外界充满幻想，而太空中操作的人，可以直接从太空掉入到地球。Roy是一名上校，负责太空中的事宜。和妻子的关系不是那么好，我原以为是太专注工作，看到最后才发现Roy是个好男人，不给别人添麻烦，最主要的是对自己的工作充满未知。&lt;/p&gt;&#xA;&lt;p&gt;第二部分开始就有点压抑，谜底被逐渐揭开，原来项目最终的计划就是除去他父亲的项目。Roy开始回忆他父亲，原来父亲一直都是把工作放到第一位，为了证明外太空是有生命的，而为此抛弃了家人，抛弃了要回家的同事，一直在外太空研究。我觉得，这部片子没有非常华丽的打斗场面，没有非常多的特技，但是皮特的演技却让我所折服。每个眼神，每次对话都这样迷人，或许这个就是大牌，在枯燥中表现一切。&lt;/p&gt;&#xA;&lt;p&gt;我喜欢这样的片子，像《僵尸世界大战》一样，皮特就是一个非常普通的人，而却完成了伟大的任务。《星际探索》也是一样，我有时真不能理解为什么会这样？但是，最终，从以人为本的角度来说，这就是最好的结局，而最后的那句话，也让人深思。“我们在忙于追逐未来，却忽略了现在；我们在期待未来，却忘记了现在；我们为什么而活，为了最亲近的人。”太过于将期待寄托未来，不然好好活在当下。&lt;/p&gt;&#xA;&lt;p&gt;或许，最近的生活也让我非常迷茫，我不知道我该做什么，我该如何做？但是，生活还得继续。每天都在为未来买单，每天都提心吊胆，还不如实实在在的过好现在。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Mac Batteries</title>
      <link>https://guobingyi.github.io/blog/mac-batteries/</link>
      <pubDate>Tue, 24 Dec 2019 18:33:37 +0800</pubDate>
      <guid>https://guobingyi.github.io/blog/mac-batteries/</guid>
      <description>&lt;h2 id=&#34;mac电池寿命&#34;&gt;Mac电池寿命&lt;/h2&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;我以为你可以继续，其实你已经努力了！&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;从用笔记本开始，一直都没有用到过需要修理电池，最近的一次是x230的笔记本显示电池需要维修，我没有理她，我觉得不行就当一个台式机用着了，大不了直接用适配器工作好了，可是没有多久我的苹果笔记本也报这样的提示的了。我郁闷了。毕竟mac是主力机，很多工作都需要在上面做，而且我觉得我使用电脑的频率明显减少了，但是为什么还会出现了这个问题？我理解了一下苹果提供的电池方案：&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.apple.com.cn/cn/batteries/maximizing-performance/&#34;&gt;电池-充分延长电池使用时间和寿命&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;这样的解决方案并没有解决我的问题，而我理解的是最近成天24小时的插着电池，没有进行了深充深放的操作，我一直错误的任务锂电池或者苹果的电池是没有这样的忌讳的，可是从实际的情况来说，还是需要进行必要的深充深放，并且不要长时间的插电。&lt;/p&gt;&#xA;&lt;p&gt;不论怎么说？如果这就是我使用的电池状态，那么意味着每隔3～4年的时间，我得给自己的笔记本换电池，这样成本就增多了。不希望这样&amp;hellip;&amp;hellip;&lt;/p&gt;&#xA;&lt;p&gt;今天，开始重新对mac笔记本的电池有了新的认识，也希望重新按照健康的标准来使用，我希望这个就只是一个假象，或者说，我的电池开始维修报警后，我还能用多久！&lt;/p&gt;&#xA;&lt;p&gt;也有其他说法是天气问题，但是比起天气问题来说，我更相信的说法是苹果的系统升级后，变着法来升级硬件呀！&lt;/p&gt;&#xA;&lt;p&gt;以下是网友提供的保养电池的方法，我觉得还是毕竟靠谱的，如果从淘宝上买了新电池后，就这样保养了。&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;第一种方法：保持离子的活性，提升电池健康度。&#xA;&#xA;1、首先我们使用电源适配器把电池充满电；&#xA;&#xA;2、拔掉电源适配器，重置smc； Shift - Control - Option - Power；&#xA;&#xA;3、然后使用电池运行macbook，直到电量用到10%后再插入电源适配器；&#xA;&#xA;4、提示：连续多天充放电，用到10%或者自动关机再冲，连续几次后就不提示修理电池了，过了几个月又提示，用的第二种方法解决！第二种方法：最新系统解决电池校准。&#xA;&#xA;最新雪豹系统目前已经免费升级了，官方在系统中对电源管理计划进行了优化，macbook air就是升级最新系统后解决了第二次提示修理电池的问题。&#xA;&#xA;友情提示：macbook电池采用的是锂电池，如果长时间使用电源适配器的话会导致电池离子的活性度降低，从而电池健康度会越来越差。建议每个月进行一次完全冲放电。&#xA;&#xA;第三种方法：更换电池。&#xA;&#xA;一般来说macbook锂电池充电循环次数只能用400-600次，电池基本上就不耐用，要出现问题了。&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;blockquote&gt;&#xA;&lt;p&gt;ps. 2020-1-29 补充&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;不知道为什么？真的，如果说没有能耐得住的话，我想我已经换了电池，我忍住了，我想看看我的电池什么时候真的就报废了，或者说充不了电了。今天在电脑升级到10.15.3的时候，电池需要维护的报警没有了，看了一下电池状态居然是正常的，我不知道我还能说什么？或许这个套路让多少像我这样有强迫症的人换电池呢？ 居然好了，不知道该开心还是郁闷？&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;ps.2021-01-03 补充&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;我也不知道，居然又用了一年，电脑整体性能依然能够满足需要，唯一的不足就是电池。因为使用了HHKB的键盘，所以充满电池后居然一晚上就光，找了许多原因，甚至重置smc，都无法改善一晚上电池耗尽的情况。将HHKB键盘的电池取掉后，电池一晚上掉电11%，极大的提高了，至少对我来说已经很满足了。希望在用一至二年吧，我觉得目前的需求最大的还是其他吧。电脑，手机，再等等吧！&lt;/p&gt;</description>
    </item>
    <item>
      <title>我与游戏</title>
      <link>https://guobingyi.github.io/blog/%E6%88%91%E4%B8%8E%E6%B8%B8%E6%88%8F/</link>
      <pubDate>Sat, 21 Dec 2019 10:46:55 +0800</pubDate>
      <guid>https://guobingyi.github.io/blog/%E6%88%91%E4%B8%8E%E6%B8%B8%E6%88%8F/</guid>
      <description>&lt;h2 id=&#34;我与游戏&#34;&gt;我与游戏&lt;/h2&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;玩物丧志，是很多人说的一句话！&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;是的，我喜欢玩游戏。但是不是厉害的那种，属于自己沉浸在游戏中的感觉，而更多的是在游戏上体会原来缺失的感觉。&lt;/p&gt;&#xA;&lt;p&gt;最近入手了任天堂的Switch游戏机，从体验上来说和电脑上玩差不多，或许也是从换了mac笔记本后，没有在笔记本上玩游戏了，这个体验只能是一般。毕竟，原来早就想拥有一台掌机，现在愿望实现了。&lt;/p&gt;</description>
    </item>
    <item>
      <title>运维</title>
      <link>https://guobingyi.github.io/blog/%E8%BF%90%E7%BB%B4/</link>
      <pubDate>Wed, 13 Nov 2019 11:22:00 +0800</pubDate>
      <guid>https://guobingyi.github.io/blog/%E8%BF%90%E7%BB%B4/</guid>
      <description>&lt;h2 id=&#34;关于运维的一点意见&#34;&gt;关于运维的一点意见&lt;/h2&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;2013年写的，后面翻出来感觉那个时候的自己真棒！&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;对于即将离开项目组,对我这段时间的运维工作做一个总结.&#xA;首先来到项目组，需要把项目中的一些基础情况了解一下。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;谁负责那一块的开发，联系电话。能问人的时候，一定要问，这样比你自己看代码来的要快一些，为了快速反馈客户这种办法是最好的，当然你也可以下来自己在摸索一下，以后遇到这样的问题就OK了。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;了解客户的基础信息，如这个人在这个部门中是什么样角色，负责系统的哪一部份功能，电话号码。这样有什么问题，可以及时和客户联系。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;态度。绝对不能和客户说这不关你的事，不关你的事，那么关谁的事。记住，任何问题到你手上，首先不需要很急，慢慢将问题记录下来，找人或者自己将问题解决，这是最基本的。如果能和客户建立起良好的关系，那么客户也会理解你的工作，有些情况下还会为你的领导讲好话。这些都是和客户交换得来的。如果你得罪了客户，那么客户也不会给你面子，什么你解决不了，那么客户就会叫经理换人。在说说这一点，如果你有问题，去打电话询问，一接到电话对方的态度就打动了你，即使他没有能立刻帮你解决问题，我相信你也是可以理解的，如果一接到电话就说这不关你的事，即使问题解决，也会对你留下很不好的影响。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;业务，还是业务。到了项目组，不要被新奇的架构或者组件所吸引，慢慢静下心来将业务搞懂。这样当客户在那个业务环节出现问题的时候，才不会什么都不知道。所以，熟悉业务很重要，需求说明书，系统帮助手册，和客户沟通，自己从头到尾的使用一遍系统，这些都是很好熟悉业务的方法。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;在和上一个运维的同事移交的时候尽量多的问一下，目前系统那些地方容易出现问题，是怎么解决的，多问，是没有坏处的。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;其次，是运维的过程中需要注意的地方。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;遇到一个解决的问题，首先要把它记录下来。记录的内容大概有：问题是什么？是怎么解决的？解决这个问题使用了多少时间。人们常说，不要被相同的石头砸到脚。但是，我们很多时间在运维的时候就会出现这样的问题。为什么呢？还是那句老话，好记心不如烂笔头。还有一点好处就是，当移交工作的时候就可以将这些东西一并给下一位同事，送人玫瑰手留余香。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;有事没事多去系统上看看。为什么呢？原因是当系统出现了问题，你才知道吗？做好每天的履行检查，及时发现问题解决问题。那么客户对你的运维工作将会很满意。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;又来了业务。业务在系统中是会变的，这个地球人都知道。客户在使用系统的过程中，会存在一些业务的变更，这个时候，如果你连原来的业务都不熟悉将会很痛苦，如果你比客户还熟悉业务变更的趋势，那么兄弟你有业务专家的天赋啊。所以既然来到了这个项目的运维，为什么我们不好好学习一下业务呢？为了以后在这个领域成为业务专家而努力吧！&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;&lt;strong&gt;最后，就做一个总结吧。我从工作到现在一直想做一个优秀的程序员而努力，但是工作却常常和自己开玩笑。每次都是从运维开始的，慢慢才有了写代码的工作。我想说这个的目的是，并不是所有的东西都如你所愿，但是只要你在工作上都认真努力，那么不管是运维还是开发，你都能锻炼自己的一身本领。&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>我的摄影之路</title>
      <link>https://guobingyi.github.io/blog/%E6%88%91%E7%9A%84%E6%91%84%E5%BD%B1%E4%B9%8B%E8%B7%AF/</link>
      <pubDate>Mon, 21 Oct 2019 16:41:44 +0800</pubDate>
      <guid>https://guobingyi.github.io/blog/%E6%88%91%E7%9A%84%E6%91%84%E5%BD%B1%E4%B9%8B%E8%B7%AF/</guid>
      <description>&lt;h2 id=&#34;我的摄影之路&#34;&gt;我的摄影之路&lt;/h2&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;路漫漫其修远兮，吾将上下而求索。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;没有想到我会走到这条道路上来，还是因为没有了写代码的热情。那天，和老婆说起来，说我原来喜欢的是摄影，因为摄影给我感觉是一种热爱生活的表现。我的编程是因为要养家糊口，才欺骗自己说是喜欢的。&lt;/p&gt;&#xA;&lt;p&gt;摄影，对于我来说，也是一个不断摸索的过程，说白了就是一个学习的过程。原来我一直鄙视会photoshop，会美工的，会修改色彩的，我觉得那个就是会用一下软件的人，没有像编程一样改变世界的能力，他们就停留在使用的层面上，鄙视。现在，我才发现，任何一门技术都有其存在的价值，那就是让生活变的更加美好。&lt;/p&gt;&#xA;&lt;p&gt;回想起那时的我，就是一心以编程为主，眼里看不到其他的东西。为什么会这样？现在的我时常问自己，我想最主要的原因是由于编程的能力可以让自己获取一份稳定的收入。而其他的，我却没有去关注，因为编程的能力提升，耗费了我的大量时间和精力，我没有时间和精力去关注其他事情了。&lt;/p&gt;&#xA;&lt;p&gt;吐槽了一下自己的历程，现在要重新学习一下摄影，使用到的软件是adobe公司的两个软件。&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Adobe Photoshop CC 2019&#xA;&#xA;的确很好用，改变了许多我对图像处理的观点，也培养自己对色彩的敏感。&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Adobe Lightroom Classic&#xA;&#xA;借用金叔说的话就是：“单反无后期，不如用手机！”&#xA;&#xA;为什么这样说，现在我也能体会到一些了，比如我发现我单反照出来的，没有华为手机拍摄出来的照片好看，设置背甩几条街。当是，当我用软件进行后期处理一下，我才发现，我又可以甩华为手机拍摄出来的几条街了。毕竟，构好图，拍摄清晰，后期就好处理了。&#xA;&#xA;这里说一些苹果11的手机，真的，从你开始拍摄的时候起，你的单反还真干不过她，因为她的三个镜头很厉害。&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;两个软件都是用来学习的，没有用做商业用途，即还没有产生收入。说这个话的原因是，我用的盗版的软件，而且我原来还非常鄙视使用盗版软件的，打脸了。后来，我想了一下，为什么我会有这样的转变，是由于，我编程的时候可以使用免费的IDE，可以使用开源的项目，可以使用开源的编程语言，所以在付费层面上避免了一些开支，而且能很好的完成任务。所以，我说我用正版的软件。而现在，当我使用这些付费软件的时候，还没有找到免费的替代品，并且还没有能创造出收入，所以，你懂的。(原来我还是y意向要介绍一下怎么下载，怎么安装，怎么保护自己的数据，最后我觉得，使用盗版本身就是不好的，为什么还要宣传呢？)&lt;/p&gt;&#xA;&lt;p&gt;不知道是什么时候，对于盗版的软件，我都非常害怕，害怕有有后面，害怕这些好的软件由于盗版的原因而消失，所以我就不提供相应的下载地址了，毕竟，做为一个想要找到下载软件的人，百度，google，搜索一下，就会得到你想要的东西。我这里说的是，我都把现在的软件禁用了网络，避免一些不必要的麻烦。&lt;/p&gt;&#xA;&lt;p&gt;现在，开始学习如何使用他们，把一些想法付诸一些实践。当然，从以往学习的经验来说，我都是喜欢看官网的文档，虽然，很多时候没有中文的。&lt;/p&gt;&#xA;&lt;p&gt;这里说一点题外话，也督促自己的好好学习，不要在去想器材了。刚刚学习的时候，我觉得应该买一个中端的单反学习一下就可以了，结果不知道为什么买了个Canon EOS 80D,一个APS画幅的，没有是全画幅的感觉到郁闷了好久，一直想换称无敌狮(5d4)，还有想佳能的大三元，红圈镜头。通过学习甚至还想买尼康的D850，说白了就是两个事情困扰我。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;好器材，拍摄出好图片&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;为了让自己的技能快速提升，想到的是换器材，买最好的器材，或者买专业摄影师的器材。后来，在一次一次的尝试中发现，其实自己的器材已经非常不错了，并且完全满足了自己的要求，那么剩下的就是自己的技术问题了。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;好镜头，拍摄出好图片&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;镜头为了感受一下，买了佳能最超值的小痰盂三代，699这个价格非常给力，让我体会了一下大光圈的效果，当然我觉得好用的还是套机上的那个EFS 18-200mm f3.5-5.6 IS镜头，毕竟这个镜头单买都是2000多。从玩电脑，到玩摄影，给我的感觉都是一份钱一份货，最重要的选择要对，比如电脑选苹果，单反选佳能或尼康。如果电脑选择了其他品牌，那么贵就不值得了，单反或许就这几家吧，我不知道我的选择是否是正确的。&lt;/p&gt;&#xA;&lt;p&gt;最后，我不在纠结这些了，因为所有的这些都是建立在技术上面的，如果没有技术，那么再好的器材，再好的镜头，也不过是一个装B的物品而已，并不能让你产生出优质的照片，ok,bb到此结束。期待下一个感悟后的我！&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;最好的镜头是眼睛，最好的相机是大脑。——某人说。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://guobingyi.github.io/img/IMG10986.jpeg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>我的女孩</title>
      <link>https://guobingyi.github.io/blog/%E6%88%91%E7%9A%84%E5%A5%B3%E5%AD%A9/</link>
      <pubDate>Sat, 12 Oct 2019 21:10:21 +0800</pubDate>
      <guid>https://guobingyi.github.io/blog/%E6%88%91%E7%9A%84%E5%A5%B3%E5%AD%A9/</guid>
      <description>&lt;h2 id=&#34;我的女孩&#34;&gt;我的女孩&lt;/h2&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;如果工作忙，那么就来带娃吧。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;没有想到我会一个人带娃一段时间。&lt;/p&gt;&#xA;&lt;p&gt;更加没有想到的是，她为了怕被我揍，既然把作业本斯了，还撒谎说和同桌闹撕毁了，在教室的垃圾篓里。我真没有想到的是做为一个爸爸，我是这样的。我应该反省的是我自己，我自己没有做好。&lt;/p&gt;&#xA;&lt;p&gt;工作的时候，大多数时间都是老婆在带孩子。我整整的和她相处的时间并不长，她的一些小毛病我都不知道。所以在这段时间里，我和她相处下来，知道了她的一些情况。&lt;/p&gt;&#xA;&lt;p&gt;我知道每个孩子都是有玩的天性，我们不应该去磨灭她，我也知道我在成长的过程中，也发生过和她一样的事情，所以我理解她。她今天哭的非常伤心，说不应该说谎的。看着她流泪，我真的很伤心，她甚至还害怕我打她。我才发现，我在孩子心里是一个什么样的爸爸，是一个做错了就要被揍的爸爸。&lt;/p&gt;&#xA;&lt;p&gt;我梳理一下。&lt;/p&gt;&#xA;&lt;p&gt;老婆要去青岛参加会议，外公外婆参加旅行社去旅游，爸爸妈妈在家照顾三爹，我照顾女儿。所以，按照女儿的话就是我们的二人时光。&lt;/p&gt;&#xA;&lt;p&gt;虽然在此之前，老婆曾主动的让我去帮女儿看作业，照顾女儿的一切，让出行前的我不要那么困难，但是我的内心总觉得没有什么大不了的，我程序都能写，就不能带娃了？牛逼就这样吹出来了，结果我也为此付出了相应的代价。&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;作业检查&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;二年级的小学生的作业相对上学期少了许多，但是对于我来说，却发现有很大的问题。在孩子她妈没有告诉我之前，我甚至以为就是一般的签名就可以了，结果是，你要帮孩子检查作业，看孩子的书写是否认真，明天带的书和课本是否带齐，红领巾，桌布，水杯，早点，加餐，美术工具，等等，是否已经准备好了。&lt;/p&gt;&#xA;&lt;p&gt;语文的预习大人要查百度，进行组词，看是否是多音字，是否是成语，当然就是解释，要解释给孩子词语的意思。听写，要读准音，检查听写的字是否写对，写整齐，拼音是否正确。背诵，检查孩子是否能背诵老师要求的内容。当然，最最最重要的是，孩子在做作业的工程中是否认真，是否配合你完成老师安排的作业。&lt;/p&gt;&#xA;&lt;p&gt;数学的检查相对要轻松一些，但是你得认真检查，不然就会出现错误的地方，而孩子也会因为这样&lt;/p&gt;</description>
    </item>
    <item>
      <title>Mac Catalina</title>
      <link>https://guobingyi.github.io/blog/mac-catalina/</link>
      <pubDate>Fri, 11 Oct 2019 16:40:13 +0800</pubDate>
      <guid>https://guobingyi.github.io/blog/mac-catalina/</guid>
      <description>&lt;h2 id=&#34;苹果操作系统-catalina&#34;&gt;苹果操作系统 Catalina&lt;/h2&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;折腾，喜欢折腾。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;苹果推送了新的操作系统Catalina，乍一看，我想到的Tomcat的日志文件Catalina.log。当然，其实不是，就是苹果的macOS Catalina。我喜欢苹果电脑，自从使用上了就没有想要换其他笔记本的想法。为什么呢？因为原来没有选择，就只能使用Windows操作系统，而且自己的工作必须也得在Windows下面才能完成。后来，变更了工作，可以使用苹果笔记本了，才发现其实还是有选择的。&lt;/p&gt;&#xA;&lt;p&gt;苹果笔记本使用下来的最大感受就是速度和反应速度比较快，而且没有让人烦恼的自动默默更新。当然，不得不说的是视网膜屏幕，真的写一天代码都不会累。但是，由于使用频率过高，也导致了苹果电脑出现了一些问题。我一直都非常信赖她，但是也是她教会了我要学会经常备份，没有什么是十全十美的，都会有问题。&lt;/p&gt;&#xA;&lt;p&gt;新版本推送后，我非常兴奋的进行了升级，可是给我的答案却是失败。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://guobingyi.github.io/img/mac_error.jpeg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;macOS 未能安装在您的电脑上&#xA;&#xA;储存系统验证或修复失败。(-69716)&#xA;&#xA;退出安装器以重新确定电脑，然后再次尝试。&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;按照原来的情况，我会在网上看一下有没有和我遇到同样情况的兄台，然后看看人家的解决方案，这次得出的结论是没有。由于刚刚长假过后，所以不想太累，想等等在弄吧。最搞笑的是，还有个null的标示。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://guobingyi.github.io/img/catalina-null.jpeg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;思前想后，我真不想弄了，想苹果过段时间应该会有相应的解决办法，可惜，我就是等不了呀。我这个有强迫症的人，怎么能有新的东西不能用呢？我想到的是空间问题，所以删除了一些不常用的软件。可是到官网一看，我去，空间只需要18.5GB。而我释放了40GB的空间，可惜还是同样的错误。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://guobingyi.github.io/img/catalina-update.jpeg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;然后，我仔细看了一下错误，“验证失败”，储存系统需要验证的地方是我启动了文件保险箱吗？我决定停用磁盘的文件保险箱。结果，系统无法启动了&amp;hellip;&amp;hellip;我心里无数匹马呀！还好，昨天备份了系统，所以就恢复吧，一看评估时间4小时，心里又出现了马。在无奈的等待中，系统恢复了。决定抱着试试的态度，进行了升级，结果成功了。原本想等着新版本来解决问题的，也有想过人工客服问一下情况，可惜这些都不需要了，成功了。&lt;/p&gt;&#xA;&lt;p&gt;说明了什么，我也不想得瑟，只能说明苹果的重心还是在iphone上，为什么？因为我苹果手机升级就没有遇到这些糟心的事情，笔记本上却真实的遇到了。&lt;/p&gt;&#xA;&lt;p&gt;看了一下catalina的功能，才发现，原来把磁盘分成2个区了，一个系统，一个数据。我原来文件保险箱是需要解锁的，所以后台更新没有弹出密码框，就报错了。&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;升级需谨慎，折腾需备份，不然，不就是多了个新空白系统嘛!&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;对于软件，真的没有什么银弹，自己是知道的，可惜还是那么的相信你。&lt;/p&gt;</description>
    </item>
    <item>
      <title>改变我的思路</title>
      <link>https://guobingyi.github.io/blog/%E6%94%B9%E5%8F%98%E6%88%91%E7%9A%84%E6%80%9D%E8%B7%AF/</link>
      <pubDate>Fri, 13 Sep 2019 22:46:44 +0800</pubDate>
      <guid>https://guobingyi.github.io/blog/%E6%94%B9%E5%8F%98%E6%88%91%E7%9A%84%E6%80%9D%E8%B7%AF/</guid>
      <description>&lt;h3 id=&#34;改变我的思路&#34;&gt;改变我的思路&lt;/h3&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;莫愁前路无知己，天下谁人不识君。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;最近又回到了刚刚开始的时候，原因是和老婆不在内耗了。我们终于和平相处了。对于内战的这段时间，我们都没有好好想想自己该做点什么，或者说将来要做点什么。&lt;/p&gt;&#xA;&lt;p&gt;老婆推荐我学习摄影，和小朋友的摄影，儿童摄影。&lt;/p&gt;&#xA;&lt;p&gt;其实，真正的问题在于我们之间其实也疏远了许多。&lt;/p&gt;&#xA;&lt;p&gt;Source Code Pro, Monaco, &amp;lsquo;Courier New&amp;rsquo;, monospace&#xA;Cascadia Code, Monaco, &amp;lsquo;Courier New&amp;rsquo;, monospace&lt;/p&gt;</description>
    </item>
    <item>
      <title>Hospital</title>
      <link>https://guobingyi.github.io/blog/hospital/</link>
      <pubDate>Fri, 06 Sep 2019 17:33:00 +0800</pubDate>
      <guid>https://guobingyi.github.io/blog/hospital/</guid>
      <description>&lt;h2 id=&#34;医院&#34;&gt;医院&lt;/h2&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;如果觉得自己的健康还不错，那可以去医院看一看。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;好久没有去医院了，不知道为什么？去医院总给人一种压抑的感觉，当然更多的是一种无奈。我2017年被确诊为糖尿病2型，即我是一个糖尿病人。在所有的人中，我被贴了这样的一个标签。我非常想撕掉她，可惜她一直都跟着我。&lt;/p&gt;&#xA;&lt;p&gt;天气阴着去医院是一种郁闷的事情，可惜我去了。而且，在去之前我忐忑不安，我不知道我是否会有其他并发症或者其他一些不好的东西。一切都是一个未知数。8点42分的挂号信息，我原本以为我不能量空腹血糖了，等拿了号再去吃早餐。但是去到医院的时候，我感觉我应该可以看到的，因为医生已经开始上班了（后来，我听老婆说8点医生就开始上班了）。拿着就医卡，到自助机上进行签到，发现没有这个用户，心里有点急，但是还好把所有卡都带上了。昨天，晚上我还说只带一张的时候，老婆让我全部带着，我没有抗拒，全部带着了，说明老婆的经验比我丰富，更主要的原因是，医院真的好久没有来了，不知道自己的就医卡是那一张了。签到后，去医生门诊的时候，刚好没有人，我就先看了，然后就是一大堆的化验。抽血，尿液，二次抽血，并发症检查。我或许都已经知道了做为糖尿病患者应该要做的检查了，但是，没有办法，顺着做吧。&lt;/p&gt;&#xA;&lt;p&gt;抽血的人很多,有些甚至是昨天开好的单子今天来抽，但是，更多的是今天的。看着自己的血被抽出来，我知道我今天得补充点营养了。尿液是在厕所里弄的，感觉医院的卫生间总有一种说不出来的难闻味。我知道要去住院部检查并发症，所以，先到阿拉丁回族馆吃了早点，我时常会想到老婆说的，为什么都不重要，自己的健康非常重要，所以吃早点成了重要的事情。到住院部的时候，我非常庆幸自己的选择，因为医生在开早会，什么都还没有准备好。还是熟悉的走道，熟悉的医生，熟悉的病床。今天早上，医生还问我是否要住院检查，我回绝了，我知道，都一样的效果，不折腾。所以带着想是不是住院部的病床又空出来了，我特意留意了一下，果真如此，病床有空余的了，毕竟，一个星期7千多的治疗费还是比较昂贵的。对于并发症的检查我还是比较有自信的，毕竟自己还年轻，如果这个时候就出现问题了，那么，就非常麻烦了。虽然抱着忐忑的心做了检查，结果还是让人满意的。所以，这个钱你也不能说白花了，毕竟两年了，是该做一下检查了。&lt;/p&gt;&#xA;&lt;p&gt;餐后两小时的采血就是等待，我知道今天早上又看不到医生了，应该下午吧！在我前面抽血的人，医生告诉他一个小时可以打印结果的时候，我以为我也是这样的。当我也问医生的时候，医生说：“下午4点”。我知道，不可以了。所以，我先到医生那里问了一下，她也建议我下午来，这样结果看的清晰些。&lt;/p&gt;&#xA;&lt;p&gt;回到家，一大家子人吃饭。我还是不习惯这样的场景，但是，人生就是这样，你无法选择的时候，就闭上眼睛接受吧。我不知道为什么，老婆也没有说我去医院的事情，或许，我感觉老婆也不想让其他人知道。对于好好，我们都害怕有人在她面前说我生病的事情，对于她，不想给她太大的压力。&lt;/p&gt;&#xA;&lt;p&gt;吃完饭后，我还是一样的走路，睡觉。我觉得我自己已经非常自我了，我没有被外界打扰。由于早上还是有点累的，所以我睡的比较熟。在闹钟想起的时候，我醒了，但是想到早上医生说要到4点才能拿结果的时候，我又眯着了。迷迷糊糊中，我感觉到我要醒了，毕竟要到医院的。可惜感觉怎么也睁不开眼睛，我知道我必须通过洗脸才能清醒过来。我从床边摸着到卫生间，还没有接水洗脸，就感受到脚上水的冰凉。我知道我已经到卫生间了，但是怎么感觉还是醒不过来呢？我非常着急，突然，我醒来了。但是，梦境中的感觉却是那么真实。我感觉到我很长时间没有这样了，或许每次这样的梦境都是我已经非常累才会出现的情况。&lt;/p&gt;&#xA;&lt;p&gt;我还是提前来到了医院，我带着碰运气的心态，查了结果，让我出乎意料的是结果出来了，而不是4点，而是3点。我有点不理解那位医生为什么要说的差距那么大？或许真的是医院的人太多了，应该分流吧。带着忐忑的心，来到诊所。门关着，有很多人在外面等着，我知道得排一下对了。所以，我也没有去门口站着。我就这样等了30分钟，门开了一大群人冲进去，我想我早上来的，应该就看个结果很快的，我也跟着进去。有个小伙，说他中午的号，一个小时过去了都没有动静，非常激动，我一看很多人看报告，我就和医生沟通了一下，说这种情况我们看报告的怎么排队呢？医生说：“在门外排队，先来先看？”我非常无语，但是又没有什么好说的，毕竟还有许多实习生，所以我也退出去等着。在门外排队，门第二次开的时候，既然又开始叫号了，可惜没有人，我们其中一个看结果的说，我就看一个结果就好了，然后就进去了。我算下一个，可惜后面来了个人，她说她早上看的要看结果，要排到我前面去，我没有让。我进去的时候，发现有个做在门口的人，实在太痛苦了，还是什么情况，也忍不主去门口站着了。我非常不喜欢这种，我可以认真的等待，排队，可我不能忍受这种没有秩序的操作。&lt;/p&gt;&#xA;&lt;p&gt;医生和我说，从检查结果上来看还可以，但是血糖控制的不好。需要我吃上药，二甲双胍，三个月后来复查。一个定论，花了我一天的时间。我知道有人甚至比我花的时间多，因为生病了。由于中午吃的不是很多，来医院的时候我买了燕麦面包。所以，我先到2楼抓药的地方吃了一片。以为，这样会出现我的名字，然后去拿药。吃完后发现，怎么还没有，看一下就诊的纸条说要去签到，然后去抓药的地方问一下，她说在对面，我一看对面是一个简易门诊，两个医生做在那里。一个男的一个女的，女的年纪大约50多岁，男的年纪大约45左右。我走过去问男的，男的甚至都没有说话，指了对面的机子。我走到机子前一看，是拿药的确认流程。我按照操作把就医卡放到机子上，可惜没有什么动静。我回头想进一步询问的说话，男医院看到我向他走来直接扭头不看我。我只有硬这头皮问了女医生，女医生说是的，把就医卡放上去就可以了。我无奈的走过去又放了一次，发现还是一样的情况，突然看到界面上显示，打印纸用完了。我走到后面的另外一台机子一刷就好了。我太无语了，怪自己不看提示。但是也又点对男医生有意见，做医生不应该帮助别人吗？最后，我有自己说服自己，或许医生一天都对着这样的人太多了，无语了，麻木了。这是谁的错呢？&lt;/p&gt;&#xA;&lt;p&gt;晚上，老婆让我继续挂了营养科的号，让第二天再去一趟医院。虽然我的心里有一万个不想去，但是我告诉自己这个是对自己负责。第二天，我去了，1号楼的11层要上去还费了些精力。但是，还是找到了。医生是个小年轻女医生，在我看病前还接受了电视台的采访，说中秋节少吃点月饼，因为是高热量的，对身体不好。我等着她采访完，她对我的病情进行了了解，说了我吃东西该注意的事项，我才发现和老婆说的都一样，但是为什么我听不进老婆说的呢？我在反省这个问题？&lt;/p&gt;&#xA;&lt;p&gt;医院里的病人很多，但是每个人的脸上都挂着不安，我甚至看到有对老夫妇在哭泣。我们开始注意自己的健康，开始去热爱生活，可是，如果身体夸了，一切都变的不重要了。&lt;/p&gt;&#xA;&lt;p&gt;珍惜生命，热爱生活！&lt;/p&gt;&#xA;&lt;p&gt;没有什么是比健康更重要的，如果有，那就是命。&lt;/p&gt;</description>
    </item>
    <item>
      <title>有效的工作</title>
      <link>https://guobingyi.github.io/blog/%E6%9C%89%E6%95%88%E7%9A%84%E5%B7%A5%E4%BD%9C/</link>
      <pubDate>Mon, 02 Sep 2019 16:30:19 +0800</pubDate>
      <guid>https://guobingyi.github.io/blog/%E6%9C%89%E6%95%88%E7%9A%84%E5%B7%A5%E4%BD%9C/</guid>
      <description>&lt;h3 id=&#34;有效的工作&#34;&gt;有效的工作&lt;/h3&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;我们一直都觉得自己努力了，结果呢？&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;最近，有段时间是自己可以支配的。回想起原来上班的时候，如果想做点自己的事情，必须把工作的内容完成。而那个时候还因为工作比较忙，刚刚开始想要做的事情或者已经做了一半的工作都得丢下来忙工作。这样就导致原来思考了一半的事情，或者做了一半的事情都得丢掉。如果想起来做的时候，又得从头开始。效率非常底，同样的事情总是要从头开始？现在，有时间了，为什么不把要做的事情做了呢？还是，又有其他的事情要做吗？回想起这些，我发现，其实并不是外界打扰自己，而是自己的方法不对。我发现，这个是人的目标没有明确导致的。&lt;/p&gt;&#xA;&lt;p&gt;为什么这样说？比如说我们有三件事情要做，其中有一件事情是无目标的。那么，你会发现这件事情会拖很久，而且没有结果。&lt;/p&gt;&#xA;&lt;p&gt;由于最近看到的招聘信息对年龄的限制，导致向我这样37岁的人，无法找到一份自己满意的工作。所以，与其这样无聊的耗下去，不如去追一下自己的梦，做一个自由的开发者。想做自由开发者，要如何做？一直都是我思考的问题，是在外包网上承包吗？我觉得这样的几率很小，而且需要去和客户沟通需求，一想到这样的事情，和我找一份工作有什么区别呢？&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;自己控制需求&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;自己控制整个软件的生命周期&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;无需到处叫卖&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;需要满足这样，或许只有苹果平台上的部分App可以做到这样。我想，就目前来说这个选择也是最好的。为了保证这个目标持续下去，所以也回到文中所说的，效率。不要让一件事去打扰另外一件事情，就必须确定一个目标。&lt;/p&gt;&#xA;&lt;p&gt;暂时给自己设定以下目标：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;学习macOS和iOS平台下开发，熟悉开发流程。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;先用一个实际项目，血糖检测App来熟悉苹果平台上面的开发。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;发布自己的第一个App。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;大的目标是好确定的，现在需要将大目标进行细分。&lt;/p&gt;&#xA;&lt;p&gt;1.1 阅读苹果帮助文档；&lt;/p&gt;&#xA;&lt;p&gt;1.2 阅读相关苹果开发书籍；&lt;/p&gt;&#xA;&lt;p&gt;1.3 将学习成果记录下来；&lt;/p&gt;&#xA;&lt;p&gt;1.4 督促自己深入学习。&lt;/p&gt;&#xA;&lt;p&gt;预计完成时间：2019-12-30&lt;/p&gt;&#xA;&lt;p&gt;2.1 编写血糖检测App需求设计文档和概要设计文档；&lt;/p&gt;&#xA;&lt;p&gt;2.2 通过学习编写macOS平台下App；&lt;/p&gt;&#xA;&lt;p&gt;2.3 通过学习编写iOS平台下App；&lt;/p&gt;&#xA;&lt;p&gt;2.4 通过学习将使用服务端（go实现）与macOS平台App与iOS平台App进行数据交互；&lt;/p&gt;&#xA;&lt;p&gt;2.5 总结开发苹果App过程，记录相关代码实现；&lt;/p&gt;</description>
    </item>
    <item>
      <title>宝贝周末一天</title>
      <link>https://guobingyi.github.io/blog/%E5%AE%9D%E8%B4%9D%E5%91%A8%E6%9C%AB%E4%B8%80%E5%A4%A9/</link>
      <pubDate>Sun, 01 Sep 2019 10:07:48 +0800</pubDate>
      <guid>https://guobingyi.github.io/blog/%E5%AE%9D%E8%B4%9D%E5%91%A8%E6%9C%AB%E4%B8%80%E5%A4%A9/</guid>
      <description>&lt;h2 id=&#34;宝贝周末一天&#34;&gt;宝贝周末一天&lt;/h2&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;总喜欢插播广告，这回被收拾了。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;我家的宝贝，最近做事情总不认真。今天早上原本要去滑轮的，却由于做作业不认真被叫停了。我和她老妈原来是准备给她学习一年时间的，毕竟这样可以锻炼她的身体，让她有个强壮的体魄。可是小朋友，作业不认真，被老妈收拾了。其实，我非常郁闷的是对于这一次的事情，我都被小朋友欺骗过好几次了。对于她的作业我一般都不会去检查的，我都非常相信她。从这一次后，我也发现，其实每个人都小过，都做过小时候的事情，为了玩，真是拼了。比如说今天早上的计算题，正常情况下是错一到两题的，而一看错了十多题，当然来气了。加上昨天去学习钢琴，被老师说这个小朋友非常聪明，如果能蒙混过关就不会好好的去弹，总在挑战老师的底线。&lt;/p&gt;&#xA;&lt;p&gt;宝贝上小学的时候，我由于身体原因辞职回家。原本很多事情，我都可以帮助老妈来分担的。但是，从这段时间以来我发现我离孩子好远，我都跟不上她的节奏了。我会经常被鄙视，因为我从来都没有去关注她的作业，她的学习情况，她现在的认识能力。导致我和她经常聊不起来，对于作业上的问题我都经常无法为她解决。弹琴就更不用说了，我一窍不通。什么高音符，底音符，我都不知道，所以离她有点远了。&lt;/p&gt;&#xA;&lt;p&gt;对于今天不能去滑轮我想是累计已久的原因了，不认真。不管你怎么和她说要认真，总是在随意的应付。心里想的最多的还是玩，根本没有将你说的话听进去。早上起床后，就叫嚷着去滑轮，老婆让她先做两页作业，可是她就是不想做，最后在老婆的坚持下，去做作业了。但是，感觉她根本没有静下来做。在她说做完了，要去滑轮的时候，还和我说要带着钱去，我就知道她的心思都在滑轮上了。非常真实的是，我听了她说作业做完了，没有去检查，而是帮她拿滑轮装备去了。老婆认真的一检查，发现错误非常多，以至于直接取消了去滑轮。宝贝，大叫着说要去滑轮，做在地上哭，老婆怎么也叫不停的时候，用尺子打了她，但是她还是不屈不挠，一定要去。老婆要去上课，她一直追到门口，口里哭喊着：“妈妈，我错了！”，可惜老婆没有给她机会让她在家反省。并且叮嘱我让我好好利用这次机会，她太想的这个想法，让她把不认真的习惯改了。我和她说：“今天早上被收拾了是什么原因？是不是自己不认真，人是在桌子面前的，可是心已经飞到滑轮场上了。”她说是的，并且对于不能去滑轮感到非常难过。慢慢的安静下来，我告诉她：“是不是还想这去滑轮呢？我想是不可以了，你只能改变你不认真的习惯，或许以后还有机会。”她说：“但是，我太想去了！”。我知道是的，或许从另外的一个角度来说，孩子上了一周的课，都没有能好好的出去玩一会。这个我理解她，但是对于不认真做事是不可以的。我让她去改错，刚刚开始是认真的，但是过一会就又开始了。或许这个习惯已经很久了，而我们却没有能及时的改正。&lt;/p&gt;</description>
    </item>
    <item>
      <title>我和王者荣耀</title>
      <link>https://guobingyi.github.io/blog/%E6%88%91%E5%92%8C%E7%8E%8B%E8%80%85%E8%8D%A3%E8%80%80/</link>
      <pubDate>Sat, 31 Aug 2019 22:23:21 +0800</pubDate>
      <guid>https://guobingyi.github.io/blog/%E6%88%91%E5%92%8C%E7%8E%8B%E8%80%85%E8%8D%A3%E8%80%80/</guid>
      <description>&lt;h2 id=&#34;我和王者荣耀&#34;&gt;我和王者荣耀&lt;/h2&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;吻住，我们能赢！&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;曾经一度痴迷王者荣耀的我，现在一下子降温了。我给自己的目标是打上王者，现在这个目标实现了。我曾经一度以为我会非常兴奋，我会各种吹嘘，我会等等。但是，结果是无尽的空虚。为什么会这样？我原来一直保持的习惯或许因此而改变，我新的追求又是什么呢？&lt;/p&gt;&#xA;&lt;p&gt;2017年，我学会了玩王者荣耀，一直到前几天打上王者后，我对王者荣耀的热情开始退减。虽然仅仅只是王者1星，我知道还有110星，难道我会重新设定目标吗？我想我是不会了，我知道这个就是我的最大能力吧！因为从玩这个游戏开始，我已经花了太多的时间在上面，我该把时间分到其他地方了。说说体会吧，我一直都听了官方的说法，5V5公平游戏，我想公平是对于玩家最大的安慰吧，但是，你只要玩到一个时间点，你会发现，这个都是假的，皮肤的隐藏特性和V8效果，让你感受到失望。当然，我也成为了V5玩家，为什么呢？不然就是靠场次堆。不可否认，游戏中说的意识，操作等等一些吹的东西，都不如匹配到神级队友给力。玩多了，你发现，什么能力都是假的，运气非常重要。你玩的在烂，队友都要带飞你；你如何厉害，队友都要把你带沟里。这个就是游戏的理解，说什么意识操作的，你看看有几个主播不是V8的。其实，有很多人早就看破了这个局，但是局里的人怎么都弄不明白为什么？所以，聪明的人早早离开，智慧的人都不会去玩，愚蠢的人却在局里不能自拔。突然，想起看到的一篇文章，说王者荣耀是国人的自娱游戏。把多余的时间用来自娱，而不是思考。细思恐极呀，我们这个层次的人就只能把时间花费在这上面，所以我们被人领导，被人奴役是正常的。思考的时间都去那里了？你想到了什么？为什么我还是这个状态？为什么我不能周游世界？为什么我看不起病？我的天呀，我思考的是如何练好一个英雄，如何多上几个星，结果被圈在里面。我会找借口，大家都娱乐，为什么我不能玩王者荣耀呢？我还和老婆吵过好多次，发现还是自己太年轻了。游戏中的确会给人放松的感觉，但是也何尝被对方锤得不能自理，挂机到麻木不仁，连败到怀疑人生，经常在4g的情况下来个460。这些都是游戏的感觉，特别是我觉得可以堆场次的时候，那种对决中，每次都看的清清楚楚。玩下来，发现这个游戏不需要什么技术，会平A就好了。输了不要难过，赢了不要高兴。心态就这样练起来了，对游戏也就无所谓了。原来玩游戏都会告诉自己遇到情况该怎么处理，该如何打好这一局，该如何上星？现在，想起来好搞笑呀，为什么？聪明的人思考如何让人生更上一个台阶，如何让自己的生活质量更高？我怎么很别人比？所以，有句话说：“可怜之人必有可恨之处！”。在希望别人怜悯的时候，自己是否努力去改变这一切了吗？&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;是时候说再见了!&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;It is time say goodbye!&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;哦，对了，我的皮肤怎么办？我的那些用钱买的皮肤呀？我这个是穷人思维吗？如果，用时间和金钱对比的话，我是否为了打翻了牛奶在继续哭泣呢？哦，明白了。原来，没有经历过痛苦，说什么甜蜜，我就真不知道了？我甚至在原来和自己说：“出家的皇帝才能开破红尘！”，现在我才知道，Great Master为什么是 Creat Master。就是大师不需要经历就能悟出的道理，你个凡人怎么能够理解！&lt;/p&gt;&#xA;&lt;p&gt;真香，我是蜕变吗？还是凤凰涅槃，欲火重生？还是打发无聊的时间？曾经听过，最郁闷的事情是，比你优秀的人比你努力。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Git</title>
      <link>https://guobingyi.github.io/code/git/</link>
      <pubDate>Fri, 30 Aug 2019 07:03:51 +0800</pubDate>
      <guid>https://guobingyi.github.io/code/git/</guid>
      <description>&lt;h3 id=&#34;git-常用命令&#34;&gt;Git 常用命令&lt;/h3&gt;&#xA;&lt;p&gt;1.初始化仓库信息&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt; git init&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;ol start=&#34;2&#34;&gt;&#xA;&lt;li&gt;增加文件信息到库&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt; git add -A&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;ol start=&#34;3&#34;&gt;&#xA;&lt;li&gt;提交代码&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt; git commit -m &amp;#34;first commit&amp;#34;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;ol start=&#34;4&#34;&gt;&#xA;&lt;li&gt;同步到远程库&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt; git push -u origin master&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;ol start=&#34;5&#34;&gt;&#xA;&lt;li&gt;将远程库信息同步到本地&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt; git clone http://192.168.100.226:3000/guoby/wzry.git&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;ol start=&#34;6&#34;&gt;&#xA;&lt;li&gt;撤销提交操作&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;git commit --amend&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;ol start=&#34;7&#34;&gt;&#xA;&lt;li&gt;重新更新git服务器信息&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;git remote rm origin&#xA;git remote add origin http://192.168.100.201:3000/guoby/wzry.git&#xA;git push -u origin master&#xA;&lt;/code&gt;&lt;/pr</description>
    </item>
    <item>
      <title>牙治疗</title>
      <link>https://guobingyi.github.io/blog/%E7%89%99%E6%B2%BB%E7%96%97/</link>
      <pubDate>Sat, 10 Aug 2019 17:48:32 +0800</pubDate>
      <guid>https://guobingyi.github.io/blog/%E7%89%99%E6%B2%BB%E7%96%97/</guid>
      <description>&lt;h2 id=&#34;牙治疗&#34;&gt;牙治疗&lt;/h2&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;牙疼不是病，疼起来真要命！&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;原本就知道可以洁牙的，是原来黄总说过她去洁牙，然后一个月又恢复了，导致我对洁牙非常有顾虑。当然最恐怖的还是牙齿出血，会感染艾滋病，这个才是最要命的。&lt;/p&gt;</description>
    </item>
    <item>
      <title>巴尔干边界</title>
      <link>https://guobingyi.github.io/movie/thebalkline/</link>
      <pubDate>Thu, 18 Jul 2019 10:06:12 +0800</pubDate>
      <guid>https://guobingyi.github.io/movie/thebalkline/</guid>
      <description>&lt;h2 id=&#34;巴尔干边界&#34;&gt;巴尔干边界&lt;/h2&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://guobingyi.github.io/img/movie/begbj.png&#34; alt=&#34;巴尔干边界&#34;&gt;&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;战争，总是让人受伤。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;俄罗斯的电影不怎么喜欢看，原因很简单，就是不怎么喜欢俄语。&lt;/p&gt;&#xA;&lt;p&gt;因为更多的时间看的是美剧，所以，对英语相对听起来好一点。&lt;/p&gt;&#xA;&lt;p&gt;或许，有这样的态度，所以看起来还是有点感觉不好，当然，本身的配音感觉也没有处理好。&lt;/p&gt;&#xA;&lt;p&gt;但是，正是因为这样，被剧情和视觉感染了。&lt;/p&gt;&#xA;&lt;h3 id=&#34;0x00-开头&#34;&gt;0x00 开头&lt;/h3&gt;&#xA;&lt;p&gt;如果说开头很一般的话，我觉得一点问题都没有。为什么这样说？还是因为开头都非常老套，一个团队，参与了任务，任务失败，团队解散。刚刚的开始，从故事或者从镜头来说都非常老套，但是是俄罗斯人拍的，所以忍着看了下来。&lt;/p&gt;&#xA;&lt;h3 id=&#34;0x01-正片开始&#34;&gt;0x01 正片开始&lt;/h3&gt;&#xA;&lt;p&gt;一般都是隔了几年，需要做重新组建团队，然后逐一找到成员，并且说明了一下，各自组员的状况。说明都过的不好，希望一雪前耻。&lt;/p&gt;&#xA;&lt;p&gt;中间穿插着战争给人们的伤害。&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;给人震撼的镜头01&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;丈夫带着待产的妻子去医院，然后被轰炸，丈夫着急找到妻子，发现妻子已经被炸死，婴儿呱呱在哭，护士抱起婴儿，拉着丈夫离开，可是丈夫已经崩溃，站在原地发呆，又一轮的轰炸，整个医院被夷为平地。&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;给人震撼的镜头02&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;一个村子被屠杀，一个小女孩躲在了桌子下面，她的警察叔叔找到了她，并抱起了她。在一路上，看到的尸体刻目惊心。&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;给人震撼的镜头03&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;大巴车被拦下前，是一顿机枪的扫射。什么是战争，一下子就感受到了。&lt;/p&gt;&#xA;&lt;p&gt;下车，全部跪地抱头。反面主角登场，逐一盘问。对牧师的那个镜头，太经典了。让牧师改变信仰的时候，我感觉到或许在死亡面前，有可能会改变吧。给我的结论是，信仰在国外的人，就想中国古代的节操一样重要，宁可死，也不会改变。&lt;/p&gt;&#xA;&lt;p&gt;当然，女主太漂亮，也让士兵们冲动了一下。好在男主太厉害了。&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;给人震撼的镜头04&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;剧情是不分国界的，好人总是被坏人利用。而导演也将坏人刻画的非常深刻。&lt;/p&gt;&#xA;&lt;p&gt;女主被抓了，原因是她在的医院是被坏人控制的，而且还是院长。&lt;/p&gt;&#xA;&lt;p&gt;院长就出来了指责一下反面老大就死了，给我的感觉就是战争中是没有什么权利可言的，枪在谁手上，谁说了算。&lt;/p&gt;&#xA;&lt;p&gt;逼问女主的时候，来个割喉，实在太恐怖了。女主的底线就是不能看着一个小女孩被处以极刑。&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;给人震撼的镜头05&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;虽然说6个人打100多人有点牛，但是看到的是，当装备压制的时候，还是可以的。&lt;/p&gt;&#xA;&lt;p&gt;战争，就得有人要牺牲。但是，到看坏人被揍得很惨的时候，还是很爽的。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Gitbook</title>
      <link>https://guobingyi.github.io/blog/gitbook/</link>
      <pubDate>Wed, 06 Mar 2019 10:29:40 +0800</pubDate>
      <guid>https://guobingyi.github.io/blog/gitbook/</guid>
      <description>&lt;h2 id=&#34;gitbook-初探&#34;&gt;GitBook 初探&lt;/h2&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;gitbook 是一个基于Node.js的工具。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;在Mac pro下安装gitbook非常简单，前提是安装了brew。&lt;/p&gt;&#xA;&lt;h3 id=&#34;0x00-安装node&#34;&gt;0x00 安装node&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;brew install node &#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;0x01-安装gitbook&#34;&gt;0x01 安装gitbook&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;npm install gitbook-cli -g&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;0x02-简单使用&#34;&gt;0x02 简单使用&lt;/h3&gt;&#xA;&lt;h4 id=&#34;1创建项目名称&#34;&gt;1.创建项目名称&lt;/h4&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;mkdir goodtime&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;2初始化项目&#34;&gt;2.初始化项目&lt;/h4&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;cd goodtime&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;gitbook init&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;3-编译项目&#34;&gt;3. 编译项目&lt;/h4&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;gitbook build&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;4-启动项目&#34;&gt;4. 启动项目&lt;/h4&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;gitbook serve&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;5-导出pdfepubmobi&#34;&gt;5. 导出pdf/epub/mobi&lt;/h4&gt;&#xA;&lt;h5 id=&#34;1安装插件&#34;&gt;(1).安装插件&lt;/h5&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;gitbook install&#xA;&lt;/code&gt;&lt;/pr</description>
    </item>
    <item>
      <title>Android Studio</title>
      <link>https://guobingyi.github.io/blog/android-studio/</link>
      <pubDate>Wed, 13 Feb 2019 10:31:13 +0800</pubDate>
      <guid>https://guobingyi.github.io/blog/android-studio/</guid>
      <description>&lt;h2 id=&#34;再见-android-studio&#34;&gt;再见 Android Studio&lt;/h2&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;我们还会再次相见！&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h3 id=&#34;0x00-缘起&#34;&gt;0x00 缘起&lt;/h3&gt;&#xA;&lt;p&gt;第一次开始Android开发的时候，是在Eclipse上进行的。那个时候需求安装插件，安装Sdk等等，非常不容易才能搭建起一个开发环境。但是，由于工作的性质，一直没有能好好的学习一下。在不段的学习过程中，发现了Android Studio逐步替换了Eclipse开发Android的地位，并且开发门槛也逐步降低。&lt;/p&gt;&#xA;&lt;p&gt;在看Android的Sdk文档的时候，发现了官方也推荐这个IDE进行开发，发现这个工具来头不了，是Google自己的IDE。&lt;/p&gt;&#xA;&lt;h3 id=&#34;0x01-我的安卓开发之旅&#34;&gt;0x01 我的安卓开发之旅&lt;/h3&gt;&#xA;&lt;h4 id=&#34;1-动物的叫声&#34;&gt;1. 动物的叫声&lt;/h4&gt;&#xA;&lt;p&gt;做这个app的时候，是看到Google可以搜索动物，并且还能发出动物的叫声，而好好刚刚3岁多，可以让她看看有那些动物，并且这些动物的叫声是什么，就着手开始写了，一开始什么都不知道，就只有这样的一个点子，然后看了《第一行代码》这本书开始的，作者郭霖和我同姓，但是人家可厉害多了。从写书的方式来说，我就觉得非常不错。原来我是非常鄙视国内作者的，写的东西苦涩难懂，简单的东西非用复杂的方式来表达。&lt;/p&gt;&#xA;&lt;h4 id=&#34;2-老人丢失找回&#34;&gt;2. 老人丢失找回&lt;/h4&gt;&#xA;&lt;p&gt;这个app的思路，来源自于我姑爹，他患上了疾病，有时候会自己走丢，大哥让我给他买哥电话手表，但是电话手表的找回功能却做的没有现在那么好，精度范围居然在50m外，而且没有行动轨迹。对于程序员的我说干就干，地图api使用了百度地图，想找一个云服务器来进行GPS信号传输，但是无奈的在于姑爹由于生病走了，所以这个app就搁浅了。&lt;/p&gt;&#xA;&lt;p&gt;从这个项目来说，所有的需要都来自于生活，然后让自己的技术服务于生活，那么这个技术就是好的。&lt;/p&gt;&#xA;&lt;h3 id=&#34;0x02-我的断舍离&#34;&gt;0x02 我的断舍离&lt;/h3&gt;&#xA;&lt;p&gt;虽然自己也认为，多学点技术没有什么坏处，所谓技多不压身。但是这个知识爆炸的时代，关注的过多，也会让自己迷失。所以，在断舍离的时候，想到的是，在自己横行发展差不多的时候，来一次纵向的发展，把关注点聚焦一下。&lt;/p&gt;&#xA;&lt;p&gt;当然，还有的原因就是自己的手机已经是iPhone了，没有模拟器。&lt;/p&gt;&#xA;&lt;p&gt;我相信自己，如果能用xcode编写出app后，用android studio也同样能编写出来，前提是这个点子得好，为过多人服务。&lt;/p&gt;&#xA;&lt;h3 id=&#34;0x03-删除&#34;&gt;0x03 删除&lt;/h3&gt;&#xA;&lt;h4 id=&#34;1卸载android-studio&#34;&gt;1.卸载Android Studio&lt;/h4&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;rm -Rf /Applications/Android\ Studio.app&#xA;rm -Rf ~/Library/Preferences/AndroidStudio*&#xA;rm ~/Library/Preferences/com.google.android.studio.plist&#xA;rm -Rf ~/Library/Application\ Support/AndroidStudio*&#xA;rm -Rf ~/Library/Logs/AndroidStudio*&#xA;rm -Rf ~/Library/Caches/AndroidStudio*&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;2-删除projects&#34;&gt;2. 删除Projects&lt;/h4&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;rm -Rf ~/AndroidStudioProjects&#xA;&lt;/code&gt;&lt;/pr</description>
    </item>
    <item>
      <title>再见Docker</title>
      <link>https://guobingyi.github.io/blog/%E5%86%8D%E8%A7%81docker/</link>
      <pubDate>Tue, 12 Feb 2019 10:56:46 +0800</pubDate>
      <guid>https://guobingyi.github.io/blog/%E5%86%8D%E8%A7%81docker/</guid>
      <description>&lt;h2 id=&#34;再见docker&#34;&gt;再见Docker&lt;/h2&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;刚刚开始，却又说再见！&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h3 id=&#34;0x00-缘起&#34;&gt;0x00 缘起&lt;/h3&gt;&#xA;&lt;p&gt;第一次遇到docker是由于学习go语言的时候，发现有人居然用go写了一个应用容器引擎，而且docker的使用非常方便。就那句话，“谁用谁知道”。哈哈～～&lt;/p&gt;&#xA;&lt;p&gt;今天突然发现，自己被很多东西困扰了。是时候给自己来一个断舍离了，所以就拿电脑中不经常使用的app开刀了。docker在电脑中待了很长时间了，以至于打开的时候，看看目前的版本是否修复了原来Docker.qcow2文件是否只能呆在固定位置的情况，发现已经可以随意调整了，给docker点赞的同时也决定了删除她，毕竟要给自己做断舍离的同时，也想让自己聚焦一下，太发散了，累。&lt;/p&gt;&#xA;&lt;h3 id=&#34;0x01-docker-常用命令&#34;&gt;0x01 docker 常用命令&lt;/h3&gt;&#xA;&lt;h4 id=&#34;1-查看本地可用镜像&#34;&gt;1. 查看本地可用镜像&lt;/h4&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;docker images &#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;2-查看运行的容器&#34;&gt;2. 查看运行的容器&lt;/h4&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;docker ps&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;3-查看所有的容器&#34;&gt;3. 查看所有的容器&lt;/h4&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;docker ps -a&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;4-停止容器&#34;&gt;4. 停止容器&lt;/h4&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;docker stop container&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;5-启动容器&#34;&gt;5. 启动容器&lt;/h4&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;docker start container&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;6-删除容器&#34;&gt;6. 删除容器&lt;/h4&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;docker rm container&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;7-删除镜像&#34;&gt;7. 删除镜像&lt;/h4&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;docker rmi image name&#xA;&lt;/code&gt;&lt;/pr</description>
    </item>
    <item>
      <title>Mac Tools</title>
      <link>https://guobingyi.github.io/mac/tools/</link>
      <pubDate>Tue, 15 Jan 2019 14:37:52 +0800</pubDate>
      <guid>https://guobingyi.github.io/mac/tools/</guid>
      <description>&lt;h2 id=&#34;mac下好用的工具推荐&#34;&gt;Mac下好用的工具推荐&lt;/h2&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;自从升级到Mac下后，就没有回去的勇气。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h3 id=&#34;0x00-brew&#34;&gt;0x00 brew&lt;/h3&gt;&#xA;&lt;p&gt;推荐指数：🌟🌟🌟🌟🌟&lt;/p&gt;&#xA;&lt;p&gt;开发必备。安装其它工具也变的越来越简单了。&lt;/p&gt;&#xA;&lt;p&gt;进入&lt;a href=&#34;https://brew.sh/&#34;&gt;官网&lt;/a&gt;，直接按照操作进行下载。&lt;/p&gt;&#xA;&lt;h3 id=&#34;0x01-nightowl&#34;&gt;0x01 NIGHTOWL&lt;/h3&gt;&#xA;&lt;p&gt;推荐指数：🌟🌟&lt;/p&gt;&#xA;&lt;p&gt;主题由浅色和深色的转变，如果你是一个和我一样有这样需求的人，白天浅色，晚上深色，那个这个app就不要错过。&#xA;进入&lt;a href=&#34;https://nightowl.kramser.xyz/&#34;&gt;官网&lt;/a&gt;直接下载安装即可。&lt;/p&gt;&#xA;&lt;h3 id=&#34;0x02-visual-studio-code&#34;&gt;0x02 Visual Studio Code&lt;/h3&gt;&#xA;&lt;p&gt;推荐指数：🌟🌟🌟🌟🌟&lt;/p&gt;&#xA;&lt;p&gt;微软的良心大作，一款Mac下非常给了的IDE，完全可以依赖插件的情况下，打造成为你的工作IDE。&#xA;简单，插件多，颜值高。最主要的还是开源，免费的，你值得拥有。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://code.visualstudio.com/&#34;&gt;官网地址&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;0x03-emacs&#34;&gt;0x03 Emacs&lt;/h3&gt;&#xA;&lt;p&gt;推荐指数：🌟🌟🌟🌟&lt;/p&gt;&#xA;&lt;p&gt;其实想给五星的，但是由于入门实在有点困难，所以减了一星。&lt;/p&gt;&#xA;&lt;p&gt;如果说有来生的话，我一定会选择Emacs，因为一生的时间不够把Emacs搞定。&lt;/p&gt;&#xA;&lt;p&gt;Emacs的插件可以说是重量级的，如org-mode。&lt;/p&gt;&#xA;&lt;p&gt;毕竟Emacs是老一辈人的最爱，毕竟到时候进行专注一件事情的时候了。那么你拥有了Emacs的能力后&#xA;其他的IDE都可以靠边站了，一个就够了，可以想象是多么牛的事情。&lt;/p&gt;&#xA;&lt;p&gt;开源，免费的咋就不说了，这个毕竟是Richard Stallman写的，不知道Richard Stallman自行百度吧。&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.gnu.org/software/emacs/&#34;&gt;官网地址&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;0x04-jetbrains&#34;&gt;0x04 jetbrains&lt;/h3&gt;&#xA;&lt;p&gt;推荐指数：🌟🌟🌟&lt;/p&gt;&#xA;&lt;p&gt;如果在不考虑经济基础的情况下，给五星我一点都不心疼。&lt;/p&gt;&#xA;&lt;p&gt;三星的原因是太贵了，而我又是开发人员，不喜欢在自己的电脑上安装盗版软件，so，社区版的就够用了。&lt;/p&gt;&#xA;&lt;p&gt;才踏入编程行业的时候，那个时候宝蓝（Borland）公司的Delphi给我的影响是最深的，以至于很长时间Visual Studio&#xA;才让我打破了这个观念，到现在是JetBrains。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Learn Emacs</title>
      <link>https://guobingyi.github.io/emacs/learn/</link>
      <pubDate>Sun, 13 Jan 2019 10:49:09 +0800</pubDate>
      <guid>https://guobingyi.github.io/emacs/learn/</guid>
      <description>&lt;h2 id=&#34;emasc-学习&#34;&gt;Emasc 学习&lt;/h2&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;如果说一个IDE可以用一辈子的话，那么就是Emasc。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h3 id=&#34;0x00-安装&#34;&gt;0x00 安装&lt;/h3&gt;&#xA;&lt;p&gt;目前Emacs安装提供多中方式安装，可以参考&lt;a href=&#34;https://www.gnu.org/software/emacs/&#34;&gt;官网&lt;/a&gt;进行安装。&lt;/p&gt;&#xA;&lt;h3 id=&#34;0x00-入门&#34;&gt;0x00 入门&lt;/h3&gt;&#xA;&lt;p&gt;入门其实就是看Emacs的帮助手册，C-h t调用出帮助手册，使用大约30分钟的时间看完整个文档。那么基本可以对键有一个大概的认识，还是&#xA;需要从实战中不断加深认识。&lt;/p&gt;&#xA;&lt;h3 id=&#34;0x01-看书或者视频&#34;&gt;0x01 看书或者视频&lt;/h3&gt;&#xA;&lt;p&gt;对于看书，我觉得有时候会有点枯燥，没事时间的同学可以看一下zilongshanren&lt;a href=&#34;http://book.emacs-china.org/&#34;&gt;的Spacemacs Rocks 第二季&lt;/a&gt;的文章，最好&#xA;配合着&lt;a href=&#34;http://i.youku.com/i/UMTI0ODM2MjQw/videos?spm=a2hzp.8244740.0.0&#34;&gt;视频&lt;/a&gt;看，会提高很多。&lt;/p&gt;&#xA;&lt;h3 id=&#34;0x02-学以致用&#34;&gt;0x02 学以致用&lt;/h3&gt;&#xA;&lt;p&gt;用学的目的不就是为了用嘛，怎么用，就是自己用着顺手，每次打开电脑的一件事就是启动Emasc。&lt;/p&gt;&#xA;&lt;h3 id=&#34;0x03-安心种田&#34;&gt;0x03 安心种田&lt;/h3&gt;&#xA;&lt;p&gt;将自己学到的，应用到的，将Emacs打造成自己唯一的IDE。&lt;/p&gt;&#xA;&lt;h3 id=&#34;0x04-orgmode&#34;&gt;0x04 OrgMode&lt;/h3&gt;&#xA;&lt;p&gt;对于我想一直留下来的原因，我想Orgmode占了一定的比例，毕竟在文本中能有这样强大的功能不多，而已经厌倦了word的我，这个功能让我非常迷恋。&lt;/p&gt;&#xA;&lt;p&gt;一些比较常用的功能：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 对于进度使用情况在[]填入%为百分比，/为完成情况&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; C-c C-c 改变复选框选中和取消状态&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; C-c C-t 改变todo的状态为done或者取消&lt;/p&gt;</description>
    </item>
    <item>
      <title>Mac 按键标识</title>
      <link>https://guobingyi.github.io/blog/mac-%E6%8C%89%E9%94%AE%E6%A0%87%E8%AF%86/</link>
      <pubDate>Wed, 09 Jan 2019 14:37:49 +0800</pubDate>
      <guid>https://guobingyi.github.io/blog/mac-%E6%8C%89%E9%94%AE%E6%A0%87%E8%AF%86/</guid>
      <description>&lt;h3 id=&#34;mac按键标示&#34;&gt;Mac按键标示&lt;/h3&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;一直都以为在电脑的世界里就只有Windows。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;⌘ Command&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;⇧ Shift&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;⌥ Option&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;⌃ Control&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;↩︎ Return/Enter&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;⌫ Delete&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;⌦ 向前删除键（Fn+Delete）&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;↑ 上箭头&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;↓ 下箭头&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;← 左箭头&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;→ 右箭头&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;⇞ Page Up（Fn+↑）&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;⇟ Page Down（Fn+↓）&lt;/p&gt;</description>
    </item>
    <item>
      <title>Eclipse che 在Mac下安装</title>
      <link>https://guobingyi.github.io/blog/eclipse-che-%E5%9C%A8mac%E4%B8%8B%E5%AE%89%E8%A3%85/</link>
      <pubDate>Tue, 18 Dec 2018 16:19:23 +0800</pubDate>
      <guid>https://guobingyi.github.io/blog/eclipse-che-%E5%9C%A8mac%E4%B8%8B%E5%AE%89%E8%A3%85/</guid>
      <description>&lt;h2 id=&#34;eclipse-che-在mac下安装&#34;&gt;Eclipse Che 在Mac下安装&lt;/h2&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;折腾，不断的折腾。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h3 id=&#34;0x00-安装&#34;&gt;0x00 安装&lt;/h3&gt;&#xA;&lt;p&gt;在Mac下安装Eclipse Che，推荐使用Docker的方式，避免了很多的问题。&lt;/p&gt;&#xA;&lt;p&gt;参考官方文档，&lt;a href=&#34;https://www.eclipse.org/che/docs/che-6/docker-single-user.html&#34;&gt;单用户安装&lt;/a&gt;。&lt;/p&gt;&#xA;&lt;h4 id=&#34;1-添加ip别名&#34;&gt;1. 添加IP别名&lt;/h4&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;IP=$(docker run --rm --net host eclipse/che-ip:nightly) &amp;amp;&amp;amp; sudo ifconfig en0 alias $IP&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;注：在国外的网站上用的是lo0,而我的电脑是en0。如果不能启动使用ifconfig命令查看自己的网卡信息。&lt;/p&gt;&#xA;&lt;h4 id=&#34;2-安装&#34;&gt;2. 安装&lt;/h4&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;docker run -ti -v /var/run/docker.sock:/var/run/docker.sock -v /Users/guoby/mywork/code/che-data:/data eclipse/che start&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;正常启动后，显示以下内容：&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;INFO: (che start): Use: http://localhost:8080&#xA;INFO: (che start): API: http://localhost:8080/swagger&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;在浏览器上输入：http://localhost:8080 就可以使用Eclipse Che了。&lt;/p&gt;&#xA;&lt;h4 id=&#34;3疑难杂症&#34;&gt;3.疑难杂症&lt;/h4&gt;&#xA;&lt;p&gt;遇到的问题可能千奇百怪，但是都已经被前人踩到坑了。多搜索找到问题，但是最好的问题解决地方在项目的&lt;a href=&#34;https://github.com/eclipse/che/issues&#34;&gt;issues&lt;/a&gt;。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Go Beego</title>
      <link>https://guobingyi.github.io/code/go-beego/</link>
      <pubDate>Fri, 14 Dec 2018 10:16:03 +0800</pubDate>
      <guid>https://guobingyi.github.io/code/go-beego/</guid>
      <description>&lt;h2 id=&#34;beego-tutorial&#34;&gt;beego tutorial&lt;/h2&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;无他， 但手熟尔。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h3 id=&#34;0x00-介绍&#34;&gt;0x00 介绍&lt;/h3&gt;&#xA;&lt;h4 id=&#34;1-beego-简介&#34;&gt;1. beego 简介&lt;/h4&gt;&#xA;&lt;p&gt;beego 是一个快速开发 Go 应用的 HTTP 框架，他可以用来快速开发 API、Web 及后端服务等各种应用，是一个 RESTful 的框架，主要设计灵感来源于 tornado、sinatra 和 flask 这三个框架，但是结合了 Go 本身的一些特性（interface、struct 嵌入等）而设计的一个框架。&lt;/p&gt;&#xA;&lt;h4 id=&#34;2-beego-的架构&#34;&gt;2. beego 的架构&lt;/h4&gt;&#xA;&lt;p&gt;beego 是基于八大独立的模块构建的，是一个高度解耦的框架。当初设计 beego 的时候就是考虑功能模块化，用户即使不使用 beego 的 HTTP 逻辑，也依旧可以使用这些独立模块，例如：你可以使用 cache 模块来做你的缓存逻辑；使用日志模块来记录你的操作信息；使用 config 模块来解析你各种格式的文件。所以 beego 不仅可以用于 HTTP 类的应用开发，在你的 socket 游戏开发中也是很有用的模块，这也是 beego 为什么受欢迎的一个原因。大家如果玩过乐高的话，应该知道很多高级的东西都是一块一块的积木搭建出来的，而设计 beego 的时候，这些模块就是积木，高级机器人就是 beego。至于这些模块的功能以及如何使用会在后面的文档逐一介绍。&lt;/p&gt;&#xA;&lt;h4 id=&#34;3-beego-的执行逻辑&#34;&gt;3. beego 的执行逻辑&lt;/h4&gt;&#xA;&lt;p&gt;既然 beego 是基于这些模块构建的，那么它的执行逻辑是怎么样的呢？beego 是一个典型的 MVC 架构。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Go Tutorial</title>
      <link>https://guobingyi.github.io/code/go-tutorial/</link>
      <pubDate>Thu, 13 Dec 2018 14:28:45 +0800</pubDate>
      <guid>https://guobingyi.github.io/code/go-tutorial/</guid>
      <description>&lt;h2 id=&#34;go-tutorial&#34;&gt;Go Tutorial&lt;/h2&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;学习一门语言最好的方式，就是熟读其文档。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h3 id=&#34;0x00-安装&#34;&gt;0x00 安装&lt;/h3&gt;&#xA;&lt;p&gt;安装go语言是件轻松的事情，如果安装都非常困难，那么还有什么好说的。&lt;/p&gt;&#xA;&lt;h4 id=&#34;mac下安装&#34;&gt;Mac下安装&lt;/h4&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;brew install go &#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;windows下安装&#34;&gt;Windows下安装&lt;/h4&gt;&#xA;&lt;p&gt;推荐使用MSI installer方式安装，一直Next下去就可以了。&lt;/p&gt;&#xA;&lt;h3 id=&#34;0x01-helloworld&#34;&gt;0x01 Hello,world!&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;package main&#xA;&#xA;import (&#xA;&#x9;&amp;#34;fmt&amp;#34;&#xA;)&#xA;&#xA;// Print Hello,world!&#xA;func main() {&#xA;&#x9;fmt.Printf(&amp;#34;Hello,World!&amp;#34;)&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;0x01-文档查阅&#34;&gt;0x01 文档查阅&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;godoc -http=:6060&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;0x02-入门&#34;&gt;0x02 入门&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;文档介绍如何安装&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;http://localhost:6060/doc/install&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;ol start=&#34;2&#34;&gt;&#xA;&lt;li&gt;如何编写go语言&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;http://localhost:6060/doc/code.html&#xA;&lt;/code&gt;&lt;/pr</description>
    </item>
    <item>
      <title>Centos Service</title>
      <link>https://guobingyi.github.io/blog/centos-service/</link>
      <pubDate>Mon, 10 Dec 2018 10:45:23 +0800</pubDate>
      <guid>https://guobingyi.github.io/blog/centos-service/</guid>
      <description>&lt;h1 id=&#34;centos7-创建服务&#34;&gt;Centos7 创建服务&lt;/h1&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;用多了Windows后，才发现其实还是有很多选择的。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;在Centos下使用服务，还是因为公司有几个项目每次都需要手动去启动，麻烦。所以充分发挥程序员的懒惰。&#xA;原来在Windows下用过服务，觉得还是用的挺方便的。但是用得了Centos下的服务后，才发现什么叫做方便，&#xA;好用。&lt;/p&gt;&#xA;&lt;h2 id=&#34;0x00-编写服务-myserviceservice&#34;&gt;0x00 编写服务 myservice.service&lt;/h2&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# auto start&#xA;[Unit]&#xA;Description=Start MyService  #服务描述&#xA;After=mysql.service          #字面翻译就是等mysql服务器启动后，再启动&#xA;&#xA;[Service]&#xA;Type=forking                 #后台运行&#xA;TimeoutSec=0                 #设置永不超时&#xA;&#xA;ExecStart=/opt/server-shell/start.sh  #服务运行命令&#xA;ExecStop=/opt/server-shell/stop.sh    #服务停止命令&#xA;PrivateTmp=true                        #分配临时空间&#xA;&#xA;[Install] &#xA;WantedBy=multi-user.target             #多用户&#xA;&lt;/code&gt;&lt;/pr</description>
    </item>
    <item>
      <title>brew 使用指南</title>
      <link>https://guobingyi.github.io/blog/brew-%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/</link>
      <pubDate>Thu, 08 Nov 2018 11:22:28 +0800</pubDate>
      <guid>https://guobingyi.github.io/blog/brew-%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/</guid>
      <description>&lt;h2 id=&#34;brew-使用指南&#34;&gt;brew 使用指南&lt;/h2&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;自从用了brew，就在也不想离开mac系统了。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h4 id=&#34;0x00安装brew&#34;&gt;0x00安装brew&lt;/h4&gt;&#xA;&lt;p&gt;访问&lt;a href=&#34;https://brew.sh&#34;&gt;brew官网&lt;/a&gt;，根据提示进行安装。&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;/usr/bin/ruby -e &amp;#34;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&amp;#34;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;0x01使用brew安装软件&#34;&gt;0x01使用brew安装软件&lt;/h4&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;brew install wget&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;0x02使用brew更新软件&#34;&gt;0x02使用brew更新软件&lt;/h4&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;brew update&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;更新使用brew安装的软件&lt;/p&gt;&#xA;&lt;h4 id=&#34;0x03使用brew执行更新&#34;&gt;0x03使用brew执行更新&lt;/h4&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;brew upgrade&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;所以，一般都使用组合命令进行执行&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;brew update &amp;amp;&amp;amp; brew upgrade&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;0x04-使用cleanup执行删除老更新包&#34;&gt;0x04 使用cleanup执行删除老更新包&lt;/h4&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;brew cleanup&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;0x05-cask下的安装与删除&#34;&gt;0x05 cask下的安装与删除&lt;/h4&gt;&#xA;&lt;p&gt;安装&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;brew cask install name&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;卸载&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;brew cask uninstall name   &#xA;&lt;/code&gt;&lt;/pr</description>
    </item>
    <item>
      <title>快速下载所需的Jar</title>
      <link>https://guobingyi.github.io/blog/%E5%BF%AB%E9%80%9F%E4%B8%8B%E8%BD%BD%E6%89%80%E9%9C%80%E7%9A%84jar/</link>
      <pubDate>Tue, 06 Nov 2018 10:06:02 +0800</pubDate>
      <guid>https://guobingyi.github.io/blog/%E5%BF%AB%E9%80%9F%E4%B8%8B%E8%BD%BD%E6%89%80%E9%9C%80%E7%9A%84jar/</guid>
      <description>&lt;h3 id=&#34;使用maven下载jar到本地&#34;&gt;使用maven下载jar到本地&lt;/h3&gt;&#xA;&lt;p&gt;原来使用Java进行项目开发的时候，都是使用浏览器一个一个jar进行下载，放到lib目录中使用。&#xA;最近，发现使用maven的效率更高，所以，使用该方法。&lt;/p&gt;&#xA;&lt;h3 id=&#34;1创建一个pomxml文件&#34;&gt;1.创建一个pom.xml文件。&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;lt;?xml version=&amp;#34;1.0&amp;#34;?&amp;gt;&#xA;&amp;lt;project&#xA;    xmlns=&amp;#34;http://maven.apache.org/POM/4.0.0&amp;#34;&#xA;    xmlns:xsi=&amp;#34;http://www.w3.org/2001/XMLSchema-instance&amp;#34; xsi:schemaLocation=&amp;#34;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&amp;#34;&amp;gt;&#xA;    &amp;lt;modelVersion&amp;gt;4.0.0&amp;lt;/modelVersion&amp;gt;&#xA;    &amp;lt;groupId&amp;gt;com.bingyi&amp;lt;/groupId&amp;gt;&#xA;    &amp;lt;artifactId&amp;gt;test&amp;lt;/artifactId&amp;gt;&#xA;    &amp;lt;version&amp;gt;1.0-SNAPSHOT&amp;lt;/version&amp;gt;&#xA;    &amp;lt;repositories&amp;gt;&#xA;        &amp;lt;!-- &amp;lt;repository&amp;gt;&amp;lt;id&amp;gt;central-repos2&amp;lt;/id&amp;gt;&amp;lt;name&amp;gt;Central Repository 2&amp;lt;/name&amp;gt;&amp;lt;url&amp;gt;http://repo.spring.io/plugins-release&amp;lt;/url&amp;gt;&amp;lt;/repository&amp;gt; --&amp;gt;&#xA;        &amp;lt;!-- &amp;lt;repository&amp;gt;&amp;lt;id&amp;gt;maven.net.cn&amp;lt;/id&amp;gt;&amp;lt;name&amp;gt;oneof the central mirrors in china&amp;lt;/name&amp;gt;&amp;lt;url&amp;gt;http://maven.net.cn/content/groups/public/&amp;lt;/url&amp;gt;&amp;lt;/repository&amp;gt; --&amp;gt;&#xA;       &#xA;        &amp;lt;repository&amp;gt;&#xA;            &amp;lt;id&amp;gt;oschina-repos&amp;lt;/id&amp;gt;&#xA;            &amp;lt;name&amp;gt;Oschina Releases&amp;lt;/name&amp;gt;&#xA;            &amp;lt;url&amp;gt;http://maven.oschina.net/content/groups/public&amp;lt;/url&amp;gt;&#xA;        &amp;lt;/repository&amp;gt;&#xA;        &amp;lt;!-- &amp;lt;repository&amp;gt;&amp;lt;id&amp;gt;alimaven&amp;lt;/id&amp;gt;&amp;lt;name&amp;gt;aliyun maven&amp;lt;/name&amp;gt;&amp;lt;url&amp;gt;http://maven.aliyun.com/nexus/content/groups/public/&amp;lt;/url&amp;gt;&amp;lt;/repository&amp;gt; --&amp;gt;&#xA;        &amp;lt;!-- &amp;lt;repository&amp;gt;&amp;lt;id&amp;gt;central&amp;lt;/id&amp;gt;&amp;lt;name&amp;gt;Maven Repository Switchboard&amp;lt;/name&amp;gt;&amp;lt;url&amp;gt;http://repo1.maven.org/maven2/&amp;lt;/url&amp;gt;&amp;lt;/repository&amp;gt; --&amp;gt;&#xA;    &amp;lt;/repositories&amp;gt;&#xA;    &amp;lt;dependencies&amp;gt;&#xA;        &amp;lt;!-- TODO: add you need jar --&amp;gt;&#xA;        &amp;lt;dependency&amp;gt;&#xA;            &amp;lt;groupId&amp;gt;org.jasypt&amp;lt;/groupId&amp;gt;&#xA;            &amp;lt;artifactId&amp;gt;jasypt&amp;lt;/artifactId&amp;gt;&#xA;            &amp;lt;version&amp;gt;1.8&amp;lt;/version&amp;gt;&#xA;            &amp;lt;exclusions&amp;gt;&#xA;                &amp;lt;exclusion&amp;gt;&#xA;                    &amp;lt;groupId&amp;gt;org.slf4j&amp;lt;/groupId&amp;gt;&#xA;                    &amp;lt;artifactId&amp;gt;slf4j-api&amp;lt;/artifactId&amp;gt;&#xA;                &amp;lt;/exclusion&amp;gt;&#xA;            &amp;lt;/exclusions&amp;gt;&#xA;        &amp;lt;/dependency&amp;gt;&#xA;    &amp;lt;/dependencies&amp;gt;&#xA;&amp;lt;/project&amp;gt;&#xA;&lt;/code&gt;&lt;/pr</description>
    </item>
    <item>
      <title>Dbeaver</title>
      <link>https://guobingyi.github.io/opensource/dbeaver/</link>
      <pubDate>Tue, 23 Oct 2018 10:52:14 +0800</pubDate>
      <guid>https://guobingyi.github.io/opensource/dbeaver/</guid>
      <description>&lt;h2 id=&#34;dbeaver项目&#34;&gt;Dbeaver项目&lt;/h2&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;好项目，如何生存下去？&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;官方项目地址：https://github.com/dbeaver/dbeaver&lt;/p&gt;&#xA;&lt;p&gt;官方项目介绍：https://dbeaver.io/&lt;/p&gt;&#xA;&lt;p&gt;开始听到DBeaver的时候，是一位同事在用，没有留意。&lt;/p&gt;&#xA;&lt;p&gt;最主要的是想让自己的苹果电脑上少安装一些盗版软件，而做的真正的支持正版软件。&lt;/p&gt;&#xA;&lt;p&gt;我评价一个好的开源项目，应该是下载源码后，能直接编译成功的。&lt;/p&gt;&#xA;&lt;p&gt;当然，在编译DBeaver的时候也有一些小插曲，都已经解决了，并且成功编译，所以过了我自己评定好开源项目的第一关。&lt;/p&gt;&#xA;&lt;p&gt;以下是编译的过程中出现的一些问题：&lt;/p&gt;&#xA;&lt;p&gt;1.1 编译中下载插件无法下载。&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;需要翻墙，找个可以访问外网资源的软件就可以了，mac系统下推荐RocketVPN。&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;1.2 编译报错。&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;[INFO] org.jkiss.utils 2.1.78-SNAPSHOT .................... FAILURE [  2.394 s]&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;问题是由于我手贱升级了java到11导致的，这个时候手动设置一下JAVA_HOME路径。&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;export JAVA_HOME=/Library/Java/JavaVirtualMachines/jdk1.8.0_45.jdk/Contents/Home&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;ps. 遇到问题可以到项目中的Issues中查找，80%都能解决问题。&lt;/p&gt;&#xA;&lt;p&gt;编译成功后会在在dbeaver/product/standalone/target/products/org.jkiss.dbeaver.core.product下产生三个平台的安装文件。&lt;/p&gt;&#xA;&lt;p&gt;至此，编译完成。&lt;/p&gt;&#xA;&lt;p&gt;从这个开源项目中可以花时间看一下，java语言开发的项目如何生成三个平台（linux,macosx,win32)的安装问题。&lt;/p&gt;&#xA;&lt;p&gt;有时间需要弄明白的地方？&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Java如何编译成跨平台的项目？&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;为何来维系这个开源项目，虽然本项目也分为社区版和企业版？&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;</description>
    </item>
    <item>
      <title>12year</title>
      <link>https://guobingyi.github.io/life/12year/</link>
      <pubDate>Fri, 05 Oct 2018 16:05:26 +0800</pubDate>
      <guid>https://guobingyi.github.io/life/12year/</guid>
      <description>&lt;h2 id=&#34;12年的同学聚会&#34;&gt;12年的同学聚会&lt;/h2&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;转眼间，12年飞逝。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;我还是非常期待这次同学聚会的。所以，我在知道后就把行程安排好了，同时也把火车票买了。做到，风雨无阻。&lt;/p&gt;&#xA;&lt;p&gt;要去的头天晚上，好好还不让我去，她不想离开我。其实，我真的担心，在我去的时候她在家里哭闹，但是没有。&lt;/p&gt;&#xA;&lt;p&gt;去的时候有点期待，毕竟是12年没有见到的同学，是不是应该有很多的话要说呢？&lt;/p&gt;&#xA;&lt;p&gt;早上起来就期待着这次聚会，梳洗好后准备要走的时候，好好起床了，告诉我不让我走，但是我告诉她，这次爸爸要去的，是去见12年前的大学同学，好好在纠缠了一会也就放弃了，她只是希望我不要喝酒。然后，让我帮她带点礼物。&lt;/p&gt;&#xA;&lt;p&gt;早上的昆明一样的堵，更何况下过雨。原本想做公交车的，还是害怕时间来不及还是打车了。师傅是个本地人，一上来就开始吐槽昆明的交警各种乱收费。&lt;/p&gt;&#xA;&lt;p&gt;来到取票厅，我才发现，我早点来是对的，人山人海。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://guobingyi.github.io/img/12year/IMG_3588.JPG&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;高铁票是老婆帮买的，第一次还是有点紧张，不知道要怎么出票，恩，说明我好久没有一个人出来了，也说明好多事情都是老婆代劳的。但是，30多岁的经验告诉我，不会弄，是可以看看别人是怎么弄的就可以了。所以，我也没有刻意的去想，就想着看自己前面的人，学着人家弄就可以了。然后开始看视频广告，一看不得了。原来是告诉大家，做高铁的时候，千万不要睡过头了，原来说的公交车睡过了，没有问题，就多几个站而已，高铁就惨了，睡过了，就从楚雄到大理了。所以，最让我警惕的是，不能睡觉。&lt;/p&gt;&#xA;&lt;p&gt;买了票进站后，才发现人还是非常的多，看到许多人的行头都是去大理玩的，很多年轻人，带着行李箱，一个人踏上了旅程。我甚至还看到一个母亲带着小孩旅游的，不得不佩服。如果让我一个人带的话，我是没有信心的。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://guobingyi.github.io/img/12year/IMG_3589.JPG&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;火车上的时间是漫长的，因为心中期待这这次聚会，期待着自己给自己一个面对自己的时间。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://guobingyi.github.io/img/12year/IMG_3597.JPG&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;在忍住了没有睡觉后，感觉随时都有可能到楚雄。摘掉了耳机，听着到播报“楚雄站，到了”的时候，就非常兴奋。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://guobingyi.github.io/img/12year/IMG_3602.JPG&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;下站后的第一时间就是先把回来的车票出了，因为来楚雄的时候，让我感受到售票处的人还是那么多，我可能就不能正常回昆明了。公交车和出租车还是比较多的，我看了一眼可以到桃源湖的9路公交车就上去了，还好有一个座位。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://guobingyi.github.io/img/12year/IMG_3604.JPG&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;我知道，其实我今天来的还是挺早的，但是我不想先到组委会那边，因为我想自己先走走。走一走自己曾经走过的路，看一看原来在的地方。&lt;/p&gt;&#xA;&lt;p&gt;下车后，从河边开始走起，原来分为老城区和新城区就是靠这条河来进行分离的。而最近的一个公园就是龙江公园。&#xA;&lt;img src=&#34;https://guobingyi.github.io/img/12year/ljgy.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;继续往前走，顺着原来熟悉的路，向前走。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://guobingyi.github.io/img/12year/yuanlu.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;这栋楼原来是楚雄州的昆明新知图书城，我曾经我最喜欢的一个地方，喜欢在这里买书，看一些新的技术。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://guobingyi.github.io/img/12year/IMG_3608.JPG&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;电信大楼，我的第一个电话就是这里买的哦。我来这个地方就做两件事，来弄小灵通的事，或者就是每个月打款了。&#xA;原来上学的时候，每个月都是父亲打款过来的。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://guobingyi.github.io/img/12year/IMG_3609.JPG&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Upgrade</title>
      <link>https://guobingyi.github.io/blog/upgrade/</link>
      <pubDate>Mon, 27 Aug 2018 20:52:12 +0800</pubDate>
      <guid>https://guobingyi.github.io/blog/upgrade/</guid>
      <description>&lt;h3 id=&#34;upgrade-升级&#34;&gt;Upgrade 升级&lt;/h3&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://guobingyi.github.io/img/upgrade.png&#34; alt=&#34;升级&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;一次偶然的机会在网上看到了一部片子叫《升级》，刚刚看到的时候感觉不到什么，都没有想到要去下载下来看一下。因为最近加班已经没有精力去看电影了，但是听说非常不错，也就下载了，找了一个时间段，将电影看了一下，感觉还真不错。&lt;/p&gt;&#xA;&lt;p&gt;首先，看到精彩的地方是几点：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;一个机械师在家中的地下室陶腾他的那台老车，看是风格迥异，甚至我都感觉是不是在看赛车的节目。但是，可以看到的是，这个男猪脚的手艺不错，经过一番捣腾后，发动机还是响起了。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;画风一改，老婆做车无人驾驶汽车来，而且还可以在车上进行视频电话，完全可以抛现在的无人驾驶车好几条街。老婆为了和老公早点见面，匆匆挂断电话，导致我一度怀疑是不是，这个通电话的人买凶杀了老婆。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;超豪华的家，带上人工智能，在茶几上进行查看新闻和手指操作，让这个人工智能家居变得更加高大上。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;无人机值守，让整个区域都变成了监控范围。但是，也存在很多漏洞，掌控权在高级的用户上手，而所有有权限的，都可以进行篡改。在科技面前所有的东西都可以变的虚拟，所有的东西又都可以伪装。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;其实，在人工智能获取到最高权限就意味着人类已经被人工智能控制。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;在看完后，还是有许多让人思考的地方，比如前段时间看到的匿名者（anon）,都在说人工智能的事情，但是好在anon的人工智能还掌控在人类的手上，而升级却已经完全被人工智能掌握。最讽刺的是，人类总喜欢虚拟世界，这个和我们在玩的游戏有什么不同呢？我们都在现实生活中获取不到乐趣。那么，是否在虚拟世界里就可以活下去。这个又和《黑客帝国》中的人物一样，是否人到最后都是被圈养呢？可以让人进行无限的思考，如果现实社会不能让人感到快乐，那么是否在虚拟世界就让人快乐了。人类追求的到底是什么呢？好像非常矛盾，想让科技带给人类便捷的同时，却又害怕被科技替代。在电影中的科技，看似非常智能化，但是同样也可以让人感受到这种科技离我们越来越近，面临的是我们如何去看待这些科技。做为一个程序员，虽然非常想去实现这些科技，但是同时也为这种后果去思考。人类是否真的要被自己玩坏呢？&lt;/p&gt;&#xA;&lt;p&gt;或许写代码也有这种感觉，感觉写一个脚本就可以完成好多自动化工作，甚至感觉所有的控制权都交给了系统。但是，或多或少，都会让我们感觉到，控制权必须掌握在自己手中，才有主动权。而在获取这种感觉的时候，都是通过不断的升级代码来完成的。当代码有自己的思维时候，或许我们也就要下岗了。&lt;/p&gt;&#xA;&lt;p&gt;当主角说主动权交给人工智能后，每次结果都主角大吃一惊的时候，我就感觉到这种感觉非常不好，因为已经不可控制了。或许在这个时候，最好的选择就是放弃吧，但是又有多少人可以做到呢？&lt;/p&gt;</description>
    </item>
    <item>
      <title>Visual Studio Code</title>
      <link>https://guobingyi.github.io/code/vscode/</link>
      <pubDate>Fri, 24 Aug 2018 16:10:52 +0800</pubDate>
      <guid>https://guobingyi.github.io/code/vscode/</guid>
      <description>&lt;h2 id=&#34;visual-studio-code-插件&#34;&gt;Visual Studio Code 插件&lt;/h2&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;近来对Visual Studio Code的使用频率越来越高，也同时对微软出的这款免费IDE越来越喜欢。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h3 id=&#34;1settings-sync&#34;&gt;1.Settings Sync&lt;/h3&gt;&#xA;&lt;p&gt;对于使用不同电脑进行开发的人，最喜欢的就是同一个IDE，相同的配置。所以Settings Sync可以解决这个问题。详细的使用还是参考帮助文档，对了，前提是你得注册了一个github账号。&lt;/p&gt;&#xA;&lt;h3 id=&#34;2-project-manager&#34;&gt;2. Project Manager&lt;/h3&gt;&#xA;&lt;p&gt;其实这个功能就是为了在不同的项目中快速切换。恩，好用。&lt;/p&gt;&#xA;&lt;h3 id=&#34;3-rest-client&#34;&gt;3. REST Client&lt;/h3&gt;&#xA;&lt;p&gt;REST 客户端允许你直接发送 HTTP 请求并在 Visual Studio Code 中查看响应。比PostMan简单，但是可以在IDE中直接使用也不错。&lt;/p&gt;&#xA;&lt;h3 id=&#34;4-todo-tree&#34;&gt;4. Todo Tree&lt;/h3&gt;&#xA;&lt;p&gt;写惯了TODO，用这个就可以由个想eclipse的效果，感觉还不错。&lt;/p&gt;&#xA;&lt;h3 id=&#34;5-night-owl&#34;&gt;5. Night Owl&lt;/h3&gt;&#xA;&lt;p&gt;晚上编码的时候可以用一下这个皮肤效果，不错。&lt;/p&gt;&#xA;&lt;h3 id=&#34;6-markdownlint&#34;&gt;6. markdownlint&lt;/h3&gt;&#xA;&lt;p&gt;使用hugo编写博客的时候，用到最多的插件，因为可以边写边看效果。&lt;/p&gt;&#xA;&lt;h3 id=&#34;7-gocrubypythoncc&#34;&gt;7. GO/C#/Ruby/Python/C/C++&lt;/h3&gt;&#xA;&lt;p&gt;语言插件，根据自己使用来进行安装，但是像我这样，什么都想弄一下的，都装了。&lt;/p&gt;&#xA;&lt;h3 id=&#34;8-git-history&#34;&gt;8. Git History&lt;/h3&gt;&#xA;&lt;p&gt;git项目提交后，git历史信息。&lt;/p&gt;&#xA;&lt;h3 id=&#34;9gitlens&#34;&gt;9.GitLens&lt;/h3&gt;&#xA;&lt;p&gt;git项目提交信息和提交时间点信息。&lt;/p&gt;&#xA;&lt;h3 id=&#34;10-minify&#34;&gt;10. minify&lt;/h3&gt;&#xA;&lt;p&gt;将javascript文件变为min格式，好用。原来都是在eclipse中使用相应的插件，现在visual studio code 也有了。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Others</title>
      <link>https://guobingyi.github.io/code/others/</link>
      <pubDate>Thu, 09 Aug 2018 11:39:34 +0800</pubDate>
      <guid>https://guobingyi.github.io/code/others/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;Don&amp;rsquo;t be evil&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h2 id=&#34;记录一些奇怪的错误&#34;&gt;记录一些奇怪的错误&lt;/h2&gt;&#xA;&lt;h3 id=&#34;0x00-swift控制端启动错误&#34;&gt;0x00 swift控制端启动错误&lt;/h3&gt;&#xA;&lt;p&gt;每次在控制台输入swift的时候，都会报这个错：&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;bingyideMacBook-Pro:~ guoby$ swift&#xA;Traceback (most recent call last):&#xA;  File &amp;#34;&amp;lt;input&amp;gt;&amp;#34;, line 1, in &amp;lt;module&amp;gt;&#xA;  File &amp;#34;/usr/local/Cellar/python@2/2.7.15_1/Frameworks/Python.framework/Versions/2.7/lib/python2.7/copy.py&amp;#34;, line 52, in &amp;lt;module&amp;gt;&#xA;    import weakref&#xA;  File &amp;#34;/usr/local/Cellar/python@2/2.7.15_1/Frameworks/Python.framework/Versions/2.7/lib/python2.7/weakref.py&amp;#34;, line 14, in &amp;lt;module&amp;gt;&#xA;    from _weakref import (&#xA;ImportError: cannot import name _remove_dead_weakref&#xA;Welcome to Apple Swift version 4.1.2 (swiftlang-902.0.54 clang-902.0.39.2). Type :help for assistance.&#xA;&lt;/code&gt;&lt;/pr</description>
    </item>
    <item>
      <title>Test-driven development with Go</title>
      <link>https://guobingyi.github.io/code/test-drivendevelopmentwithgo/</link>
      <pubDate>Tue, 07 Aug 2018 17:48:14 +0800</pubDate>
      <guid>https://guobingyi.github.io/code/test-drivendevelopmentwithgo/</guid>
      <description>&lt;h2 id=&#34;介绍&#34;&gt;介绍&lt;/h2&gt;&#xA;&lt;p&gt;使用Go语言进行驱动开发。&lt;/p&gt;&#xA;&lt;h3 id=&#34;讲什么&#34;&gt;讲什么&lt;/h3&gt;&#xA;&lt;p&gt;本书将讲解如何使用一个在线服务创建二维码，仅仅使用Go自带的框架。&lt;/p&gt;&#xA;&lt;p&gt;二维条形码可以编写各种信息。许多智能手机都用扫描二维码的应用程序，你可能以前看见过，如果没有，下面就是典型的二维码信息：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://guobingyi.github.io/img/qrcode.png&#34; alt=&#34;qrcode&#34;&gt;&lt;/p&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;p&gt;在本书的结尾将由一个完整的例子，使用http服务来创建二维码。在此过程中，你讲学习到Go语言的一些特性和其标准库用法以及测试驱动开发。&lt;/p&gt;&#xA;&lt;h3 id=&#34;预期读者&#34;&gt;预期读者&lt;/h3&gt;&#xA;&lt;p&gt;本书的读者需要有一定的编程基础，如果没有学习过Go,请点击&lt;a href=&#34;http://tour.golang.org/&#34;&gt;此处&lt;/a&gt;进行学习。&lt;/p&gt;&#xA;&lt;h3 id=&#34;要求&#34;&gt;要求&lt;/h3&gt;&#xA;&lt;p&gt;在阅读本书前，你需要准备以下工具：&lt;/p&gt;&#xA;&lt;h4 id=&#34;go&#34;&gt;Go&lt;/h4&gt;&#xA;&lt;p&gt;Go语言环境是本书中的唯一要求。你可以从其官网进行下载安装。如果你的操作系统是OS X，可以使用Homebrew进行安装。&#xA;大多数的Linux都已经在包管理器中加入了Go。&lt;/p&gt;&#xA;&lt;h4 id=&#34;一个终端&#34;&gt;一个终端&lt;/h4&gt;&#xA;&lt;p&gt;使用Go语言的最佳途径就是使用终端。大多数的Linux系统使用其自动的终端shell，苹果用户可以使用Terminal.app；而&#xA;windows用户可以使用Cygwin或Git Bash。&lt;/p&gt;&#xA;&lt;h4 id=&#34;一个编辑器&#34;&gt;一个编辑器&lt;/h4&gt;&#xA;&lt;p&gt;最终，你将使用一个编辑器来进行编码。编辑器有非常多的选择，然而Sublime Text看起来非常流行。默认的&#xA;Go配置插件，Emasc和Vim都有提供。&lt;/p&gt;&#xA;&lt;p&gt;翻译者：推荐Visual Studio Code，好用，免费。&lt;/p&gt;&#xA;&lt;h3 id=&#34;代码实例&#34;&gt;代码实例&lt;/h3&gt;&#xA;&lt;h4 id=&#34;go代码&#34;&gt;Go代码&lt;/h4&gt;&#xA;&lt;p&gt;本书包含大量代码示例。 Go代码是最突出的，这样的代码总是用文件名和行号注释; 这些数字不一定从1开始，但在写入时请参考文件中的位置。 每个片段都包含文件名作为其标题，通常后面跟着一些纯文本注释。&lt;/p&gt;&#xA;&lt;p&gt;fragment.go&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;mi&#34;&gt;17&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;r&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;Receiver&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;MyFunc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;mi&#34;&gt;18&lt;/span&gt; &#x9;&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Anything&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;mi&#34;&gt;19&lt;/span&gt; &#x9;&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Even more&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;mi&#34;&gt;20&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pr</description>
    </item>
    <item>
      <title>健康</title>
      <link>https://guobingyi.github.io/life/health/</link>
      <pubDate>Tue, 07 Aug 2018 09:00:19 +0800</pubDate>
      <guid>https://guobingyi.github.io/life/health/</guid>
      <description>&lt;h3 id=&#34;自己的健康问题&#34;&gt;自己的健康问题&lt;/h3&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;如果不是生死问题，所有的问题都是小问题。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h4 id=&#34;肾结石&#34;&gt;肾结石&lt;/h4&gt;&#xA;&lt;p&gt;从来都没有想到过自己会得这样的病，但是还是得了。&lt;/p&gt;&#xA;&lt;p&gt;下面是医生开的结石药：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;热淋清颗粒&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://guobingyi.github.io/img/rlqkl.png&#34; alt=&#34;热淋清颗粒&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;疗效我感觉就是在尿血的时候喝，到底起不起用不知道，反正吃了好多盒，石头依然在。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;舒泌通胶囊&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://guobingyi.github.io/img/sbtjn.jpg&#34; alt=&#34;舒泌通胶囊&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;打石药，也是吃了好多盒，石头依然在。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;结石通胶囊&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://guobingyi.github.io/img/jstjn.jpg&#34; alt=&#34;结石通胶囊&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;打石药，和上面差不多，或许是因为上面的不起作用，换这种的吧，好几盒，石头依然在。&lt;/p&gt;&#xA;&lt;h4 id=&#34;糖尿病&#34;&gt;糖尿病&lt;/h4&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;阿卡波糖片&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://guobingyi.github.io/img/akbtp.png&#34; alt=&#34;阿卡波糖片&#34;&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;骨化三醇胶丸&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://guobingyi.github.io/img/ghscjw.png&#34; alt=&#34;骨化三醇胶丸&#34;&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;盐酸二甲双胍片&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://guobingyi.github.io/img/ysejsgp.png&#34; alt=&#34;盐酸二甲双胍片&#34;&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;碳酸钙D3片&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://guobingyi.github.io/img/tsd3p.png&#34; alt=&#34;碳酸钙D3片&#34;&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;门冬胰岛素&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://guobingyi.github.io/img/mdyds.png&#34; alt=&#34;门冬胰岛素&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>GameOfThrones</title>
      <link>https://guobingyi.github.io/blog/gameofthrones/</link>
      <pubDate>Sat, 04 Aug 2018 15:20:33 +0800</pubDate>
      <guid>https://guobingyi.github.io/blog/gameofthrones/</guid>
      <description>&lt;h2 id=&#34;冰与火之歌&#34;&gt;冰与火之歌&lt;/h2&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;很早的时候就有人推荐给我看，但是我一直都沉迷在《行尸走肉》中。觉得美剧中，没有比《行尸走肉》更好看的了。其实，我错了，大错特错。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h3 id=&#34;0x00-狼家-史塔克&#34;&gt;0x00 狼家 史塔克&lt;/h3&gt;&#xA;&lt;p&gt;从第一季就被鸿达的场面所吸引了，在此之前，我在看《天行健》这本书，也是感觉不错。但是还是被《冰与火之歌》吸引了。&lt;/p&gt;&#xA;&lt;p&gt;在全剧中，我最喜欢的一句话就是凛冬将至（Winter is coming）。看似平静的生活，也会被无情的打乱。对于平静的北境，来自异鬼的威胁，来自国王罗伯的邀请。看似艾德·史塔克要开始新的生活，想不到是死路一条。一直以为的主角，到头来，谁也不敢猜测。&lt;/p&gt;&#xA;&lt;h3 id=&#34;0x01-鹿家-罗伯&#34;&gt;0x01 鹿家 罗伯&lt;/h3&gt;&#xA;&lt;p&gt;鹿家非常搞笑。&lt;/p&gt;&#xA;&lt;h3 id=&#34;0x02-龙家&#34;&gt;0x02 龙家&lt;/h3&gt;&#xA;&lt;p&gt;龙妈真的很惨。&lt;/p&gt;&#xA;&lt;h3 id=&#34;0x03-玫瑰家&#34;&gt;0x03 玫瑰家&lt;/h3&gt;&#xA;&lt;p&gt;荆棘女王。&lt;/p&gt;&#xA;&lt;h3 id=&#34;0x04-狮子家&#34;&gt;0x04 狮子家&lt;/h3&gt;&#xA;&lt;p&gt;“有债必还”是狮子家的人非常自豪的话。&lt;/p&gt;&#xA;&lt;p&gt;小拇指说了一句话叫：“知识就是权力！”，而王后马上就说：“权力就是权力！”。非常经典。&lt;/p&gt;&#xA;&lt;h3 id=&#34;0x05-守夜人&#34;&gt;0x05 守夜人&lt;/h3&gt;&#xA;&lt;p&gt;守夜人可以说是非常大公无私的，但是从守夜人的来源上看，又是地位非常卑微的人。&lt;/p&gt;&#xA;&lt;h3 id=&#34;0x06-鹰家&#34;&gt;0x06 鹰家&lt;/h3&gt;&#xA;&lt;p&gt;鹰家给我的感觉就是没有好好的教育好下一代，让儿子非常随着母亲。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Centos7搭建ftp服务</title>
      <link>https://guobingyi.github.io/blog/centos7%E6%90%AD%E5%BB%BAftp%E6%9C%8D%E5%8A%A1/</link>
      <pubDate>Fri, 27 Jul 2018 09:42:51 +0800</pubDate>
      <guid>https://guobingyi.github.io/blog/centos7%E6%90%AD%E5%BB%BAftp%E6%9C%8D%E5%8A%A1/</guid>
      <description>&lt;h1 id=&#34;centos7-搭建ftp服务&#34;&gt;Centos7 搭建ftp服务&lt;/h1&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;其实，我需求的很简单，你别讲的那么复杂。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;第一次在centos7下搭建ftp服务，原来在redhat下搭建过，但是忘记了怎么搭建了。尴尬了，所以就重头开始。我的需求很简单，就是一个ftp服务，去掉匿名登录后，有个用户和密码，能将文件放到上面就完了。好了，需求有了，我用百度搜了“centos7 ftp服务搭建”，一大堆网页跑出了，我选择了一些常用的地方，比如csdn,博客园，红黑联盟。但是非常失望，没有一个地方可以很清楚的讲解清楚，如果照着页面上的做，那么可能会进入一个死结，但是文章中又没有提到该怎么解，反正人家是成功的，你的就不成功。郁闷！这就陷入另外的一个处境，你不得不尝试其他文章的方法，这样一折腾，一个早上，或者一天就结束了。希望我能在这里将我遇到的坑，和怎么解决的方法告诉大家，避免走弯路。&lt;/p&gt;&#xA;&lt;h2 id=&#34;0x00-安装vsftpd&#34;&gt;0x00 安装vsftpd&lt;/h2&gt;&#xA;&lt;p&gt;如果centos下没有安装vsftpd，那么就你就直接安装:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;yum install vsftpd&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;如果安装了，那么就直接卸载了。&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;yum remove vsftpd&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;卸载后需要注意以下问题：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;查看线程是否存在&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;ps auxf | grep vsftpd&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;如果线程存在则直接 kill -9 .&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;如果/etc/vsftpd文件夹存在，先删除在重新安装。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;即：在重新安装前，全部vsftpd的线程不存在，文件夹为最新。&lt;/p&gt;&#xA;&lt;h2 id=&#34;0x01-配置信息&#34;&gt;0x01 配置信息&lt;/h2&gt;&#xA;&lt;p&gt;ftp服务的配置信息路径为：&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;/etc/vsftpd/vsftpd.conf&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;一般对照配置修改以下内容：&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#禁用匿名用户登录&#xA;anonymous_enable=NO&#xA;#是否允许本地用户登录&#xA;chroot_local_user=YES&#xA;#ftp根目录&#xA;local_root=/ftpserver/flowdata&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;0x02-创建本地用户&#34;&gt;0x02 创建本地用户&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;创建ftp用户&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;useradd jack&#xA;&lt;/code&gt;&lt;/pr</description>
    </item>
    <item>
      <title>Anon</title>
      <link>https://guobingyi.github.io/blog/anon/</link>
      <pubDate>Sat, 14 Jul 2018 16:46:13 +0800</pubDate>
      <guid>https://guobingyi.github.io/blog/anon/</guid>
      <description>&lt;h3 id=&#34;匿名者&#34;&gt;匿名者&lt;/h3&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;What you look for every day of your life.Why you&amp;rsquo;ll never understand.It&amp;rsquo;s not that I have something to hide&amp;hellip; I hava nothing I want you to see.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;最近看了一部电影《匿名者》。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://guobingyi.github.io/img/anon.png&#34; alt=&#34;匿名者&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;刚刚开始看的时候，还是被影片中的电脑特技给征服了。看到这种通过眼睛来进行扫描人员信息的时候，还是联想到了谷歌的glass。但是唯一的区别在于谷歌glass是可以摘下来的，而电影里的是每个人都被种植到了眼睛了，并且不能被摘除。如果被入侵了，那么人就瞎了。而且所谓的记忆，也会被删除。&lt;/p&gt;&#xA;&lt;p&gt;不可否认，这样将主动权都交给了电脑，会提高相对的安全。但是，更多的是不安全。所以，电影里的女主角才启动了隐藏算法。越是绝对的控制，越是不安全。&lt;/p&gt;&#xA;&lt;p&gt;隐私问题也是一个非常大的问题。现在人们越来越注重个人隐私。但是，在电影中，统治者将所有人的隐私进行统一管理，警察可以查看每个人的隐私，当然hacker也可以。就是说，我们的隐私被放到服务器上，有权限的人都可以看到。想想都恐怖，如果人没有了隐私，是不是社会会更安全。&lt;/p&gt;&#xA;&lt;p&gt;在推特上也看到，现在社会中使用脸部采集，每个人去过什么地方，都会被该地方的监控录入，然后进行分析。就是说，如果你没有做什么，或者没有人来调用监控，那么你的隐私是安全的。但是如果有人调用了，那么你就没有什么所谓的隐私可言。&lt;/p&gt;&#xA;&lt;p&gt;对于隐私来说，应该是双刃剑。用的好，可以造福人类，用的不好，也可以危害人类。电影中的去除影像技术，就是给犯罪人员逃脱法律制裁。而犯罪的依据有通过个人的视角来评定。所以，从电影中看出，这个系统是存在非常大的严重bug的。&lt;/p&gt;&#xA;&lt;p&gt;结论就是，任何技术，任何规则，都不能摆脱人性。人之初，性本善。突然想到了《僵尸世界大战》上的13人原则，当12个人都同意的时候，必须有1个人来推翻12人。没有绝对的东西，事物都是两面性的。&lt;/p&gt;&#xA;&lt;p&gt;害怕，将来会有这么一天。虽然是写代码的，但是也不能将所有的东西都交于代码。或许，有种说法叫返璞归真。太过于依赖技术，不如不用技术。我一直相信，科技只能听命于人类，而非让科技来主动指导人类。太多，太多的科幻片，都直奔主题，说科技导致了人类毁灭。但是，我觉得，《匿名者》这部电影，隐晦的道出了这个道理。而这种技术，离我们却又那么近。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Kafka</title>
      <link>https://guobingyi.github.io/blog/kafka/</link>
      <pubDate>Fri, 13 Jul 2018 19:46:58 +0800</pubDate>
      <guid>https://guobingyi.github.io/blog/kafka/</guid>
      <description>&lt;h2 id=&#34;学习kafka&#34;&gt;学习kafka&lt;/h2&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;学习技术的过程中，我慢慢习惯去官网看看，不管学习什么。从什么时候开始，当我听说，别人讲给的听的感觉，就像人吃东西，然后在喂给你的时候。听着非常恶心。从营养角度来说，吃被人吐出来的东西，营养已经被消化了一部分。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h3 id=&#34;0x00-开始&#34;&gt;0x00 开始&lt;/h3&gt;&#xA;&lt;h4 id=&#34;kafka的官网&#34;&gt;kafka的官网&lt;/h4&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;http://kafka.apache.org/&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;什么是kafka&#34;&gt;什么是kafka&lt;/h4&gt;&#xA;&lt;p&gt;Apache Kafka是由Apache软件基金会开发的一个开源消息系统项目，由Scala写成。Kafka最初是由LinkedIn开发，并于2011年初开源。2012年10月从Apache Incubator毕业。该项目的目标是为处理实时数据提供一个统一、高通量、低等待的平台。&#xA;Kafka是一个分布式的、分区的、多复本的日志提交服务。它通过一种独一无二的设计提供了一个消息系统的功能。&lt;/p&gt;&#xA;&lt;h3 id=&#34;0x01-kafka常用命令&#34;&gt;0x01 kafka常用命令&lt;/h3&gt;&#xA;&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&amp;amp;保证在关闭shell窗口后能继续运行&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;在windows下将.sh改为.bat,“/”改为“\”&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;开启zookeeper&#34;&gt;开启ZooKeeper&lt;/h4&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;bin/zookeeper-server-start.sh config/zookeeper.properties &amp;amp;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;开启kafka服务&#34;&gt;开启kafka服务&lt;/h4&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;bin/kafka-server-start.sh config/server.properties &amp;amp;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;ps.如果通过终端进入，不要直接关闭终端，使用exit命令关闭，不然会出现kafka进程全部关闭的情况。&lt;/p&gt;&#xA;&lt;h4 id=&#34;创建一个主题&#34;&gt;创建一个主题&lt;/h4&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;bin/kafka-topics.sh --create --zookeeper localhost:2181 --replication-factor 1 --partitions 1 --topic test&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;列举主题&#34;&gt;列举主题&lt;/h4&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;bin/kafka-topics.sh --list --zookeeper localhost:2181&#xA;&lt;/code&gt;&lt;/pr</description>
    </item>
    <item>
      <title>begin start learn c language</title>
      <link>https://guobingyi.github.io/blog/begin-start-learn-c-language/</link>
      <pubDate>Mon, 09 Jul 2018 09:18:07 +0800</pubDate>
      <guid>https://guobingyi.github.io/blog/begin-start-learn-c-language/</guid>
      <description>&lt;h2 id=&#34;c学习笔记&#34;&gt;C学习笔记&lt;/h2&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;c语言是大学里的入门语言，时隔十多年后，又开始学习。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h3 id=&#34;0x00-工具&#34;&gt;0x00 工具&lt;/h3&gt;&#xA;&lt;p&gt;工欲善其事必先利其器。&lt;/p&gt;&#xA;&lt;h4 id=&#34;调试工具&#34;&gt;调试工具&lt;/h4&gt;&#xA;&lt;p&gt;在苹果电脑上直接使用gdb进行调试会存在一定的问题。所以最好的调试环境还是放到了docker上，或者直接使用了vs code 进行调试。因为这种那种的原因，所以最终还是决定使用vs code 进行ide。&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;gdb调试&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;在苹果系统中gdb调试各种不爽，sudo后也有其他问题；代码签名也有问题。反正就是苹果系统不推荐你使用就行了，别折腾太伤。本来是学习c语言的，绕了一大圈发现会在max os上使用gdb了。&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;lldb调试&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;苹果系统上推荐使用lldb进行调试c语言。所以想在mac os上调试，就用它吧，别和自己过不去。&lt;/p&gt;&#xA;&lt;h4 id=&#34;ide&#34;&gt;IDE&lt;/h4&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;Visual studio code&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;微软推出的，免费。&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;emacs&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;这个不用说了吧，神器。但是，很难！&lt;/p&gt;&#xA;&lt;h4 id=&#34;make&#34;&gt;make&lt;/h4&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;用过ant的都知道，ant是学习make写的。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;要想真正的了解make，还是在于读一遍文档吧。&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;https://www.gnu.org/software/make/manual/make.pdf&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;在读一遍陈浩大神的makefile教程。&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;https://blog.csdn.net/haoel/article/details/2886&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;这个地址将陈浩大神的帖子整理了一下。&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;https://blog.csdn.net/weixin_38391755/article/details/80380786&#xA;&lt;/code&gt;&lt;/pr</description>
    </item>
    <item>
      <title>Ruby</title>
      <link>https://guobingyi.github.io/code/ruby/</link>
      <pubDate>Wed, 04 Jul 2018 23:21:56 +0800</pubDate>
      <guid>https://guobingyi.github.io/code/ruby/</guid>
      <description>&lt;h2 id=&#34;ruby-学习笔记&#34;&gt;Ruby 学习笔记&lt;/h2&gt;</description>
    </item>
    <item>
      <title>Go</title>
      <link>https://guobingyi.github.io/code/go/</link>
      <pubDate>Wed, 04 Jul 2018 23:21:20 +0800</pubDate>
      <guid>https://guobingyi.github.io/code/go/</guid>
      <description>&lt;h2 id=&#34;go语言学习笔记&#34;&gt;go语言学习笔记&lt;/h2&gt;</description>
    </item>
    <item>
      <title>初探Shell</title>
      <link>https://guobingyi.github.io/blog/%E5%88%9D%E6%8E%A2shell/</link>
      <pubDate>Wed, 04 Jul 2018 19:54:52 +0800</pubDate>
      <guid>https://guobingyi.github.io/blog/%E5%88%9D%E6%8E%A2shell/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;You got to put the past behind you before you can move on.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;由于项目上的需要开始接触shell，其实shell早就有过接触，只不过这次接触了，深入的思考了。&lt;/p&gt;&#xA;&lt;h2 id=&#34;0x00-为什么用shell&#34;&gt;0x00 为什么用shell?&lt;/h2&gt;&#xA;&lt;p&gt;原来学习一门语言的时候都会这样问自己？但是大多数的答案都是：项目上需要。没有思考的余地，也就没有深入的思考。&lt;/p&gt;&#xA;&lt;p&gt;现在开始用到，也学习了python,ruby,swift,javascript后发现，shell有她自身更好的发挥余地。比如我们经常会使用的命令cd,hugo server,git add -A等。别小看这些命令，一个一个来，还是要输入一会的。程序员不就图个安逸，一个shell脚本搞定的事情，为什么要多来输入几次呢？在举个例子，如果终端只有一个，那么要看tomcat的日志，还要更新类，那么就会来回的路径下切换，如果不用文本记录下来，光敲路径就花费很长的时间，so，用个shell脚本就可以解决了。当然，这个例子也不能说明shell的强大之处，那么这个例子就是shell的重要用途了。在零部署的时候，需要安装一些组件，数据库，初始化数据库脚本，注册服务，启动服务，关机。整个流程可以说一气呵成，但是如果是人工的话，那么想想工作量也是吓人的，这还不包括部署多台服务器呢。&lt;/p&gt;&#xA;&lt;p&gt;如果是安装系统，会非常喜欢ghost版本，安装就step by step。而shell就提供了这样功能。当然有人会说python也一样搞定。是的，不可否认，但是如果python自身也需要安装库呢？所以，shell独天得厚的优势在于系统自带的同时，还可以自动安装所需的命令。&lt;/p&gt;&#xA;&lt;p&gt;结论就是：如果你需要将命令step by step执行，那么就选择shell吧。&lt;/p&gt;&#xA;&lt;h2 id=&#34;0x01-helloworld&#34;&gt;0x01 Hello,World!&lt;/h2&gt;&#xA;&lt;p&gt;每个学习程序设计的开始都会是这个，也因为这个才从此入坑。&lt;/p&gt;&#xA;&lt;p&gt;创建文件hello.sh,输入一下内容：&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#!/bin/bash&#xA;echo &amp;#39;Hello.World!&amp;#39;&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;在终端中使用sh hello.sh,将输出以下结果：&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Hello,World!&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;恭喜你，入门了。&lt;/p&gt;&#xA;&lt;p&gt;思考：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;为什么第一行会有个#!/bin/bash&lt;/li&gt;&#xA;&lt;li&gt;echo 可以用单引号，也可以用双引号，区别是什么？&lt;/li&gt;&#xA;&lt;li&gt;如果要让shell脚步可以直接运行，怎么做？&lt;/li&gt;&#xA;&lt;li&gt;如何文件后缀是php,那么有该如何做呢？&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;0x02-变量&#34;&gt;0x02 变量&lt;/h2&gt;&#xA;&lt;p&gt;shell的变量命令基本和常用语言(pythoh/ruby/java/go)基本差不多，目前还没有遇到过坑。&lt;/p&gt;&#xA;&lt;h3 id=&#34;那么如何定义一个变量呢&#34;&gt;那么如何定义一个变量呢？&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;someone=&amp;#34;Lee&amp;#34;&#xA;some_two=&amp;#34;http://10.10.10.222&amp;#34;&#xA;&lt;/code&gt;&lt;/pr</description>
    </item>
    <item>
      <title>倚天屠龙记读后感</title>
      <link>https://guobingyi.github.io/blog/%E5%80%9A%E5%A4%A9%E5%B1%A0%E9%BE%99%E8%AE%B0%E8%AF%BB%E5%90%8E%E6%84%9F/</link>
      <pubDate>Sun, 24 Jun 2018 22:11:31 +0800</pubDate>
      <guid>https://guobingyi.github.io/blog/%E5%80%9A%E5%A4%A9%E5%B1%A0%E9%BE%99%E8%AE%B0%E8%AF%BB%E5%90%8E%E6%84%9F/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;个性，决定了一个人未来能走多远。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;金庸的小说一直都是自己喜欢的。从高中开始，读的第一本书是《鹿鼎记》，那个时候是老师要求读的，原来都不知道有金庸这个人。从此一发不可收拾，开始追读金庸的小说。到大学的时候，由于金庸的小说有限，所以一直省着读。工作后，读了《笑傲江湖》，近期读了《倚天屠龙记》。&lt;/p&gt;&#xA;&lt;p&gt;张无忌这个人的角色，开始就是一个悲情的角色。让人从开始就非常心疼他，关心他。正所谓，天无绝人之路，掉进山洞，学到了九阳真经。治好了自己体内的玄冰之毒，而且也学到了上乘武功。从这里开始，大家都觉得应该是登山人生巅峰。可是，如果这样小说就没有太多意义了。人性贯穿到金庸的小说中，都是宣扬着“正气”，而要突出这些“正气”，就要从多个方面来说明。真善美，假恶臭。在小说中，这几个人被刻画的非常形象生动。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;张三丰&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;张三丰，一个小和尚，自己开创了武当门派。或许，也只有大师才能有如此的造诣。对待生活的态度，不是一板一拍；对待世间的事，也不是循规蹈矩。当然，武功上的造诣，更是独自悟道，发明了太极心法。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;谢逊&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;爱恨分明，敢作敢当。对家人的爱，超出你的想象。聪明，不是说出来的。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;小昭&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;如果说要和张无忌比惨的话，小昭算一个。能这样忍辱负重，并最后实现人生目标的人，真的，厉害。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;周芷若&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;我竟然自己想到了周芷若的剧情，想她应该是前朝皇帝的女儿才这样希望张无忌能掌管大权的。其实，我真的想多了。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;赵敏&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;手段不是一般的厉害，和张无忌的妈妈有得一拼。因为电影了，演员是同一个赵敏，所以这两个角色真是难分，同时也感慨张敏的演的真好。&lt;/p&gt;&#xA;&lt;p&gt;在小说中，每个人物都刻画的非常深刻。或许也只有金庸才能将这些人物写的那么鲜活。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Think</title>
      <link>https://guobingyi.github.io/blog/think/</link>
      <pubDate>Fri, 22 Jun 2018 09:41:18 +0800</pubDate>
      <guid>https://guobingyi.github.io/blog/think/</guid>
      <description>&lt;h3 id=&#34;想法很多&#34;&gt;想法很多&lt;/h3&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;自从没有在游戏上花费太多的时间，现在想法也很多。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h4 id=&#34;1用hugo搭建自己的博客&#34;&gt;1.用hugo搭建自己的博客&lt;/h4&gt;&#xA;&lt;p&gt;现在已经使用了，但是感觉样式不怎么好看，慢慢在来改了。&lt;/p&gt;&#xA;&lt;p&gt;不管怎么说，一切的开始，虽然难，但是都在前进就好！&lt;/p&gt;&#xA;&lt;h4 id=&#34;2用docker中的centos来搭建开发环境&#34;&gt;2.用docker中的centos来搭建开发环境&lt;/h4&gt;&#xA;&lt;p&gt;因为自己的系统是macos，所以很多代码不一定能跑起来，比如dbdk。所以就想用docker的方式来搭建一个开放平台，这样即使换了电脑或则系统，都可以使用docker把镜像导入进来。思路而已，还要考虑的问题如下：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;如何将镜像进行备份和同步；&lt;/p&gt;&#xA;&lt;p&gt;初步的想法是docker将镜像导出，然后git到github上进行存储。但是这些都是需要压缩和加密的。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;如何将实体机的开发环境弱化；&lt;/p&gt;&#xA;&lt;p&gt;目前的开发环境都在本机的实体机上，所以想要弱化就必须考虑到一些开发ide，比如java的eclipse。想到用eclipse che来替代，就看docker是否能支持的好了。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;3尝试着写本书&#34;&gt;3.尝试着写本书&lt;/h4&gt;&#xA;&lt;p&gt;这个就是一个伏笔了，希望能带来惊喜。当然，这个仅仅是生活的一部分，如果依赖就抱有太大的希望，就太给自己压力了。&lt;/p&gt;&#xA;&lt;p&gt;先学着写吧。&lt;/p&gt;&#xA;&lt;h4 id=&#34;4科技改变生活&#34;&gt;4.科技改变生活&lt;/h4&gt;&#xA;&lt;p&gt;我觉得先从自己的生活改变开始，让自己的工作效率更高。为了达到这边目标，先从以下几点做起：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;使用shell脚本，将自己常用的命令进行一个封装；&lt;/li&gt;&#xA;&lt;li&gt;将一些程序中经常使用的工具进行汇总，供shell脚本使用；&lt;/li&gt;&#xA;&lt;li&gt;自己编写代码，提供没有的工具。&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>About</title>
      <link>https://guobingyi.github.io/about/</link>
      <pubDate>Fri, 22 Jun 2018 09:36:13 +0800</pubDate>
      <guid>https://guobingyi.github.io/about/</guid>
      <description>&lt;p&gt;别人笑我太疯癫，我笑他人看不穿。&lt;/p&gt;&#xA;&lt;p&gt;技能&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Java&lt;/li&gt;&#xA;&lt;li&gt;golang&lt;/li&gt;&#xA;&lt;li&gt;python&lt;/li&gt;&#xA;&lt;li&gt;ruby&lt;/li&gt;&#xA;&lt;li&gt;c/c++&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Contact</title>
      <link>https://guobingyi.github.io/contact/</link>
      <pubDate>Fri, 22 Jun 2018 09:23:35 +0800</pubDate>
      <guid>https://guobingyi.github.io/contact/</guid>
      <description>&lt;p&gt;怎么联系我，邮箱吧！&lt;/p&gt;&#xA;&lt;p&gt;但是，不一定回。 ：）&lt;/p&gt;</description>
    </item>
    <item>
      <title>Think</title>
      <link>https://guobingyi.github.io/post/think/</link>
      <pubDate>Thu, 21 Jun 2018 18:52:37 +0800</pubDate>
      <guid>https://guobingyi.github.io/post/think/</guid>
      <description>&lt;h3 id=&#34;想法很多&#34;&gt;想法很多&lt;/h3&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;自从没有在游戏上花费太多的时间，现在想法也很多。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h4 id=&#34;1用hugo搭建自己的博客&#34;&gt;1.用hugo搭建自己的博客&lt;/h4&gt;&#xA;&lt;p&gt;现在已经使用了，但是感觉样式不怎么好看，慢慢在来改了。&lt;/p&gt;&#xA;&lt;p&gt;不管怎么说，一切的开始，虽然难，但是都在前进就好！&lt;/p&gt;&#xA;&lt;h4 id=&#34;2用docker中的centos来搭建开发环境&#34;&gt;2.用docker中的centos来搭建开发环境&lt;/h4&gt;&#xA;&lt;p&gt;因为自己的系统是macos，所以很多代码不一定能跑起来，比如dbdk。所以就想用docker的方式来搭建一个开放平台，这样即使换了电脑或则系统，都可以使用docker把镜像导入进来。思路而已，还要考虑的问题如下：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;如何将镜像进行备份和同步；&lt;/p&gt;&#xA;&lt;p&gt;初步的想法是docker将镜像导出，然后git到github上进行存储。但是这些都是需要压缩和加密的。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;如何将实体机的开发环境弱化；&lt;/p&gt;&#xA;&lt;p&gt;目前的开发环境都在本机的实体机上，所以想要弱化就必须考虑到一些开发ide，比如java的eclipse。想到用eclipse che来替代，就看docker是否能支持的好了。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h4 id=&#34;3尝试着写本书&#34;&gt;3.尝试着写本书&lt;/h4&gt;&#xA;&lt;p&gt;这个就是一个伏笔了，希望能带来惊喜。当然，这个仅仅是生活的一部分，如果依赖就抱有太大的希望，就太给自己压力了。&lt;/p&gt;&#xA;&lt;p&gt;先学着写吧。&lt;/p&gt;&#xA;&lt;h4 id=&#34;4科技改变生活&#34;&gt;4.科技改变生活&lt;/h4&gt;&#xA;&lt;p&gt;我觉得先从自己的生活改变开始，让自己的工作效率更高。为了达到这边目标，先从以下几点做起：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;使用shell脚本，将自己常用的命令进行一个封装；&lt;/li&gt;&#xA;&lt;li&gt;将一些程序中经常使用的工具进行汇总，供shell脚本使用；&lt;/li&gt;&#xA;&lt;li&gt;自己编写代码，提供没有的工具。&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>About Me</title>
      <link>https://guobingyi.github.io/about_old/</link>
      <pubDate>Tue, 19 Jun 2018 22:28:42 +0800</pubDate>
      <guid>https://guobingyi.github.io/about_old/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;别人笑我太疯癫，我笑他人看不穿。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;喜欢程序设计，致力于将终身奉献给程序设计。&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt; talk is cheap,show me the code!&#xA;&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>Config</title>
      <link>https://guobingyi.github.io/post/config/</link>
      <pubDate>Sat, 16 Jun 2018 00:00:56 +0800</pubDate>
      <guid>https://guobingyi.github.io/post/config/</guid>
      <description>&lt;h3 id=&#34;看一下hugo的配置&#34;&gt;看一下hugo的配置&lt;/h3&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;当初觉得为什么hugo可以比beego那么多star,现在可以理解了。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;因为用go开发web的人，没有使用hugo创建自己博客的多。&lt;/p&gt;&#xA;&lt;p&gt;来一个图片的例子：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://guobingyi.github.io/post/pic/test.gif&#34; alt=&#34;程序员&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>One</title>
      <link>https://guobingyi.github.io/post/one/</link>
      <pubDate>Fri, 15 Jun 2018 23:50:17 +0800</pubDate>
      <guid>https://guobingyi.github.io/post/one/</guid>
      <description>&lt;h3 id=&#34;测试为什么图像没有&#34;&gt;测试为什么图像没有&lt;/h3&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;原来都有的，现在没有？&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;我觉得就是哪里配置的问题。&lt;/p&gt;&#xA;&lt;p&gt;** 粗体 **&lt;/p&gt;</description>
    </item>
    <item>
      <title>Good</title>
      <link>https://guobingyi.github.io/post/good/</link>
      <pubDate>Fri, 15 Jun 2018 23:45:20 +0800</pubDate>
      <guid>https://guobingyi.github.io/post/good/</guid>
      <description>&lt;h3 id=&#34;测试一下中文是否支持&#34;&gt;测试一下中文是否支持&lt;/h3&gt;</description>
    </item>
    <item>
      <title>Test</title>
      <link>https://guobingyi.github.io/post/test/</link>
      <pubDate>Fri, 15 Jun 2018 23:31:47 +0800</pubDate>
      <guid>https://guobingyi.github.io/post/test/</guid>
      <description>&lt;h1 id=&#34;test-my-blog&#34;&gt;Test my blog&lt;/h1&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;new day will come,wzry go away!&lt;/p&gt;&#xA;&lt;/blockquote&gt;</description>
    </item>
    <item>
      <title>Newday</title>
      <link>https://guobingyi.github.io/post/newday/</link>
      <pubDate>Fri, 15 Jun 2018 23:30:41 +0800</pubDate>
      <guid>https://guobingyi.github.io/post/newday/</guid>
      <description>&lt;h3 id=&#34;hellohugo&#34;&gt;Hello,Hugo!&lt;/h3&gt;</description>
    </item>
  </channel>
</rss>
